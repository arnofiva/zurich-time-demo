import{aO as a,ag as e,aP as s,ah as r,ai as o,aQ as p,ak as m}from"./index-70a1e848.js";import{E as n}from"./I3SMeshView3D-74f48a84.js";import{n as l}from"./LayerView3D-a480bbae.js";import{u as d}from"./LayerView-fa72efbb.js";import"./I3SOverrides-f724f567.js";import"./I3SNode-2b3c2c48.js";import"./I3SUtil-0d0882d1.js";import"./I3SBinaryReader-b93e280e.js";import"./ReactiveSet-eabb3c3b.js";import"./meshFeatureSet-a5b908a3.js";import"./External-5bb4f949.js";import"./FeatureSet-20ce479f.js";import"./FeatureLayerView3D-3f0d81ef.js";import"./FeatureLayerViewBase3D-596ac4f8.js";import"./FeatureLikeLayerView3D-72eddda9.js";import"./dehydratedFeatureComparison-01107244.js";import"./queryForSymbologySnapping-4b1b166f.js";import"./elevationInfoUtils-d483be9b.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-d17b3cec.js";import"./rendererConversion-f2d7d312.js";import"./optimizedFeatureQueryEngineAdapter-68a83ac4.js";import"./PooledRBush-a82b8470.js";import"./quickselect-cd6fa001.js";import"./popupUtils-85d853d6.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-7a150f90.js";import"./WhereClause-813f9607.js";import"./TimeOnly-5ca21580.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-d4e69d8a.js";import"./utils-e4f79b61.js";import"./generateRendererUtils-45001f16.js";import"./FeatureStore-502a78b3.js";import"./BoundsStore-7941b063.js";import"./projectExtentUtils-b83cb1bf.js";import"./query-329b2ac1.js";import"./pbfQueryUtils-2cf66e2d.js";import"./pbf-b60d46d3.js";import"./queryZScale-47976d5a.js";import"./EventedSet-cf12acd8.js";import"./RefreshableLayerView-ea970069.js";import"./SceneModification-f535d834.js";import"./persistable-11a51d0d.js";import"./resourceExtension-e91c0a13.js";import"./SceneLayerWorker-18445ad8.js";const c=.2;let t=class extends n(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?c:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),e),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),e),"modifications")}};r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"i3slayer",null),r([o(p)],t.prototype,"updatingProgress",void 0),r([o()],t.prototype,"updatingProgressValue",null),r([o()],t.prototype,"lodFactor",null),r([o({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([m("esri.views.3d.layers.SceneLayerView3D")],t);const st=t;export{st as default};
