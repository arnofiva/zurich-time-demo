import{e as J}from"./Segment-ec50fd17.js";import{as as k,gS as K,lU as g,lV as L,lW as Q,bd as tt,lX as et,bh as st,hE as nt,hD as at,lY as it,lZ as rt,l_ as G,dh as F}from"./index-8b5e7d9b.js";const gt={readOnly:!0,get(){return J(this.view)}};var x;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(x||(x={}));function O(t){if(!t)return null;if(L(t)&&t.wkid){const s=Q[t.wkid];if(s)return s}const e=t.wkt2||t.wkt;if(e){const s=ot(e);if(s)return s}return null}function ot(t){const e=et.exec(t);if(!e||e.length!==2)return null;const s=e[1].split(",");if(!s||s.length<3)return null;const n=parseFloat(s[1]),a=parseFloat(s[2]);return isNaN(n)||isNaN(a)?null:{a:n,f:a===0?0:1/a}}function ct(t){const e=O(t??tt.WGS84);if(ht(e))return e;const s=e.a*(1-e.f);return Object.assign(e,{b:s,eSq:1-(s/e.a)**2,radius:(2*e.a+s)/3,densificationRatio:1e4/((2*e.a+s)/3)})}function ht(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function lt(t){return O(t)!==null}function vt(t,e="meters"){if(!t)throw new k("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(n=>!lt(n.spatialReference)))throw new k("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const s=[];for(let n=0;n<t.length;n++){const a=t[n],{spatialReference:m}=a,v=a.type==="polyline"?a.paths:a.rings;let r=0;for(let _=0;_<v.length;_++){const o=v[_];let f=0;for(let d=1;d<o.length;d++){const R=o[d-1][0],$=o[d][0],w=o[d-1][1],h=o[d][1];if(w!==h||R!==$){const c=new ut;ft(c,[R,w],[$,h],m),f+=c.distance}}r+=f}r=K(r,"meters",e),s.push(r)}return s}class ut{constructor(e=0,s=void 0,n=void 0){this.distance=e,this.azimuth=s,this.reverseAzimuth=n}}function ft(t,e,s,n){const a=e[0]*g,m=e[1]*g,v=s[0]*g,r=s[1]*g,{a:_,b:o,f,radius:d}=ct(n),R=v-a,$=Math.atan((1-f)*Math.tan(m)),w=Math.atan((1-f)*Math.tan(r)),h=Math.sin($),c=Math.cos($),z=Math.sin(w),l=Math.cos(w);let y,A,M,i,b,S,U,N,P,E,D=1e3,u=R;do{if(U=Math.sin(u),N=Math.cos(u),M=Math.sqrt(l*U*(l*U)+(c*z-h*l*N)*(c*z-h*l*N)),M===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;b=h*z+c*l*N,S=Math.atan2(M,b),P=c*l*U/M,A=1-P*P,i=b-2*h*z/A,isNaN(i)&&(i=0),E=f/16*A*(4+f*(4-3*A)),y=u,u=R+(1-E)*f*P*(S+E*M*(i+E*b*(2*i*i-1)))}while(Math.abs(u-y)>1e-12&&--D>0);if(D===0){const X=d,Y=Math.acos(Math.sin(m)*Math.sin(r)+Math.cos(m)*Math.cos(r)*Math.cos(v-a))*X,j=v-a,Z=Math.sin(j)*Math.cos(r),B=Math.cos(m)*Math.sin(r)-Math.sin(m)*Math.cos(r)*Math.cos(j),H=Math.atan2(Z,B);return t.azimuth=H/g,t.distance=Y,t.reverseAzimuth=void 0,t}const p=A*(_*_-o*o)/(o*o),q=p/1024*(256+p*(p*(74-47*p)-128)),C=o*(1+p/16384*(4096+p*(p*(320-175*p)-768)))*(S-q*M*(i+q/4*(b*(2*i*i-1)-q/6*i*(4*M*M-3)*(4*i*i-3)))),I=Math.atan2(l*Math.sin(u),c*z-h*l*Math.cos(u)),V=Math.atan2(c*Math.sin(u),c*z*Math.cos(u)-h*l);return t.azimuth=I/g,t.distance=C,t.reverseAzimuth=V/g,t}function _t(t,e){if(st(e,0,0,0),t.length>0){for(let s=0;s<t.length;++s)nt(e,e,t[s]);at(e,e,1/t.length)}}function zt(t,e,s,n){n.projectToRenderScreen(t,T),n.projectToRenderScreen(e,W),it(s,Mt,dt),rt(s,s)}const T=G(),dt=T,W=G(),Mt=W;class Rt{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=F(this._spatialReference,1),this._metersPerElevationUnit=F(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{lt as M,ut as R,gt as a,ft as b,_t as c,x as e,zt as i,Rt as t,vt as y};
