import{hM as H,df as U,as as f,ch as B,aj as K,gt as X,cJ as Y,bi as T,iS as L,ah as s,kL as ee,aL as R,cF as te,ai as n,ak as E,aG as M,ao as ie,fb as re,ap as se,cU as oe,bd as ae,aS as ne,at as le,d6 as I,em as ue,dC as x,iK as P,iF as pe,cj as de,iG as ye,go as ce,ax as G,dT as he,fk as F,au as me,iL as fe,az as d,kM as ge,cm as $,gH as A,cH as D,cX as be,fs as we,aB as ve,kN as Fe}from"./index-8b5e7d9b.js";import"./UniqueValueRenderer-176db886.js";import{o as _e,m as Se,u as Te}from"./jsonUtils-3d6448c4.js";import{D as Ie,y as Ee}from"./FeatureLayerBase-56c03a7a.js";import{i as $e}from"./editsZScale-03b9f186.js";import{t as N}from"./queryZScale-9dee68ff.js";import{d as V}from"./FeatureSet-05a1ff98.js";import{i as De}from"./APIKeyMixin-9d7343aa.js";import{l as je}from"./ArcGISService-1771a240.js";import{a as Oe}from"./BlendLayer-dce91235.js";import{o as Ce}from"./CustomParametersMixin-45f14a7d.js";import{F as Me}from"./EditBusLayer-3babd061.js";import{p as qe}from"./FeatureEffectLayer-50d5188d.js";import{c as Le}from"./FeatureReductionLayer-826e078c.js";import{u as Re}from"./OperationalLayer-5c10068f.js";import{c as xe}from"./OrderedLayer-b68b3bb4.js";import{j as Pe}from"./PortalLayer-c3739096.js";import{t as Ge}from"./ScaleRangeLayer-5b526f5a.js";import{a as Ae,d as Ne}from"./TemporalLayer-683091de.js";import{I as Je,m as ke,b as Ve,c as Qe,C as We,y as Ze,p as ze}from"./commonProperties-60f31277.js";import{Q as He,T as Ue,R as Be,M as Ke,D as Xe,m as Ye,w as et,b as tt,g as it,x as rt,j as st,I as ot,q as at,F as nt,A as lt,O as ut,P as pt,E as dt,S as yt,f as J}from"./featureLayerUtils-d891b150.js";import{p as Q}from"./FeatureTemplate-0e5c0008.js";import{n as W}from"./FeatureType-347e5e8f.js";import{s as ct}from"./fieldProperties-49b9eb67.js";import{C as ht}from"./LabelClass-06cdad9c.js";import{i as j}from"./labelingInfo-4784a348.js";import{a as mt}from"./serviceCapabilitiesUtils-1513785a.js";import{e as ft}from"./versionUtils-e8eeb271.js";import{b as gt,K as bt}from"./Query-630c5d65.js";import{t as wt}from"./styleUtils-f17e2eb8.js";import{S as _}from"./TopFeaturesQuery-268791e0.js";import{p as vt}from"./popupUtils-6f3d55df.js";import"./ColorStop-ac9a118d.js";import"./diffUtils-3ed1f592.js";import"./colorRamps-cf6fa9ce.js";import"./DictionaryLoader-1a1ab2cc.js";import"./FieldsIndex-85e142d0.js";import"./heatmapUtils-3c0e0ece.js";import"./LayerFloorInfo-5c97dc41.js";import"./jsonUtils-16d33138.js";import"./FeatureEffect-40ff6b77.js";import"./FeatureFilter-5ab88729.js";import"./FeatureReductionSelection-4ea33fb1.js";import"./MD5-715f37cd.js";import"./ElevationInfo-36952bdf.js";import"./featureQueryAll-778379dd.js";import"./AttachmentQuery-ac66f9a7.js";import"./RelationshipQuery-249800df.js";import"./defaults-4b2d7493.js";import"./defaultsJSON-59981e75.js";let Ft=0,g=class extends H.LoadableMixin(U(M)){constructor(e){super(e),this._idToClientGraphic=null,this.type="memory"}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}get _workerGeometryType(){const e=this.layer?.geometryType;return e?this._geometryTypeRequiresClientGraphicMapping(e)?"polygon":e:null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}async queryFeatures(e,t={}){await this.load(t);const i=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);N(e,this.layer.spatialReference,i);const r=V.fromJSON(i);if(!this._requiresClientGraphicMapping())return r;const a=this.layer.objectIdField;for(const l of r.features){const p=l.attributes[a],y=this._idToClientGraphic.get(p);y&&(l.geometry=y.geometry)}return r.geometryType=this.layer.geometryType,r}async queryFeaturesJSON(e,t={}){if(this._requiresClientGraphicMapping())throw new f("query-features-json:unsupported","Cannot query in JSON format for client only geometry types (mesh and extent)");await this.load(t);const i=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return N(e,this.layer.spatialReference,i),i}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(i=>({count:i.count,extent:B.fromJSON(i.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}async _applyEdits(e){if(!this._connection)throw new f("feature-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField;let i=null;const r=[],a=[];await Promise.all([this._prepareClientMapping(e.addFeatures,null),this._prepareClientMapping(e.updateFeatures,null)]);const l=u=>"objectId"in u&&u.objectId!=null?u.objectId:"attributes"in u&&u.attributes[t]!=null?u.attributes[t]:null;if(e.addFeatures&&(i=this._prepareAddFeatures(e.addFeatures)),e.deleteFeatures)for(const u of e.deleteFeatures){const m=l(u);m!=null&&r.push(m)}const p=e.updateFeatures&&this._idToClientGraphic?new Map:null;if(e.updateFeatures){for(const u of e.updateFeatures)if(a.push(this._serializeFeature(u)),p){const m=l(u);m!=null&&p.set(m,u)}}$e(i?i.features:null,a,this.layer.spatialReference);const{fullExtent:y,featureEditResults:h}=await this._connection.invoke("applyEdits",{adds:i?i.features:[],updates:a,deletes:r});return this.fullExtent=y,i&&i.finish(h.uidToObjectId),this._updateClientGraphicIds(p,h),this._createEditsResult(h)}async _prepareClientMapping(e,t){if(this._layerOrSourceGeometryType!=="mesh"||e==null)return;const i=[];for(const{geometry:r}of e)r==null||r.type!=="mesh"||r.hasExtent||r.loaded||i.push(r.load({signal:t}));i.length&&await Promise.all(i)}_updateClientGraphicIds(e,t){if(this._idToClientGraphic){if(e)for(const i of t.updateResults){if(!i.success)continue;const r=e.get(i.objectId);r!=null&&this._addIdToClientGraphic(r)}for(const i of t.deleteResults)i.success&&this._idToClientGraphic.delete(i.objectId)}}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new f("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}_prepareAddFeatures(e){const t=new Map,i=new Array(e.length);let r=null;for(let l=0;l<e.length;l++){const p=e[l],y=this._serializeFeature(p);r||p.geometry==null||(r=p.geometry.type),i[l]=y,t.set(`${y.uid}`,p)}const a=this;return{features:i,inferredGeometryType:r,finish(l){const p=a.sourceJSON.objectIdField;for(const y in l){const h=l[y],u=t.get(y);u&&(u.attributes||(u.attributes={}),h===-1?delete u.attributes[p]:u.attributes[p]=h,a._addIdToClientGraphic(u))}}}}_addIdToClientGraphic(e){if(!this._idToClientGraphic)return;const t=this.sourceJSON.objectIdField,i=e.attributes?.[t];i!=null&&this._idToClientGraphic.set(i,e)}get _layerOrSourceGeometryType(){return this.layer?.geometryType??this.sourceJSON?.geometryType}_requiresClientGraphicMapping(){return this._geometryTypeRequiresClientGraphicMapping(this._layerOrSourceGeometryType)}_geometryRequiresClientGraphicMapping(e){return this._geometryTypeRequiresClientGraphicMapping(e.type)}_geometryTypeRequiresClientGraphicMapping(e){return e==="mesh"||e==="multipatch"||e==="extent"}_serializeFeature(e){const{attributes:t}=e,i=this._geometryForSerialization(e),r=(Ft++).toString();return i?{uid:r,geometry:i.toJSON(),attributes:t}:{uid:r,attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:this._geometryRequiresClientGraphicMapping(t)?t.extent?K.fromExtent(t.extent):null:t}async _startWorker(e){this._connection=await X("MemorySourceWorker",{strategy:Y("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:i,objectIdField:r,hasM:a,hasZ:l,timeInfo:p,dateFieldsTimeZone:y}=this.layer,h=this.layer.originOf("spatialReference")==="defaults";await this._prepareClientMapping(this.items,e);const u=this._prepareAddFeatures(this.items);this.addHandles(this.on("before-changes",w=>{T.getLogger(this).error("Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead"),w.preventDefault()}));const m={features:u.features,fields:t?.map(w=>w.toJSON()),geometryType:L.toJSON(this._workerGeometryType),hasM:this._layerOrSourceGeometryType!=="mesh"&&a,hasZ:this._layerOrSourceGeometryType==="mesh"||l,objectIdField:r,spatialReference:h?null:i&&i.toJSON(),timeInfo:p?.toJSON()??null,dateFieldsTimeZone:y},b=await this._connection.invoke("load",m,{signal:e});for(const w of b.warnings)T.getLogger(this.layer).warn("#load()",`${w.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:w});b.featureErrors.length&&T.getLogger(this.layer).warn("#load()",`Encountered ${b.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:b.featureErrors});const q=b.layerDefinition;this._geometryTypeRequiresClientGraphicMapping(u.inferredGeometryType)&&(q.geometryType=L.toJSON(u.inferredGeometryType)),this.sourceJSON=q,this._requiresClientGraphicMapping()&&(this._idToClientGraphic=new Map),u.finish(b.assignedObjectIds)}};s([ee({Type:R,ensureType:te(R)})],g.prototype,"itemType",void 0),s([n()],g.prototype,"type",void 0),s([n({constructOnly:!0})],g.prototype,"layer",void 0),s([n({readOnly:!0})],g.prototype,"_workerGeometryType",null),s([n()],g.prototype,"sourceJSON",void 0),g=s([E("esri.layers.graphics.sources.MemorySource")],g);let v=class extends ie{constructor(){super(...arguments),this.updating=!1,this.status="unknown"}};s([n()],v.prototype,"updating",void 0),s([n()],v.prototype,"status",void 0),v=s([E("esri.layers.support.PublishingInfo")],v);const _t=v,Z="esri.layers.mixins.PublishableLayer",St=Symbol(Z),Tt=e=>{var t;let i=class extends e{constructor(){super(...arguments),this[t]=!0}get publishingInfo(){if(this.destroyed)return null;const r=this._get("publishingInfo");if(r)return r;const a=new _t;return this._checkPublishingStatus(a),a}_checkPublishingStatus(r){let p=0;const y=async u=>{let m;r.updating=!0;try{m=await this.fetchPublishingStatus()}catch{m="unavailable"}m!=="published"&&m!=="unavailable"||(r.status==="publishing"&&this.refresh(),h.remove()),r.status=m,r.updating=!1,h.removed||(p=setTimeout(y,u,u+125))},h={removed:!1,remove(){this.removed=!0,clearTimeout(p)}};this.when().catch(()=>h.remove()),y(250),this.addHandles(h)}};return t=St,s([n({readOnly:!0,clonable:!1})],i.prototype,"publishingInfo",null),i=s([E(Z)],i),i},c="FeatureLayer",z="esri.layers.FeatureLayer",It=T.getLogger(z);function S(e,t){return new f("layer:unsupported",`Layer (${e.title}, ${e.id}) of type '${e.declaredClass}' ${t}`,{layer:e})}function k(e){return e&&e instanceof M}const O=ct();function C(e,t,i){const r=!!i?.writeLayerSchema;return{enabled:r,ignoreOrigin:r}}let o=class extends Ie(Le(qe(Tt(Me(Oe(xe(Ae(Ge(re(je(Re(Pe(se(Ce(De(oe(ve))))))))))))))))){constructor(...e){super(...e),this.charts=null,this.copyright=null,this.displayField=null,this.dynamicDataSource=null,this.fields=null,this.fieldsIndex=null,this.formTemplate=null,this.fullExtent=null,this.geometryType=null,this.hasM=void 0,this.hasZ=void 0,this.infoFor3D=null,this.isTable=!1,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.outFields=null,this.path=null,this.popupEnabled=!0,this.popupTemplate=null,this.resourceInfo=null,this.screenSizePerspectiveEnabled=!0,this.spatialReference=ae.WGS84,this.subtypeCode=null,this.templates=null,this.timeInfo=null,this.title=null,this.sublayerTitleMode="item-title",this.type="feature",this.typeIdField=null,this.types=null,this.visible=!0,this._debouncedSaveOperations=ne(async(t,i,r)=>{const{save:a,saveAs:l}=await G(()=>import("./featureLayerUtils-ea46a7f1.js"),["./featureLayerUtils-ea46a7f1.js","./index-8b5e7d9b.js","./index-5447a158.css","./utils-118e07d9.js","./jsonContext-7dfdc657.js","./fetchService-1b5d4dbf.js","./requestPresets-f7ad0d2f.js","./UniqueValueRenderer-176db886.js","./ColorStop-ac9a118d.js","./diffUtils-3ed1f592.js","./colorRamps-cf6fa9ce.js","./jsonUtils-3d6448c4.js","./DictionaryLoader-1a1ab2cc.js","./FieldsIndex-85e142d0.js","./heatmapUtils-3c0e0ece.js","./FeatureLayerBase-56c03a7a.js","./commonProperties-60f31277.js","./ElevationInfo-36952bdf.js","./featureLayerUtils-d891b150.js","./featureQueryAll-778379dd.js","./Query-630c5d65.js","./AttachmentQuery-ac66f9a7.js","./RelationshipQuery-249800df.js","./LayerFloorInfo-5c97dc41.js","./serviceCapabilitiesUtils-1513785a.js","./editsZScale-03b9f186.js","./queryZScale-9dee68ff.js","./FeatureSet-05a1ff98.js","./APIKeyMixin-9d7343aa.js","./ArcGISService-1771a240.js","./BlendLayer-dce91235.js","./jsonUtils-16d33138.js","./CustomParametersMixin-45f14a7d.js","./EditBusLayer-3babd061.js","./FeatureEffectLayer-50d5188d.js","./FeatureEffect-40ff6b77.js","./FeatureFilter-5ab88729.js","./FeatureReductionLayer-826e078c.js","./FeatureReductionSelection-4ea33fb1.js","./LabelClass-06cdad9c.js","./defaults-4b2d7493.js","./defaultsJSON-59981e75.js","./MD5-715f37cd.js","./OperationalLayer-5c10068f.js","./OrderedLayer-b68b3bb4.js","./PortalLayer-c3739096.js","./ScaleRangeLayer-5b526f5a.js","./TemporalLayer-683091de.js","./FeatureTemplate-0e5c0008.js","./FeatureType-347e5e8f.js","./fieldProperties-49b9eb67.js","./labelingInfo-4784a348.js","./versionUtils-e8eeb271.js","./styleUtils-f17e2eb8.js","./TopFeaturesQuery-268791e0.js","./popupUtils-6f3d55df.js"],import.meta.url);switch(t){case F.SAVE:return a(this,i);case F.SAVE_AS:return l(this,r,i)}})}destroy(){this.source?.destroy()}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}load(e){const t=e!=null?e.signal:null;if(this.portalItem?.loaded&&this.source)return this.addResolvingPromise(this.createGraphicsSource(t).then(r=>this.initLayerProperties(r))),Promise.resolve(this);const i=this.loadFromPortal({supportedTypes:["Feature Service","Feature Collection","Scene Service"]},e).catch(le).then(async()=>{if(this.url&&this.layerId==null&&/FeatureServer|MapServer\/*$/i.test(this.url)){const r=await this._fetchFirstValidLayerId(t);r!=null&&(this.layerId=r)}if(!this.url&&!this._hasMemorySource())throw new f("feature-layer:missing-url-or-source","Feature layer must be created with either a url or a source");return this.initLayerProperties(await this.createGraphicsSource(t))}).then(()=>He(this,"load",e));return this.addResolvingPromise(i),Promise.resolve(this)}readCapabilities(e,t){return t=t.layerDefinition||t,mt(t,this.url)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("dynamicDataSource"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("gdbVersion"),this.commitProperty("historicMoment"),this.commitProperty("returnZ"),this.commitProperty("capabilities"),this.commitProperty("returnM"),(this._get("createQueryVersion")??0)+1}get editingEnabled(){return!(this.loaded&&!this.capabilities?.operations.supportsEditing)&&(this._isOverridden("editingEnabled")?this._get("editingEnabled"):this._hasMemorySource()||this.userHasEditingPrivileges)}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}readEditingEnabled(e,t){return this._readEditingEnabled(t,!1)}readEditingEnabledFromWebMap(e,t,i){return this._readEditingEnabled(t,!0,i)}writeEditingEnabled(e,t){this._writeEditingEnabled(e,t,!1)}writeEditingEnabledToWebMap(e,t,i,r){this._writeEditingEnabled(e,t,!0,r)}get effectiveEditingEnabled(){return Ue(this)}readIsTable(e,t){return(t=t?.layerDefinition??t).type==="Table"||!t.geometryType}writeIsTable(e,t,i,r){r?.writeLayerSchema&&I(i,e?"Table":"Feature Layer",t)}readGlobalIdField(e,t){return Be(t.layerDefinition||t)}readObjectIdField(e,t){return Ke(t.layerDefinition||t)}get parsedUrl(){const e=ue(this.url);return e!=null&&(this.dynamicDataSource!=null?e.path=x(e.path,"dynamicLayer"):this.layerId!=null&&(e.path=x(e.path,this.layerId.toString()))),e}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){P(e,this.fieldsIndex),this._set("renderer",e)}readRenderer(e,t,i){t=t.layerDefinition||t;const r=t.drawingInfo?.renderer;if(r){const a=_e(r,t,i)??void 0;return a||It.error("Failed to create renderer",{rendererDefinition:t.drawingInfo.renderer,layer:this,context:i}),a}return Xe(t,i)}set source(e){const t=this._get("source");t!==e&&(k(t)&&this._resetMemorySource(t),k(e)&&this._initMemorySource(e),this._set("source",e))}castSource(e){return e?Array.isArray(e)||e instanceof M?new g({layer:this,items:e}):e:null}readSource(e,t){const i=V.fromJSON(t.featureSet);return new g({layer:this,items:i?.features??[]})}readTemplates(e,t){const i=t.editFieldsInfo,r=i?.creatorField,a=i?.editorField;return e=e?.map(l=>Q.fromJSON(l)),this._fixTemplates(e,r),this._fixTemplates(e,a),e}readTitle(e,t){const i=t.layerDefinition?.name??t.name,r=t.title||t.layerDefinition?.title;if(i){const a=this.portalItem?.title;if(this.sublayerTitleMode==="item-title")return this.url?pe(this.url,i):i;let l=i;if(!l&&this.url){const p=de(this.url);p!=null&&(l=p.title)}return l?(this.sublayerTitleMode==="item-title-and-service-name"&&a&&a!==l&&(l=a+" - "+l),ye(l)):void 0}if(this.sublayerTitleMode==="item-title"&&r)return r}readTitleFromWebMap(e,t){return t.title||t.layerDefinition?.name}readTypeIdField(e,t){let i=(t=t.layerDefinition||t).typeIdField;if(i&&t.fields){i=i.toLowerCase();const r=t.fields.find(a=>a.name.toLowerCase()===i);r&&(i=r.name)}return i}readTypes(e,t){e=(t=t.layerDefinition||t).types;const i=t.editFieldsInfo,r=i?.creatorField,a=i?.editorField;return e?.map(l=>(l=W.fromJSON(l),this._fixTemplates(l.templates,r),this._fixTemplates(l.templates,a),l))}readVisible(e,t){return t.layerDefinition?.defaultVisibility!=null?!!t.layerDefinition.defaultVisibility:t.visibility!=null?!!t.visibility:void 0}async addAttachment(e,t){return Ye(this,e,t,c)}async updateAttachment(e,t,i){return et(this,e,t,i,c)}async applyEdits(e,t){return tt(this,e,t)}async uploadAssets(e,t){return it(this,e,t)}on(e,t){return super.on(e,t)}createPopupTemplate(e){return vt(this,e)}async createGraphicsSource(e){if(this._hasMemorySource()&&this.source)return this.source.load({signal:e});const{default:t}=await ce(G(()=>import("./FeatureLayerSource-cdc2cdcd.js"),["./FeatureLayerSource-cdc2cdcd.js","./index-8b5e7d9b.js","./index-5447a158.css","./External-45f5ccd1.js","./editingSupport-f6574de9.js","./EditBusLayer-3babd061.js","./clientSideDefaults-7259c628.js","./QueryEngineCapabilities-85c4f1d0.js","./defaultsJSON-59981e75.js","./QueryTask-39d65650.js","./Query-630c5d65.js","./executeForIds-a0fa7e82.js","./query-ae6e69b4.js","./pbfQueryUtils-0854066b.js","./pbf-97a34880.js","./queryZScale-9dee68ff.js","./executeQueryJSON-d0cd1585.js","./FeatureSet-05a1ff98.js","./executeQueryPBF-6bc02793.js","./featureLayerUtils-d891b150.js","./featureQueryAll-778379dd.js","./jsonUtils-3d6448c4.js","./UniqueValueRenderer-176db886.js","./ColorStop-ac9a118d.js","./diffUtils-3ed1f592.js","./colorRamps-cf6fa9ce.js","./DictionaryLoader-1a1ab2cc.js","./FieldsIndex-85e142d0.js","./heatmapUtils-3c0e0ece.js","./AttachmentQuery-ac66f9a7.js","./RelationshipQuery-249800df.js","./editsZScale-03b9f186.js"],import.meta.url),e);return new t({layer:this}).load({signal:e})}createQuery(){const e=rt(this);e.dynamicDataSource=this.dynamicDataSource;const t=this.subtypeCode!=null?`${this.subtypeField} = ${this.subtypeCode}`:null,i=he(this.definitionExpression,t);return e.where=i||"1=1",e}async deleteAttachments(e,t){return st(this,e,t,c)}async fetchRecomputedExtents(e){return ot(this,e,c)}getFeatureType(e){const{typeIdField:t,types:i}=this;if(!t||!e)return null;const r=e.attributes?e.attributes[t]:void 0;if(r==null)return null;let a=null;return i?.some(l=>{const{id:p}=l;return p!=null&&(p.toString()===r.toString()&&(a=l),!!a)}),a}getFieldDomain(e,t){const i=t?.feature,r=this.getFeatureType(i);if(r){const a=r.domains&&r.domains[e];if(a&&a.type!=="inherited")return a}return this._getLayerDomain(e)}getField(e){return this.fieldsIndex.get(e)}async queryAttachments(e,t){return at(this,e,t,c)}async queryFeatures(e,t){const i=await this.load(),r=await i.source.queryFeatures(gt.from(e)??i.createQuery(),t);if(r?.features)for(const a of r.features)a.layer=a.sourceLayer=i;return r}async queryObjectIds(e,t){return nt(this,e,t,c)}async queryFeatureCount(e,t){return lt(this,e,t,c)}async queryExtent(e,t){return ut(this,e,t,c)}async queryRelatedFeatures(e,t){return pt(this,e,t,c)}async queryRelatedFeaturesCount(e,t){return dt(this,e,t,c)}async queryTopFeatures(e,t){const{source:i,capabilities:r}=await this.load();if(!i.queryTopFeatures||!r?.query?.supportsTopFeaturesQuery)throw new f(c,"Layer source does not support queryTopFeatures capability");const a=await i.queryTopFeatures(_.from(e),t);if(a?.features)for(const l of a.features)l.layer=l.sourceLayer=this;return a}async queryTopObjectIds(e,t){const{source:i,capabilities:r}=await this.load();if(!i.queryTopObjectIds||!r?.query.supportsTopFeaturesQuery)throw new f(c,"Layer source does not support queryTopObjectIds capability");return i.queryTopObjectIds(_.from(e),t)}async queryTopFeaturesExtent(e,t){const{source:i,capabilities:r}=await this.load();if(!i.queryTopExtents||!r?.query?.supportsTopFeaturesQuery)throw new f(c,"Layer source does not support queryTopExtents capability");return i.queryTopExtents(_.from(e),t)}async queryTopFeatureCount(e,t){const{source:i,capabilities:r}=await this.load();if(!i.queryTopCount||!r?.query?.supportsTopFeaturesQuery)throw new f(c,"Layer source does not support queryFeatureCount capability");return i.queryTopCount(_.from(e),t)}read(e,t){const i=e.featureCollection;if(i){this.resourceInfo=e;const r=i.layers;r&&r.length===1&&(super.read(r[0],t),i.showLegend!=null&&super.read({showLegend:i.showLegend},t))}super.read(e,t),t&&t.origin==="service"&&(this.revert(["objectIdField","fields","timeInfo","dateFieldsTimeZone"],"service"),this.spatialReference||this.revert(["spatialReference"],"service"))}write(e,t){t={...t,origin:t?.origin??void 0,writeLayerSchema:t?.writeLayerSchema??this._hasMemorySource()};const{origin:i,layerContainerType:r,messages:a}=t;if(this.dynamicDataSource)return a?.push(S(this,"using a dynamic data source cannot be written to web scenes, web maps and feature service items")),null;if(this.isTable){if((i==="web-map"||i==="web-scene")&&r!=="tables")return a?.push(S(this,`a table source can only be written to tables, not ${r}`)),null;if(this._hasMemorySource())return a?.push(S(this,"using an in-memory table source cannot be written to web scenes and web maps")),null}else if(this.loaded&&(i==="web-map"||i==="web-scene")&&r==="tables")return a?.push(S(this,"using a non-table source cannot be written to tables in web maps or web scenes")),null;return super.write(e,t)}clone(){if(this._hasMemorySource())throw new f(c,`FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);return super.clone()}serviceSupportsSpatialReference(e){return!!this.loaded&&(this.source?.type==="memory"||ft(this,e))}async save(e){return this._debouncedSaveOperations(F.SAVE,e)}async saveAs(e,t){return this._debouncedSaveOperations(F.SAVE_AS,t,e)}_readEditingEnabled(e,t,i){let r=e.layerDefinition?.capabilities;return r?this._hasEditingCapability(r):(r=e.capabilities,t&&i?.origin==="web-map"&&!this._hasMemorySource()&&r?this._hasEditingCapability(r):void 0)}_hasEditingCapability(e){return e.toLowerCase().split(",").map(t=>t.trim()).includes("editing")}_writeEditingEnabled(e,t,i,r){if(!e){const a=this.capabilities?.operations?.supportsSync?"Query,Sync":"Query";I("layerDefinition.capabilities",a,t),i&&!r?.writeLayerSchema&&(t.capabilities=a)}}_getLayerDomain(e){const t=this.fieldsIndex.get(e);return t?t.domain:null}_fetchFirstValidLayerId(e){return me(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(t=>{const i=t.data;if(i)return this.findFirstValidLayerId(i)})}async initLayerProperties(e){return this._set("source",e),e.sourceJSON&&(this.sourceJSON=e.sourceJSON,this.read(e.sourceJSON,{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl})),this._verifySource(),this._verifyFields(),P(this.renderer,this.fieldsIndex),fe(this.timeInfo,this.fieldsIndex),wt(this,{origin:"service"})}async hasDataChanged(){return yt(this)}async fetchPublishingStatus(){const e=this.source;return e?.fetchPublishingStatus?e.fetchPublishingStatus():"unavailable"}_verifyFields(){const e=this.parsedUrl?.path??"undefined";this.objectIdField||console.log("FeatureLayer: 'objectIdField' property is not defined (url: "+e+")"),this.isTable||this._hasMemorySource()||e.search(/\/FeatureServer\//i)!==-1||this.fields?.some(t=>t.type==="geometry")||console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: "+e+")")}_fixTemplates(e,t){e&&e.forEach(i=>{const r=i.prototype?.attributes;r&&t&&delete r[t]})}_verifySource(){if(this._hasMemorySource()){if(this.url)throw new f("feature-layer:mixed-source-and-url","FeatureLayer cannot be created with both an in-memory source and a url")}else if(!this.url)throw new f("feature-layer:source-or-url-required","FeatureLayer requires either a url, a valid portal item or a source")}_initMemorySource(e){e.forEach(t=>{t.layer=this,t.sourceLayer=this}),this.addHandles([e.on("after-add",t=>{t.item.layer=this,t.item.sourceLayer=this}),e.on("after-remove",t=>{t.item.layer=null,t.item.sourceLayer=null})],"fl-source")}_resetMemorySource(e){e.forEach(t=>{t.layer=null,t.sourceLayer=null}),this.removeHandles("fl-source")}_hasMemorySource(){return!(this.url||!this.source)}findFirstValidLayerId(e){return Array.isArray(e.layers)&&e.layers.length>0?e.layers[0].id:Array.isArray(e.tables)&&e.tables.length>0?e.tables[0].id:void 0}};s([d("service","capabilities")],o.prototype,"readCapabilities",null),s([n({json:{origins:{"web-scene":{write:!1}},write:!0}})],o.prototype,"charts",void 0),s([n({readOnly:!0})],o.prototype,"createQueryVersion",null),s([n({json:{read:{source:"layerDefinition.copyrightText"}}})],o.prototype,"copyright",void 0),s([n({json:{read:{source:"layerDefinition.displayField"}}})],o.prototype,"displayField",void 0),s([n({types:ge,readOnly:!0})],o.prototype,"defaultSymbol",void 0),s([n({type:bt})],o.prototype,"dynamicDataSource",void 0),s([n({type:Boolean})],o.prototype,"editingEnabled",null),s([d(["portal-item","web-scene"],"editingEnabled",["layerDefinition.capabilities"])],o.prototype,"readEditingEnabled",null),s([d("web-map","editingEnabled",["capabilities","layerDefinition.capabilities"])],o.prototype,"readEditingEnabledFromWebMap",null),s([$(["portal-item","web-scene"],"editingEnabled",{"layerDefinition.capabilities":{type:String}})],o.prototype,"writeEditingEnabled",null),s([$("web-map","editingEnabled",{capabilities:{type:String},"layerDefinition.capabilities":{type:String}})],o.prototype,"writeEditingEnabledToWebMap",null),s([n({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),s([n({...O.fields,json:{read:{source:"layerDefinition.fields"},origins:{service:{name:"fields"},"web-map":{write:{target:"layerDefinition.fields",overridePolicy:C}}}}})],o.prototype,"fields",void 0),s([n(O.fieldsIndex)],o.prototype,"fieldsIndex",void 0),s([n({type:Ee,json:{name:"formInfo",write:!0,origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"formTemplate",void 0),s([n({json:{read:{source:"layerDefinition.extent"}}})],o.prototype,"fullExtent",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.geometryType",overridePolicy:C,writer(e,t,i){const r=e?J.toJSON(e):null;r&&I(i,r,t)}}}},read:{source:"layerDefinition.geometryType",reader:J.read}}})],o.prototype,"geometryType",void 0),s([n({json:{read:{source:"layerDefinition.hasM"}}})],o.prototype,"hasM",void 0),s([n({json:{read:{source:"layerDefinition.hasZ"}}})],o.prototype,"hasZ",void 0),s([n(Je)],o.prototype,"id",void 0),s([n({readOnly:!0,json:{origins:{service:{read:!0}},read:!1}})],o.prototype,"infoFor3D",void 0),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.type"}}}}})],o.prototype,"isTable",void 0),s([d("service","isTable",["type","geometryType"]),d("isTable",["layerDefinition.type","layerDefinition.geometryType"])],o.prototype,"readIsTable",null),s([$("web-map","isTable")],o.prototype,"writeIsTable",null),s([n(ke)],o.prototype,"labelsVisible",void 0),s([n({type:[ht],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:j,write:!1},"web-scene":{name:"layerDefinition.drawingInfo.labelingInfo",read:j,write:{enabled:!0,layerContainerTypes:A}}},name:"layerDefinition.drawingInfo.labelingInfo",read:j,write:!0}})],o.prototype,"labelingInfo",void 0),s([n((()=>{const e=D(Ve);return e.json.origins["portal-item"]={write:{target:"layerDefinition.drawingInfo.transparency",writer(t,i,r){I(r,Fe(t),i)}}},e})())],o.prototype,"opacity",void 0),s([n(Qe)],o.prototype,"legendEnabled",void 0),s([n({type:["show","hide"],json:(()=>{const e=D(We.json);return e.origins["portal-item"]={read:!1,write:!1},e})()})],o.prototype,"listMode",void 0),s([d("globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],o.prototype,"readGlobalIdField",null),s([n({json:{origins:{"web-map":{write:{target:"layerDefinition.objectIdField",overridePolicy:C}}}}})],o.prototype,"objectIdField",void 0),s([d("objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],o.prototype,"readObjectIdField",null),s([n({value:"ArcGISFeatureLayer",type:["ArcGISFeatureLayer"]})],o.prototype,"operationalLayerType",void 0),s([n(O.outFields)],o.prototype,"outFields",void 0),s([n({readOnly:!0})],o.prototype,"parsedUrl",null),s([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([n(Ze)],o.prototype,"popupEnabled",void 0),s([n({type:be,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),s([n({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),s([n({types:Se,json:{origins:{service:{write:{target:"drawingInfo.renderer",enabled:!1}},"web-scene":{types:Te,name:"layerDefinition.drawingInfo.renderer",write:{layerContainerTypes:A,overridePolicy:(e,t,i)=>({ignoreOrigin:i?.writeLayerSchema})}}},write:{target:"layerDefinition.drawingInfo.renderer",overridePolicy:(e,t,i)=>({ignoreOrigin:i?.writeLayerSchema})}}})],o.prototype,"renderer",null),s([d("service","renderer",["drawingInfo.renderer","defaultSymbol"]),d("renderer",["layerDefinition.drawingInfo.renderer","layerDefinition.defaultSymbol"])],o.prototype,"readRenderer",null),s([n()],o.prototype,"resourceInfo",void 0),s([n((()=>{const e=D(ze);return e.json.origins["portal-item"]={read:!1,write:!1},e})())],o.prototype,"screenSizePerspectiveEnabled",void 0),s([n({clonable:!1})],o.prototype,"source",null),s([we("source")],o.prototype,"castSource",null),s([d("portal-item","source",["featureSet"]),d("web-map","source",["featureSet"])],o.prototype,"readSource",null),s([n({json:{read:{source:"layerDefinition.extent.spatialReference"}}})],o.prototype,"spatialReference",void 0),s([n({type:Number})],o.prototype,"subtypeCode",void 0),s([n({type:[Q]})],o.prototype,"templates",void 0),s([d("templates",["editFieldsInfo","creatorField","editorField","templates"])],o.prototype,"readTemplates",null),s([n({type:Ne})],o.prototype,"timeInfo",void 0),s([n()],o.prototype,"title",void 0),s([d("service","title",["name"]),d("portal-item","title",["layerDefinition.title","layerDefinition.name","title"])],o.prototype,"readTitle",null),s([d("web-map","title",["layerDefinition.name","title"])],o.prototype,"readTitleFromWebMap",null),s([n({type:String})],o.prototype,"sublayerTitleMode",void 0),s([n({json:{read:!1}})],o.prototype,"type",void 0),s([n({type:String})],o.prototype,"typeIdField",void 0),s([d("service","typeIdField"),d("typeIdField",["layerDefinition.typeIdField"])],o.prototype,"readTypeIdField",null),s([n({type:[W]})],o.prototype,"types",void 0),s([d("service","types",["types"]),d("types",["layerDefinition.types"])],o.prototype,"readTypes",null),s([n({type:Boolean,json:{origins:{"portal-item":{write:{target:"layerDefinition.defaultVisibility"}}}}})],o.prototype,"visible",void 0),s([d("portal-item","visible",["visibility","layerDefinition.defaultVisibility"])],o.prototype,"readVisible",null),o=s([E(z)],o);const _i=o;export{_i as default};
