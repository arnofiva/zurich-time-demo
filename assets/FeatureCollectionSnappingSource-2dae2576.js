import{ao as b,aL as c,ag as h,aY as E,aB as s,ah as r,ai as a,ak as F,gd as V}from"./index-23eb2934.js";import{t as C,j as D,E as $}from"./DimensionAnalysisView3D-00d83d0f.js";import{m as A}from"./elevationInfoUtils-4737e990.js";import{a as I,o as G}from"./queryEngineUtils-7d5e2b32.js";import{i as m,r as L,n as d}from"./symbologySnappingCandidates-9f4cd6c4.js";import"./LineVisualElement-eb0170f6.js";import"./LengthDimension-457afb4e.js";import"./Segment-f0357dc2.js";import"./unitFormatUtils-64334fee.js";import"./analysisViewUtils-1892d612.js";import"./Factory-d5807a0b.js";import"./ImageMaterial-cfba022a.js";import"./vec4f32-0d1b2306.js";import"./RightAngleQuadVisualElement-70292930.js";import"./PointVisualElement-6f2c5ec1.js";import"./EditGeometryOperations-6d8f1931.js";import"./floorFilterUtils-73949d2d.js";import"./dehydratedFeatureComparison-4f6797b0.js";import"./VertexSnappingCandidate-a6d08ac3.js";let o=class extends b{get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="subtype-group")return m();const n=async(p,l)=>(await V(e.whenLayerView(t),l)).elevationAlignPointsInFeatures(p,l);return m(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:n})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="subtype-group";return L(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return e!=null&&e.type==="3d"&&t.type!=="subtype-group"?d(this._symbologySnappingSupported,async(i,n)=>{const p=await e.whenLayerView(t);return s(n),p.queryForSymbologySnapping({candidates:i,spatialReference:e.spatialReference},n)}):d()}get _symbologySnappingSupported(){return this._layerView3D!=null&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="subtype-group"&&(e.whenLayerView(t).then(i=>this._layerView3D=i),this.addHandles([e.elevationProvider.on("elevation-change",({context:i})=>{const{elevationInfo:n}=t;A(i,n)&&this._snappingElevationAligner.notifyElevationSourceChange()}),c(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),h),c(()=>this._layerView3D!=null?this._layerView3D.processor?.renderer:null,()=>this._symbologySnappingFetcher.notifySymbologyChange(),h),E(()=>this._layerView3D?.layer,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())]))}constructor(e){super(e),this.view=null,this._layerView3D=null,this._memoizedMakeGetGroundElevation=C(G)}refresh(){}async fetchCandidates(e,t){const{layer:i}=this.layerSource,n=i.source;if(!n?.querySnapping)return[];const p=D(i),l=$(e,this.view?.type??"2d",p),v=await n.querySnapping(l,{signal:t});s(t);const g=e.coordinateHelper.spatialReference,y=await this._snappingElevationAligner.alignCandidates(v.candidates,g,t);s(t);const u=await this._symbologySnappingFetcher.fetch(y,t);s(t);const S=u.length===0?y:[...y,...u],w=this._snappingElevationFilter.filter(l,S),_=this._memoizedMakeGetGroundElevation(this.view,g);return w.map(f=>I(f,_))}};r([a({constructOnly:!0})],o.prototype,"layerSource",void 0),r([a({constructOnly:!0})],o.prototype,"view",void 0),r([a()],o.prototype,"_snappingElevationAligner",null),r([a()],o.prototype,"_snappingElevationFilter",null),r([a()],o.prototype,"_symbologySnappingFetcher",null),r([a()],o.prototype,"_layerView3D",void 0),r([a()],o.prototype,"_symbologySnappingSupported",null),o=r([F("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],o);export{o as FeatureCollectionSnappingSource};
