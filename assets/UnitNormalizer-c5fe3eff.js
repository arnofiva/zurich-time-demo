import{e as V}from"./Segment-f0357dc2.js";import{av as k,gz as X,mF as g,mG as Y,mH as Z,bh as tt,mI as et,bl as nt,he as st,hd as at,mJ as it,mK as rt,mL as x,cA as D}from"./index-23eb2934.js";const gt={readOnly:!0,get(){return V(this.view)}};var G;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(G||(G={}));function I(t){if(!t)return null;if(Y(t)&&t.wkid){const n=Z[t.wkid];if(n)return n}const e=t.wkt2||t.wkt;if(e){const n=ot(e);if(n)return n}return null}function ot(t){const e=et.exec(t);if(!e||e.length!==2)return null;const n=e[1].split(",");if(!n||n.length<3)return null;const s=parseFloat(n[1]),a=parseFloat(n[2]);return isNaN(s)||isNaN(a)?null:{a:s,f:a===0?0:1/a}}function ct(t){const e=I(t??tt.WGS84);if(ht(e))return e;const n=e.a*(1-e.f);return Object.assign(e,{b:n,eSq:1-(n/e.a)**2,radius:(2*e.a+n)/3,densificationRatio:1e4/((2*e.a+n)/3)})}function ht(t){return t!=null&&"b"in t&&"eSq"in t&&"radius"in t}function lt(t){return I(t)!==null}function vt(t,e="meters"){if(!t)throw new k("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(t.some(s=>!lt(s.spatialReference)))throw new k("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const n=[];for(let s=0;s<t.length;s++){const a=t[s],{spatialReference:p}=a,v=a.type==="polyline"?a.paths:a.rings;let r=0;for(let z=0;z<v.length;z++){const o=v[z];let f=0;for(let m=1;m<o.length;m++){const _=o[m-1][0],$=o[m][0],w=o[m-1][1],h=o[m][1];if(w!==h||_!==$){const c=new ut;ft(c,[_,w],[$,h],p),f+=c.distance}}r+=f}r=X(r,"meters",e),n.push(r)}return n}class ut{constructor(e=0,n=void 0,s=void 0){this.distance=e,this.azimuth=n,this.reverseAzimuth=s}}function ft(t,e,n,s){const a=e[0]*g,p=e[1]*g,v=n[0]*g,r=n[1]*g,{a:z,b:o,f,radius:m}=ct(s),_=v-a,$=Math.atan((1-f)*Math.tan(p)),w=Math.atan((1-f)*Math.tan(r)),h=Math.sin($),c=Math.cos($),R=Math.sin(w),l=Math.cos(w);let F,A,M,i,b,y,N,P,U,q,S=1e3,u=_;do{if(N=Math.sin(u),P=Math.cos(u),M=Math.sqrt(l*N*(l*N)+(c*R-h*l*P)*(c*R-h*l*P)),M===0)return t.distance=0,t.azimuth=void 0,t.reverseAzimuth=void 0,t;b=h*R+c*l*P,y=Math.atan2(M,b),U=c*l*N/M,A=1-U*U,i=b-2*h*R/A,isNaN(i)&&(i=0),q=f/16*A*(4+f*(4-3*A)),F=u,u=_+(1-q)*f*U*(y+q*M*(i+q*b*(2*i*i-1)))}while(Math.abs(u-F)>1e-12&&--S>0);if(S===0){const K=m,L=Math.acos(Math.sin(p)*Math.sin(r)+Math.cos(p)*Math.cos(r)*Math.cos(v-a))*K,j=v-a,W=Math.sin(j)*Math.cos(r),B=Math.cos(p)*Math.sin(r)-Math.sin(p)*Math.cos(r)*Math.cos(j),Q=Math.atan2(W,B);return t.azimuth=Q/g,t.distance=L,t.reverseAzimuth=void 0,t}const d=A*(z*z-o*o)/(o*o),E=d/1024*(256+d*(d*(74-47*d)-128)),C=o*(1+d/16384*(4096+d*(d*(320-175*d)-768)))*(y-E*M*(i+E/4*(b*(2*i*i-1)-E/6*i*(4*M*M-3)*(4*i*i-3)))),H=Math.atan2(l*Math.sin(u),c*R-h*l*Math.cos(u)),J=Math.atan2(c*Math.sin(u),c*R*Math.cos(u)-h*l);return t.azimuth=H/g,t.distance=C,t.reverseAzimuth=J/g,t}function zt(t,e){if(nt(e,0,0,0),t.length>0){for(let n=0;n<t.length;++n)st(e,e,t[n]);at(e,e,1/t.length)}}function Rt(t,e,n,s){s.projectToRenderScreen(t,O),s.projectToRenderScreen(e,T),it(n,Mt,mt),rt(n,n)}const O=x(),mt=O,T=x(),Mt=T;class _t{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=D(this._spatialReference,1),this._metersPerElevationUnit=D(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{lt as M,ut as R,gt as a,ft as b,zt as c,G as e,Rt as i,_t as t,vt as y};
