import{df as xt,ci as ee,ck as ot,bi as _e,as as C,gj as Ee,ce as E,ch as N,au as lt,fq as ct,hi as wt,ah as I,ai as S,ak as K,cG as It,ax as ut,dh as qe,bd as H,az as bt,dV as St,iW as ht,tr as Rt,dO as De,cJ as vt,gG as Tt,ia as _t,em as kt,fb as Ft,ap as Mt,cU as Ct,aS as Pt,at as Ot,cM as he,fk as we,aH as $t,fp as Dt,dm as Bt,cX as zt,aB as Jt}from"./index-8b5e7d9b.js";import{l as At}from"./ArcGISService-1771a240.js";import{a as Et}from"./BlendLayer-dce91235.js";import{o as Nt}from"./CustomParametersMixin-45f14a7d.js";import{h as ft,D as Ht,i as Lt,a as Wt,p as dt,c as jt,N as Be,l as qt,d as Gt,b as Ut,e as Vt,f as Ge,o as Xt,g as Ue,K as Ve,B as Xe,j as Yt,S as Kt,E as Zt,V as Ye,t as Qt,k as ei,m as ti,n as ii}from"./ImageHistogramParameters-6271e62d.js";import{d as mt,c as si}from"./commonProperties-60f31277.js";import{U as Me,j as ri,n as ge,R as pt,I as ni,a as ai,l as oi,b as li,u as te,f as ci,m as ui,s as hi,L as fi,r as Ke,c as xe,W as di,h as mi,g as Ne,P as pi,T as yi,d as gi,F as xi,e as wi,N as Ii,i as bi,k as Ie,B as Si,o as Ri,D as vi}from"./dataUtils-bacb2c6b.js";import{T as ze,D as be,j as Ze,r as Qe,o as Ti,V as Ce,J as ve,e as _i,Z as ki,C as Fi,U as Mi}from"./rasterProjectionHelper-3356de65.js";import{d as He}from"./FeatureSet-05a1ff98.js";import{R as Je,f as Ci,i as Pi,y as Le,n as Oi,C as $i}from"./utils-af2c9311.js";import{u as Di}from"./OperationalLayer-5c10068f.js";import{j as Bi}from"./PortalLayer-c3739096.js";import{t as zi}from"./ScaleRangeLayer-5b526f5a.js";import{a as Ji}from"./TemporalLayer-683091de.js";import{T as Ai}from"./TilemapCache-15811be1.js";import{p as Ei}from"./popupUtils-6f3d55df.js";import"./jsonUtils-16d33138.js";import"./UniqueValueRenderer-176db886.js";import"./ColorStop-ac9a118d.js";import"./diffUtils-3ed1f592.js";import"./colorRamps-cf6fa9ce.js";import"./generateRendererUtils-1c8bce12.js";import"./ElevationInfo-36952bdf.js";let Ni=class{constructor(e=15e3,i=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=e,this._interval=Math.min(e,i)}decreaseRefCount(e,i){const t=e+"/"+i,s=this._cachedBlocks;if(s.has(t)){const r=s.get(t);return r.refCount--,r.refCount<=0&&(s.delete(t),r.controller&&r.controller.abort()),r.refCount}return 0}getBlock(e,i){const t=e+"/"+i,s=this._cachedBlocks;if(s.has(t)){const r=s.get(t);return r.ts=Date.now(),r.refCount++,s.delete(t),s.set(t,r),r.block}return null}putBlock(e,i,t,s){const r=this._cachedBlocks,n=e+"/"+i;if(r.has(n)){const o=r.get(n);o.ts=Date.now(),o.refCount++}else r.set(n,{block:t,ts:Date.now(),refCount:1,controller:s});this._trim(),this._updateTimer()}deleteBlock(e,i){const t=this._cachedBlocks,s=e+"/"+i;t.has(s)&&t.delete(s)}updateMaxSize(e){this._size=e,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const e=this._cachedBlocks;this._timer=setInterval(()=>{const i=Array.from(e),t=Date.now();for(let s=0;s<i.length&&i[s][1].ts<=t-this._duration;s++)e.delete(i[s][0]);e.size===0&&this._clearTimer()},this._interval)}_trim(){const e=this._cachedBlocks;if(this._size===-1||this._size>=e.size)return;const i=Array.from(e);for(let t=0;t<i.length-this._size;t++)e.delete(i[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const ke=new Map,se=new Ni;function et(a,e){return e==null?a:`${a}?sliceId=${e}`}function Hi(a,e,i){const t=ke.get(a);if(!t)return e==null?se.decreaseRefCount(a,i):0;if(e==null||t[e]==null)return se.decreaseRefCount(a,i);const s=t[e]?.cache,r=s?.get(i);if(s&&r){if(r.refCount--,r.refCount===0){s.delete(i);for(let n=0;n<t.length;n++)t[n]?.cache.delete(i);r.controller&&r.controller.abort()}return r.refCount}return 0}function tt(a,e,i){const t=ke.get(a);if(!t)return e==null?se.getBlock(a,i):null;if(e==null||t[e]==null){for(let r=0;r<t.length;r++){const n=t[r]?.cache.get(i);if(n)return n.refCount++,n.block}return se.getBlock(a,i)}const s=t[e]?.cache.get(i);if(s)return s.refCount++,s.block;for(let r=0;r<t.length;r++){if(r===e||!t[r])continue;const n=t[r]?.cache,o=n?.get(i);if(n&&o)return o.refCount++,n.set(i,o),o.block}return null}function it(a,e,i,t,s=null){const r=ke.get(a);if(!r)return void(e==null&&se.putBlock(a,i,t,s));if(e==null||r[e]==null)return void se.putBlock(a,i,t,s);const n={refCount:1,block:t,isResolved:!1,isRejected:!1,controller:s};t.then(()=>n.isResolved=!0).catch(()=>n.isRejected=!0),r[e]?.cache.set(i,n)}function Li(a,e,i){const t=ke.get(a);t?e!=null&&t[e]!=null?t[e]?.cache.delete(i):se.deleteBlock(a,i):e==null&&se.deleteBlock(a,i)}const st=8,Wi=256;let L=class extends xt(It){constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}async init(){const e=ze();this.addResolvingPromise(e),await this.when()}normalizeCtorArgs(e){return e?.ioConfig&&(e={...e,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:ee.create(),...e.ioConfig}}),e}get _isGlobalWrappableSource(){const{rasterInfo:e}=this,i=be(e.spatialReference);return i!=null&&e.extent.width>=i/2}get _hasNoneOrGCSShiftTransform(){const{transform:e}=this.rasterInfo;return e==null||e.type==="gcs-shift"}set rasterJobHandler(e){this._set("rasterJobHandler",e),this.datasetFormat==="Function"&&this.primaryRasters?.rasters?.forEach(i=>i.rasterJobHandler=e)}set url(e){this._set("url",ot(e,_e.getLogger(this)))}async open(e){throw new C("BaseRaster:open-not-implemented","open() is not implemented")}async fetchTile(e,i,t,s={}){const r=s.tileInfo||this.rasterInfo.storageInfo.tileInfo,n=this.getTileExtentFromTileInfo(e,i,t,r);return this.fetchPixels(n,r.size[0],r.size[1],s)}async identify(e,i={}){e=Ee(E,e).clone().normalize();const{multidimensionalDefinition:t,timeExtent:s}=i,{rasterInfo:r}=this,{hasMultidimensionalTranspose:n,multidimensionalInfo:o}=r;let{transposedVariableName:l}=i;const c=o!=null&&n&&(s!=null||ft(t));c&&!l&&(l=t!=null&&t.length>0?t[0].variableName??void 0:o.variables[0].name,i={...i,transposedVariableName:l}),i=this._getRequestOptionsWithSliceId(i);const{spatialReference:u,extent:f}=r,{datumTransformation:m}=i;let h=Ze(e,u,m);if(!f.intersects(h))return{location:h,value:null};if(r.transform!=null){const P=r.transform.inverseTransform(h);if(!r.nativeExtent.intersects(P))return{location:P,value:null};h=P}let p=0;const y=l!=null&&o!=null&&r.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){const P=this.primaryRasters.rasters[0];if(y)return P.identify(h,i);const{pixelSize:D}=r,J=3,$=D.x*J/2,O=D.y*J/2,B=new N({xmin:h.x-$,xmax:h.x+$,ymin:h.y-O,ymax:h.y+O,spatialReference:u}),j={interpolation:"nearest"},{pixelBlock:z}=await P.fetchPixels(B,J,J,j),{pixelBlock:q}=await this.fetchPixels(B,J,J,j);if(z==null)return{location:h,value:null};const G=Math.floor(J*J*.5),Z=!z.mask||z.mask[G]?z.pixels.map(V=>V[G]):null;let re;return q!=null&&(re=!q.mask||q.mask[G]?q.pixels.map(V=>V[G]):void 0),{location:h,value:Z,processedValue:re,pyramidLevel:0}}if(!y){if(i.srcResolution)p=Qe(i.srcResolution,r,this.ioConfig.sampling).pyramidLevel;else if(p=await this.computeBestPyramidLevelForLocation(e,i),p==null)return{location:h,value:null}}const d=this.identifyPixelLocation(h,p,null,y);if(d===null)return{location:h,value:null};const{row:x,col:g,rowOffset:w,colOffset:b,blockWidth:_}=d,R=l??i.sliceId,T=et(this.url,R),v=`${p}/${x}/${g}`;let F=tt(T,null,v);F==null&&(F=this.fetchRawTile(p,x,g,i),it(T,null,v,F));const k=await F;if(!k?.pixels?.length)return{location:h,value:null};const M=w*_+b;return this._processIdentifyResult(k,{srcLocation:h,position:M,pyramidLevel:p,useTransposedTile:!!y,requestSomeSlices:c,identifyOptions:i})}async fetchPixels(e,i,t,s={}){e=Ti(e),s=this._getRequestOptionsWithSliceId(s);const{_hasNoneOrGCSShiftTransform:r}=this;if(s.requestRawData&&r)return this._fetchPixels(e,i,t,s);const n=be(e.spatialReference),o=Ce(e);if(n==null||o===0||o===1&&this._isGlobalWrappableSource&&r)return this._fetchPixels(e,i,t,s);if(o>=3)return{extent:e,pixelBlock:null};const l=[],{xmin:c,xmax:u}=e,f=Math.round(n/(u-c)*i),m=f-Math.round((n/2-c)/(u-c)*i);let h=0;const p=[];for(let g=0;g<=o;g++){const w=new N({xmin:g===0?c:-n/2,xmax:g===o?u-n*g:n/2,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference}),b=g===0?f-m:g===o?i-h:f;h+=b,p.push(b);const _=s.disableWrapAround&&g>0?null:this._fetchPixels(w,b,t,s);l.push(_)}const y=(await Promise.all(l)).map(g=>g?.pixelBlock);let d=null;const x={width:i,height:t};return this.rasterJobHandler?d=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:y,srcMosaicSize:x,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:p},s)).pixelBlock:d=Me(y,x,{blockWidths:p}),{extent:e,srcExtent:ve(e,this.rasterInfo.spatialReference,s.datumTransformation),pixelBlock:d}}async fetchRawPixels(e,i,t,s={}){i={x:Math.floor(i.x),y:Math.floor(i.y)};const r=await this._fetchRawTiles(e,i,t,s),{nativeExtent:n,nativePixelSize:o,storageInfo:l}=this.rasterInfo,c=2**e,u=o.x*c,f=o.y*c,m=new N({xmin:n.xmin+u*i.x,xmax:n.xmin+u*(i.x+t.width-1),ymin:n.ymax-f*(i.y+t.height-1),ymax:n.ymax-f*i.y,spatialReference:n.spatialReference});if(!r)return{extent:m,srcExtent:m,pixelBlock:null};const{pixelBlocks:h,mosaicSize:p}=r;if(h.length===1&&h[0]!=null&&h[0].width===t.width&&h[0].height===t.height)return{extent:m,srcExtent:m,pixelBlock:r.pixelBlocks[0]};const y=e>0?l.pyramidBlockWidth:l.blockWidth,d=e>0?l.pyramidBlockHeight:l.blockHeight,x={x:i.x%y,y:i.y%d};let g;return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:h,srcMosaicSize:p,destDimension:t,clipOffset:x,clipSize:t,coefs:null,sampleSpacing:null,interpolation:s.interpolation,alignmentInfo:null,blockWidths:null},s)).pixelBlock:g=Me(h,p,{clipOffset:x,clipSize:t}),{extent:m,srcExtent:m,pixelBlock:g}}fetchRawTile(e,i,t,s){throw new C("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(e){return ve(this.rasterInfo.extent,e)}decodePixelBlock(e,i){return!this.rasterJobHandler||i.useCanvas?ri(e,i):this.rasterJobHandler.decode({data:e,options:i})}async request(e,i,t=0){const{customFetchParameters:s}=this.ioConfig,{range:r,query:n,headers:o}=i;t=t??i.retryCount??this.ioConfig.retryCount;const l=r?{Range:`bytes=${r.from}-${r.to}`}:null;try{return await lt(e,{...i,query:{...n,...s},headers:{...o,...l}})}catch(c){if(t>0)return t--,this.request(e,i,t);throw c}}getSliceIndex(e){const{multidimensionalInfo:i}=this.rasterInfo;return i==null||e==null||e.length===0?null:Ht(e,i)}getTileExtentFromTileInfo(e,i,t,s){const r=s.lodAt(e);return this.getTileExtent({x:r.resolution,y:r.resolution},i,t,s.origin,s.spatialReference,s.size)}updateTileInfo(){const{storageInfo:e,spatialReference:i,extent:t,pixelSize:s}=this.rasterInfo;if(!e.tileInfo){const r=[],n=e.maximumPyramidLevel||0;let o=Math.max(s.x,s.y),l=1/.0254*96*o;for(let u=0;u<=n;u++)r.unshift(new ct({level:n-u,resolution:o,scale:l})),o*=2,l*=2;const c=new E({x:t.xmin,y:t.ymax,spatialReference:i});e.tileInfo=new ee({origin:c,size:[e.blockWidth,e.blockHeight],spatialReference:i,lods:r}),e.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(e,i=512,t=512,s){const{width:r,height:n,nativeExtent:o,pixelSize:l,spatialReference:c}=e,u=new E({x:o.xmin,y:o.ymax,spatialReference:c});s==null&&(s=Math.max(0,Math.round(Math.log(Math.max(r,n))/Math.LN2-8)));const f=this.computeBlockBoundary(o,512,512,{x:o.xmin,y:o.ymax},[l],s);e.storageInfo=new ge({blockWidth:i,blockHeight:t,pyramidBlockWidth:i,pyramidBlockHeight:t,origin:u,firstPyramidLevel:1,maximumPyramidLevel:s,blockBoundary:f})}async computeBestPyramidLevelForLocation(e,i={}){return 0}computeBlockBoundary(e,i,t,s,r,n=0,o=2){if(r.length===1&&n>0){r=[...r];let{x:f,y:m}=r[0];for(let h=0;h<n;h++)f*=o,m*=o,r.push({x:f,y:m})}const l=[],{x:c,y:u}=s;for(let f=0;f<r.length;f++){const{x:m,y:h}=r[f];l.push({minCol:Math.floor((e.xmin-c+.1*m)/i/m),maxCol:Math.floor((e.xmax-c-.1*m)/i/m),minRow:Math.floor((u-e.ymax+.1*h)/t/h),maxRow:Math.floor((u-e.ymin-.1*h)/t/h)})}return l}getPyramidPixelSize(e){const{nativePixelSize:i}=this.rasterInfo,{pyramidResolutions:t,pyramidScalingFactor:s}=this.rasterInfo.storageInfo;if(e===0)return i;if(t!=null&&t.length)return t[e-1];const r=s**e;return{x:i.x*r,y:i.y*r}}identifyPixelLocation(e,i,t,s){const{spatialReference:r,nativeExtent:n,storageInfo:o}=this.rasterInfo,{maximumPyramidLevel:l,origin:c,transposeInfo:u}=o,f=s&&u!=null?u.tileSize[0]:o.blockWidth,m=s&&u!=null?u.tileSize[1]:o.blockHeight,h=Ze(e,r,t);if(!n.intersects(h)||i<0||i>l)return null;const p=this.getPyramidPixelSize(i),{x:y,y:d}=p,x=(c.y-h.y)/d/m,g=(h.x-c.x)/y/f,w=Math.min(m-1,Math.floor((x-Math.floor(x))*m)),b=Math.min(f-1,Math.floor((g-Math.floor(g))*f));return{pyramidLevel:i,row:Math.floor(x),col:Math.floor(g),rowOffset:w,colOffset:b,blockWidth:f,srcLocation:h}}getTileExtent(e,i,t,s,r,n){const[o,l]=n,c=s.x+t*o*e.x,u=c+o*e.x,f=s.y-i*l*e.y,m=f-l*e.y;return new N({xmin:c,xmax:u,ymin:m,ymax:f,spatialReference:r})}getBlockWidthHeight(e){return{blockWidth:e>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:e>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(e,i,t){const s=this.rasterInfo.storageInfo.blockBoundary[e];return!s||s.maxRow<i||s.maxCol<t||s.minRow>i||s.minCol>t}async _fetchPixels(e,i,t,s={}){let r=Ce(e);if(r>=2)return{extent:e,pixelBlock:null};const n=this._getSourceDataInfo(e,i,t,s),{pyramidLevel:o,srcResolution:l,srcExtent:c,srcWidth:u,srcHeight:f,ul:m}=n;if(u===0||f===0)return{extent:e,srcExtent:c,pixelBlock:null};const{rasterInfo:h}=this,p=h.transform,y=p?.type==="gcs-shift",d=be(e.spatialReference)!=null;!y&&d||(r=Ce(n.srcExtent,y));const x=await this._fetchRawTiles(o,m,{width:u,height:f,wrapCount:r},s);if(!x)return{extent:e,srcExtent:c,pixelBlock:null};const g=h.storageInfo,w=o>0?g.pyramidBlockWidth:g.blockWidth,b=o>0?g.pyramidBlockHeight:g.blockHeight;let{x:_,y:R}=h.pixelSize;if(o>0){const{pyramidResolutions:Q,pyramidScalingFactor:gt}=g;if(Q!=null&&Q[o-1])({x:_,y:R}=Q[o-1]);else{const je=gt**o;_*=je,R*=je}}const T=h.spatialReference,v=new E({x:_,y:R,spatialReference:T}),F=w===u&&b===f&&m.x%w==0&&m.y%b==0,k=new E({x:(e.xmax-e.xmin)/i,y:(e.ymax-e.ymin)/t,spatialReference:e.spatialReference}),M=!e.spatialReference.equals(T),P=T.isGeographic?1e-9:1e-4,{datumTransformation:D}=s;if(!M&&F&&x.pixelBlocks.length===1&&w===i&&b===t&&this._isSameResolution(l,k,P))return{extent:e,srcExtent:c,srcTilePixelSize:v,pixelBlock:x.pixelBlocks[0]};const J=d&&be(c.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,$=s.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");$&&!this.rasterJobHandler&&await ze();const O=this.rasterJobHandler?await this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:k.toJSON(),datumTransformation:D,rasterTransform:p,hasWrapAround:r>0||J,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:$},s):_i({projectedExtent:e,srcBufferExtent:x.extent,pixelSize:k,datumTransformation:D,rasterTransform:p,hasWrapAround:r>0||J,isAdaptive:!1,includeGCSGrid:$});let B;const j=!s.requestRawData,z={rows:O.spacing[0],cols:O.spacing[1]},q=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(o,x.extent.xmin):void 0,{pixelBlocks:G,mosaicSize:Z,isPartiallyFilled:re}=x;let V=null;if(this.rasterJobHandler)({pixelBlock:B,localNorthDirections:V}=await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:G,srcMosaicSize:Z,destDimension:j?{width:i,height:t}:null,coefs:j?O.coefficients:null,sampleSpacing:j?z:null,projectDirections:$,gcsGrid:$?O.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:s.interpolation,alignmentInfo:q,blockWidths:null},s));else{const Q=Me(G,Z,{alignmentInfo:q});B=j?pt(Q,{width:i,height:t},O.coefficients,z,s.interpolation):Q,$&&O.gcsGrid&&(V=ni({width:i,height:t},O.gcsGrid),B=ai(B,this.rasterInfo.dataType,V))}return s.requestRawData||$?{extent:e,srcExtent:c,srcTilePixelSize:v,pixelBlock:B,transformGrid:O,localNorthDirections:V,isPartiallyFilled:re}:{extent:e,srcExtent:c,srcTilePixelSize:v,pixelBlock:B}}async _fetchRawTiles(e,i,t,s){const{origin:r,blockBoundary:n}=this.rasterInfo.storageInfo,{blockWidth:o,blockHeight:l}=this.getBlockWidthHeight(e);let{x:c,y:u}=i,{width:f,height:m,wrapCount:h}=t;const p=this._getRasterTileAlignmentInfo(e,0);s.buffer&&(c-=s.buffer.cols,u-=s.buffer.rows,f+=2*s.buffer.cols,m+=2*s.buffer.rows);let y=0,d=0,x=0;h&&p!=null&&({worldColumnCountFromOrigin:d,originColumnOffset:x,rightPadding:y}=p,d*p.blockWidth-y>=c+f&&(y=0));const g=Math.floor(c/o),w=Math.floor(u/l),b=Math.floor((c+f+y-1)/o),_=Math.floor((u+m+y-1)/l),R=n[e];if(!R)return null;const{minRow:T,minCol:v,maxCol:F,maxRow:k}=R;if(h===0&&(_<T||b<v||w>k||g>F))return null;const M=new Array;let P=!1;const D=this.ioConfig.allowPartialFill==null?s.allowPartialFill:this.ioConfig.allowPartialFill;for(let q=w;q<=_;q++)for(let G=g;G<=b;G++){let Z=G;if(!s.disableWrapAround&&h&&p!=null&&d<=G&&(Z=G-d-x),q>=T&&Z>=v&&k>=q&&F>=Z){const re=this._fetchRawTile(e,q,Z,s);D?M.push(new Promise(V=>{re.then(Q=>V(Q)).catch(()=>{P=!0,V(null)})})):M.push(re)}else M.push(Promise.resolve(null))}if(M.length===0)return null;const J=await Promise.all(M),$={height:(_-w+1)*l,width:(b-g+1)*o},{spatialReference:O}=this.rasterInfo,B=this.getPyramidPixelSize(e),{x:j,y:z}=B;return{extent:new N({xmin:r.x+g*o*j,xmax:r.x+(b+1)*o*j,ymin:r.y-(_+1)*l*z,ymax:r.y-w*l*z,spatialReference:O}),pixelBlocks:J,mosaicSize:$,isPartiallyFilled:P}}_isSameResolution(e,i,t){return Math.abs(e.x-i.x)<t&&Math.abs(e.y-i.y)<t}_fetchRawTile(e,i,t,s){const r=this.rasterInfo.storageInfo.blockBoundary[e];if(!r)return Promise.resolve(null);const{minRow:n,minCol:o,maxCol:l,maxRow:c}=r;if(i<n||t<o||i>c||t>l)return Promise.resolve(null);const u=et(this.url,s.sliceId),f=`${e}/${i}/${t}`;let m=tt(u,s.registryId,f);if(m==null){const h=new AbortController;m=this.fetchRawTile(e,i,t,{...s,signal:h.signal}),it(u,s.registryId,f,m,h),m.catch(()=>Li(u,s.registryId,f))}return s.signal&&wt(s,()=>{Hi(u,s.registryId,f)}),m}_computeMagDirValues(e){const{bandCount:i,dataType:t}=this.rasterInfo;if(!(i===2&&t==="vector-magdir"||t==="vector-uv")||e?.length!==2||!e[0]?.length)return null;const s=e[0].length;if(t==="vector-magdir"){const c=e[1].map(u=>(u+360)%360);return[e[0],c]}const[r,n]=e,o=[],l=[];for(let c=0;c<s;c++){const[u,f]=oi([r[c],n[c]]);o.push(u),l.push(f)}return[o,l]}_getRasterTileAlignmentInfo(e,i){return this._rasterTileAlighmentInfo==null&&(this._rasterTileAlighmentInfo=ki(this.rasterInfo)),this._rasterTileAlighmentInfo.pyramidsInfo==null?null:{startX:i,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[e]}}_getSourceDataInfo(e,i,t,s={}){const r={datumTransformation:s.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};s.srcResolution&&(r.srcResolution=s.srcResolution,this._updateSourceDataInfo(e,r));const n=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:o,srcHeight:l,pyramidLevel:c}=r,u=o/i,f=l/t,m=c<n&&u*f>=16,h=c===n&&this._requireTooManySrcTiles(o,l,i,t);if(m||h||o===0||l===0){const p=new E({x:(e.xmax-e.xmin)/i,y:(e.ymax-e.ymin)/t,spatialReference:e.spatialReference});let y=Fi(p,this.rasterInfo.spatialReference,e,r.datumTransformation);const d=!y||s.srcResolution&&y.x+y.y<s.srcResolution.x+s.srcResolution.y;if(m&&s.srcResolution&&d){const x=Math.round(Math.log(Math.max(u,f))/Math.LN2)-1;if(n-c+3>=x){const g=2**x;y={x:s.srcResolution.x*g,y:s.srcResolution.y*g}}}y&&(r.srcResolution=y,this._updateSourceDataInfo(e,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,i,t)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(e,i,t,s){const{tileInfo:r}=this.rasterInfo.storageInfo;return Math.ceil(e/r.size[0])*Math.ceil(i/r.size[1])>=Wi||e/t>st||i/s>st}_updateSourceDataInfo(e,i){i.srcWidth=0,i.srcHeight=0;const{rasterInfo:t}=this,s=t.spatialReference,{srcResolution:r,datumTransformation:n}=i,{pyramidLevel:o,pyramidResolution:l,excessiveReading:c}=Qe(r,t,this.ioConfig.sampling);if(c)return;let u=i.srcExtent||ve(e,s,n);if(u==null)return;const f=t.transform;f&&(u=f.inverseTransform(u)),i.srcExtent=u;const{x:m,y:h}=t.storageInfo.origin,p=Math.floor((u.xmin-m)/l.x+.1),y=Math.floor((h-u.ymax)/l.y+.1),d=Math.floor((u.xmax-m)/l.x-.1),x=Math.floor((h-u.ymin)/l.y-.1),g=u.width<.1*l.x?0:d-p+1,w=u.height<.1*l.y?0:x-y+1;i.pyramidLevel=o,i.pyramidResolution=l,i.srcWidth=g,i.srcHeight=w,i.ul={x:p,y}}_getRequestOptionsWithSliceId(e){return this.rasterInfo.multidimensionalInfo!=null&&e.sliceId==null&&(e={...e,sliceId:this.getSliceIndex(e.multidimensionalDefinition)}),e}_processIdentifyResult(e,i){const{srcLocation:t,position:s,pyramidLevel:r,useTransposedTile:n}=i,o=e.pixels[0].length/e.width/e.height;if(!(!e.mask||e.mask[s]))return{location:t,value:null};const{multidimensionalInfo:l}=this.rasterInfo;if(l==null||!n){const x=e.pixels.map(b=>b[s]),g={location:t,value:x,pyramidLevel:r},w=this._computeMagDirValues(x.map(b=>[b]));return w?.length&&(g.magdirValue=w.map(b=>b[0])),g}let c=e.pixels.map(x=>x.slice(s*o,s*o+o)),u=this._computeMagDirValues(c);const{requestSomeSlices:f,identifyOptions:m}=i;let h=Lt(l,m.transposedVariableName);if(f){const x=Wt(h,m.multidimensionalDefinition,m.timeExtent);c=c.map(g=>x.map(w=>g[w])),u=u?.map(g=>x.map(w=>g[w])),h=x.map(g=>h[g])}const p=e.noDataValues||this.rasterInfo.noDataValue,y={pixels:c,pixelType:e.pixelType};let d;return p!=null&&(li(y,p),d=y.mask),{location:t,value:null,dataSeries:h.map((x,g)=>{const w={value:d?.[g]===0?null:c.map(b=>b[g]),multidimensionalDefinition:x.multidimensionalDefinition.map(b=>new dt({...b,isSlice:!0}))};return u?.length&&(w.magdirValue=[u[0][g],u[1][g]]),w}),pyramidLevel:r}}};I([S()],L.prototype,"_rasterTileAlighmentInfo",void 0),I([S({readOnly:!0})],L.prototype,"_isGlobalWrappableSource",null),I([S({readOnly:!0})],L.prototype,"_hasNoneOrGCSShiftTransform",null),I([S()],L.prototype,"rasterJobHandler",null),I([S(mt)],L.prototype,"url",null),I([S({type:String,json:{write:!0}})],L.prototype,"datasetName",void 0),I([S({type:String,json:{write:!0}})],L.prototype,"datasetFormat",void 0),I([S()],L.prototype,"hasUniqueSourceStorageInfo",void 0),I([S()],L.prototype,"rasterInfo",void 0),I([S()],L.prototype,"ioConfig",void 0),I([S()],L.prototype,"sourceJSON",void 0),L=I([K("esri.layers.support.rasterDatasets.BaseRaster")],L);const ce=L;let ne=class extends ce{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}async open(e){await this.init();const{rasterFunction:i}=this;this.primaryRasters?.rasters?.length?i.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=i.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach(u=>u.rasterJobHandler=this.rasterJobHandler));const{rasters:t,rasterIds:s}=this.primaryRasters,r=t.map(u=>u.rasterInfo?void 0:u.open(e));await Promise.all(r);const n=t.map(({rasterInfo:u})=>u),o=i.bind({rasterInfos:n,rasterIds:s});if(!o.success||n.length===0)throw new C("raster-function:open",`cannot bind the function: ${o.error??""}`);const l=i.functionName==="Table"?i:i.functionArguments?.raster;l?.functionName==="Table"&&(i.rasterInfo.attributeTable=He.fromJSON(l.functionArguments.attributeTableAsRecordSet)),await this.syncJobHandler();const c=n[0];this.hasUniqueSourceStorageInfo=n.length===1||n.slice(1).every(u=>this._hasSameStorageInfo(u,c)),this.set("sourceJSON",t[0].sourceJSON),this.set("rasterInfo",i.rasterInfo)}async syncJobHandler(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)}async fetchPixels(e,i,t,s={}){const{rasters:r,rasterIds:n}=this.primaryRasters;let o=!1;const{interpolation:l}=s,c=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!s.requestRawData&&l!=="bilinear"&&c&&(o=r.length===1&&!s.skipRasterFunction,s={...s,interpolation:"bilinear",requestRawData:o});const u=r.map(w=>w.fetchPixels(e,i,t,s)),f=await Promise.all(u),m=f.map(w=>w.pixelBlock),h=o||s.requestRawData?f.map(w=>w.srcTilePixelSize):null;if(s.skipRasterFunction||m.every(w=>w==null))return f[0];const p=f.find(w=>w.pixelBlock!=null)?.extent??e,y=this.rasterJobHandler?await this.rasterJobHandler.process({extent:p,primaryPixelBlocks:m,primaryPixelSizes:h,primaryRasterIds:n}):this.rasterFunction.process({extent:p,primaryPixelBlocks:m,primaryPixelSizes:h,primaryRasterIds:n}),{transformGrid:d}=f[0];if(!o||y==null||d==null)return{...f[0],pixelBlock:y};const x={rows:d.spacing[0],cols:d.spacing[1]};let g;return this.rasterJobHandler?g=(await this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[y],srcMosaicSize:{width:y.width,height:y.height},destDimension:{width:i,height:t},coefs:d.coefficients,sampleSpacing:x,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},s)).pixelBlock:g=pt(y,{width:i,height:t},d.coefficients,x,l),{extent:e,srcExtent:f[0].srcExtent,pixelBlock:g}}_hasSameStorageInfo(e,i){const{storageInfo:t,pixelSize:s,spatialReference:r,extent:n}=e,{storageInfo:o,pixelSize:l,spatialReference:c,extent:u}=i;return s.x===l.x&&s.y===l.y&&r.equals(c)&&n.equals(u)&&t.blockHeight===o.blockHeight&&t.blockWidth===o.blockWidth&&t.maximumPyramidLevel===o.maximumPyramidLevel}};I([S({type:String,json:{write:!0}})],ne.prototype,"datasetFormat",void 0),I([S()],ne.prototype,"tileType",void 0),I([S()],ne.prototype,"rasterFunction",void 0),I([S()],ne.prototype,"primaryRasters",void 0),ne=I([K("esri.layers.support.rasterDatasets.FunctionRaster")],ne);const Ae=ne;function ji(a,e){if(a.spatialReference.equals(e))return a;const i=qe(a.spatialReference),t=qe(e);if(i===t)return a;const s=i/t;return{x:a.x*s,y:a.y*s}}async function qi(a,e,i){if(i.type==="extent")return Ui(a,e,i);const{width:t,height:s}=a,r=new Uint8Array(t*s),{contains:n,intersects:o}=await ut(()=>import("./geometryEngine-11d58676.js"),["./geometryEngine-11d58676.js","./geometryEngineBase-2020e3dc.js","./index-8b5e7d9b.js","./index-5447a158.css","./hydrated-1ef0bde6.js"],import.meta.url);return o(e,i)?i.type==="polyline"?Vi(a,e,i):n(i,e)?a:Gi(a,e,i):new te({pixelType:a.pixelType,width:t,height:s,mask:r,maskIsAlpha:!1,pixels:[...a.pixels]})}function Gi(a,e,i){if(!a)return a;const{width:t,height:s}=a,r=e.width/t,n=e.height/s,{xmin:o,ymax:l}=e;let c;if(i.type==="extent"){const d=(i.xmin-o)/r,x=(i.xmax-o)/r,g=(l-i.ymax)/n,w=(l-i.ymin)/n;c=[[[d,g],[d,w],[x,w],[x,g],[d,g]]]}else c=i.rings.map(d=>d.map(([x,g])=>[(x-o)/r,(l-g)/n]));const u=document.createElement("canvas");u.width=t,u.height=s;const f=u.getContext("2d");f.fillStyle="#f00",c.forEach(d=>{f.beginPath(),f.moveTo(d[0][0],d[0][1]);for(let x=0;x<d.length;x++)f.lineTo(d[x][0],d[x][1]);f.closePath(),f.fill()});const m=f.getImageData(0,0,t,s).data,h=a.mask,p=t*s,y=new Uint8Array(p);for(let d=0;d<p;d++)h&&!h[d]||(y[d]=m[4*d+3]>127?255:0);return new te({pixelType:a.pixelType,width:t,height:s,mask:y,maskIsAlpha:!1,pixels:[...a.pixels]})}function Ui(a,e,i){const{width:t,height:s}=a,r=new Uint8Array(t*s),n=e.width/t,o=e.height/s;if(i.width/n<.5||i.height/o<.5)return new te({pixelType:a.pixelType,width:t,height:s,mask:r,pixels:[...a.pixels]});const{xmin:l,xmax:c,ymin:u,ymax:f}=e,{xmin:m,xmax:h,ymin:p,ymax:y}=i,d=Math.max(l,m),x=Math.min(c,h),g=Math.max(u,p),w=Math.min(f,y),b=.5*n,_=.5*o;if(x-d<b||w-g<_||x<l+b||d>c-b||g>f-_||w<u+_)return new te({pixelType:a.pixelType,width:t,height:s,mask:r,pixels:[...a.pixels]});const R=Math.max(0,(d-l)/n),T=Math.min(t,Math.max(0,(x-l)/n)),v=Math.max(0,(f-w)/o),F=Math.min(s,Math.max(0,(f-g)/o)),k=Math.round(R),M=Math.round(T)-1,P=Math.round(v),D=Math.round(F)-1;if(k===M&&R%1>.5&&T%1<.5||P===D&&v%1>.5&&F%1<.5)return new te({pixelType:a.pixelType,width:t,height:s,mask:r,pixels:[...a.pixels]});if(k===0&&P===0&&M===t&&D===s)return a;const J=a.mask;for(let $=P;$<=D;$++)for(let O=k;O<=M;O++){const B=$*t+O;r[B]=J?J[B]:255}return new te({pixelType:a.pixelType,width:t,height:s,mask:r,pixels:[...a.pixels]})}function Vi(a,e,i){const{width:t,height:s}=a,r=new Uint8Array(t*s),n=e.width/t,o=e.height/s,{xmin:l,ymax:c}=e,{paths:u}=i,f=a.mask;for(let m=0;m<u.length;m++){const h=u[m];for(let p=0;p<h.length-1;p++){const[y,d]=h[p],[x,g]=h[p+1];let w=Math.floor((c-d)/o),b=Math.floor((c-g)/o);if(b<w){const R=w;w=b,b=R}w=Math.max(0,w),b=Math.min(s-1,b);const _=(x-y)/(g-d);for(let R=w;R<=b;R++){const T=R===w?Math.max(d,g):(s+1-R)*o,v=R===b?Math.min(d,g):T-o;let F=Math.floor(g===d?(y-l)/n:(_*(T-d)+y-l)/n),k=Math.floor(g===d?(x-l)/n:(_*(v-d)+y-l)/n);if(k<F){const P=F;F=k,k=P}const M=R*t;F=Math.max(0,F),k=Math.min(t-1,k);for(let P=M+F;P<=M+k;P++)r[P]=f?f[P]:255}}}return new te({pixelType:a.pixelType,width:t,height:s,mask:r,pixels:[...a.pixels]})}function Xi(a,e,i,t=!0){const{spatialReference:s}=a,{x:r,y:n}=ji(i,s);let o,l,c;const u=e.type==="extent"?e:e.extent;let{xmin:f,xmax:m,ymax:h,ymin:p}=u;const{xmin:y,ymax:d}=a.extent;return t?(f=y+(f>y?r*Math.round((f-y)/r):0),h=d-(h<d?n*Math.round((d-h)/n):0),m=y+(m>y?r*Math.round((m-y)/r):0),p=d-(p<d?n*Math.round((d-p)/n):0),o=new N({xmin:f,ymax:h,xmax:m,ymin:p,spatialReference:s}),l=Math.round(o.width/r),c=Math.round(o.height/n)):(l=Math.floor((m-f)/r+.8),c=Math.floor((h-p)/n+.8),f=y+(f>y?r*Math.floor((f-y)/r+.1):0),h=d-(h<d?n*Math.floor((d-h)/n+.1):0),m=f+l*r,p=h-c*n,o=new N({xmin:f,ymax:h,xmax:m,ymin:p,spatialReference:s})),{extent:o,width:l,height:c}}const rt=_e.getLogger("esri.layers.mixins.ImageryTileMixin"),Yi=a=>{let e=class extends a{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=t[0]?.raster?.datasetFormat==="Function"}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){t?.functionName?.toLowerCase()==="none"&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}set url(t){this._set("url",ot(t,rt))}set renderer(t){t==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,s,r){const n=s?.layerDefinition?.drawingInfo?.renderer;return Ut(n,r)||void 0}async convertVectorFieldData(t,s){if(t==null||!this.rasterInfo)return null;const r=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:t,dataType:n},s):ci(t,n)}async computeStatisticsHistograms(t,s){t=Ee(Vt,t).clone();const{rasterInfo:r}=this,{geometry:n}=t;if(n==null)throw new C("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let o=n;const{spatialReference:l}=r;n.spatialReference.equals(l)||(await ze(),o=n.type==="extent"?ve(n,l):Mi(n,l));const c=t.pixelSize??new E({x:r.pixelSize.x,y:r.pixelSize.y,spatialReference:l}),{extent:u,width:f,height:m}=Xi(r,o,c),h=await this.fetchPixels(u,f,m,{...s,interpolation:"nearest"});if(h.pixelBlock==null)throw new C("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const p=await qi(h.pixelBlock,u,o),y=this._rasterJobHandler.instance;return y?y.computeStatisticsHistograms({pixelBlock:p},s):ui(p)}async createFlowMesh(t,s){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(t,s):hi(t.meshType,t.simulationSettings,t.flowData,s.signal!=null?s.signal:new AbortController().signal)}normalizeRasterFetchOptions(t){const{multidimensionalInfo:s}=this.rasterInfo??{};if(s==null)return t;let r=t.multidimensionalDefinition||this.multidimensionalDefinition;r?.length||(r=Ge(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const n=t.timeExtent||this.timeExtent;if(r!=null&&n!=null&&(n.start!=null||n.end!=null)){r=r.map(y=>y.clone());const o=s.variables.find(({name:y})=>y===r[0].variableName)?.dimensions?.find(({name:y})=>y==="StdTime"),l=r.find(({dimensionName:y})=>y==="StdTime");if(!o||!l)return{...t,multidimensionalDefinition:null};const{start:c,end:u}=n,f=c==null?null:c.getTime(),m=u==null?null:u.getTime(),h=f??m,p=m??f;if(o.values!=null){const y=o.values.filter(d=>{if(Array.isArray(d)){if(h===p)return d[0]<=h&&d[1]>=h;const x=d[0]<=h&&d[1]>h||d[0]<p&&d[1]>=p,g=d[0]>=h&&d[1]<=p||d[0]<h&&d[1]>p;return x||g}return h===p?d===h:d>=h&&d<=p});if(y.length){const d=y.sort((x,g)=>{const w=Array.isArray(x)?x[0]:x,b=Array.isArray(x)?x[1]:x,_=Array.isArray(g)?g[0]:g,R=Array.isArray(g)?g[1]:g;return h===p?w-_:Math.abs(b-p)-Math.abs(R-p)})[0];l.values=[d]}else r=null}else if(o.hasRegularIntervals&&o.extent){const[y,d]=o.extent;h>d||p<y?r=null:l.values=h===p?[h]:[Math.max(y,h),Math.min(d,p)]}}return r!=null&&Xt(r,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:r}}async updateRasterFunction(){if(!this.loaded||this.type!=="imagery-tile"||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){const u=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&u&&this._set("rasterFunction",Be.fromJSON(u)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let t,s=this.raster,r=!1;s.datasetFormat==="Function"?(t=s.primaryRasters.rasters,s=t[0],r=!0):t=[s];const{rasterFunction:n}=this;if(n){const u={raster:s};t.length>1&&t.forEach(h=>u[h.url]=h);const f=Je(n.functionDefinition?.toJSON()??n.toJSON(),u),m=new Ae({rasterFunction:f});m.rasterJobHandler=this._rasterJobHandler.instance,await m.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=m}else this.raster=s,this._cachedRasterFunctionJson=null,await s.when();if(this._cachedRendererJson=null,!r&&!n)return;const{bandIds:o}=this,{bandCount:l}=this.raster.rasterInfo,c=o?.length?o.some(u=>u>=l):l>=3;o&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")}async updateRenderer(){const{loaded:t,symbolizer:s}=this;if(!t||!s||!this.renderer)return;const{rasterInfo:r}=this.raster,n=Ue(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),o=n?.name,l=Ve({...this.renderer.toJSON(),variableName:o});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;const c=this._rasterJobHandler.instance;c&&(s.rasterInfo=Xe(r,o),s.rendererJSON=l,s.bind(),await c.updateSymbolizer(s),this._cachedRendererJson=l)}async applyRenderer(t,s){const r=t?.pixelBlock;if(!(r!=null&&r.pixels&&r.pixels.length>0))return null;let n;await this.updateRenderer();const o=this._rasterJobHandler.instance,l=this.bandIds??[];return n=o?await o.symbolize({...t,simpleStretchParams:s,bandIds:l}):this.symbolizer.symbolize({...t,simpleStretchParams:s,bandIds:l}),n}getTileUrl(t,s,r){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${t}/${s}/${r}`:""}getCompatibleTileInfo(t,s,r=!1){if(!this.loaded||s==null)return null;if(r&&t.equals(this.spatialReference))return this.tileInfo;const n=St(t);return ee.create({size:256,spatialReference:t,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:s.xmin,y:s.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}async fetchTile(t,s,r,n={}){if(i(this),n.requestAsImageElement){const l=this.getTileUrl(t,s,r);return lt(l,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then(c=>c.data)}const{rasterInfo:o}=this;if(o.multidimensionalInfo!=null&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null){const l=n.tileInfo||o.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(t,s,r,l),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),this.renderer?.type==="raster-shaded-relief"&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(t,s,r,n)}async fetchPixels(t,s,r,n={}){return this.rasterInfo.multidimensionalInfo!=null&&(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition==null?{extent:t,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),s=Math.round(s),r=Math.round(r),this.raster.fetchPixels(t,s,r,n))}async identify(t,s={}){const{raster:r,rasterInfo:n}=this;if(n.multidimensionalInfo!=null&&!(n.hasMultidimensionalTranspose&&(ft(s.multidimensionalDefinition)||s.transposedVariableName||s.timeExtent))&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null)return{location:t,value:null};const o=this.multidimensionalSubset?.areaOfInterest;if(o&&!o.contains(t))throw new C("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return r.identify(t,s)}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.rasterInfo?.multidimensionalInfo;if(t==null||this.rasterInfo?.dataType!=="standard-time")return!1;const s=this.multidimensionalDefinition,r=s?.[0]?.variableName;return t.variables.some(n=>n.name===r&&(!s?.[0].dimensionName||n.dimensions.some(o=>o.name==="StdTime")))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){const s=t??this.rasterInfo?.multidimensionalInfo;return Yt(this.multidimensionalSubset,s)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Ge(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new Qt;return this._rasterJobHandler.connectionPromise=t.initialize().then(async()=>{i(this),this._rasterJobHandler.instance=t,this.raster.rasterJobHandler=t,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch(()=>{}),this.renderer&&this.updateRenderer()}).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(this.interpolation==null){i(this);const{raster:t}=this,s=Kt(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",s)}}_configDefaultRenderer(t="no"){i(this);const{rasterInfo:s}=this.raster;!this.bandIds&&s.bandCount>1&&(this.bandIds=Zt(s));const r=Ue(s,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),n=r?.name;if(!this.renderer||t==="override"){const u=Ye(s,{bandIds:this.bandIds,variableName:n}),f=s.statistics,m=f&&f.length>0?f[0]:null,h=m?.max??0,p=m?.min??0;this.raster.datasetFormat==="WCSServer"&&u.type==="raster-stretch"&&(h>1e24||p<-1e24)&&(u.dynamicRangeAdjustment=!0,u.statistics=null,u.stretchType==="none"&&(u.stretchType="min-max")),this.renderer=u}const o=Ve({...this.renderer.toJSON(),variableName:n}),l=Xe(s,n);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=l):this.symbolizer=new fi({rendererJSON:o,rasterInfo:l});const c=this.symbolizer.bind();if(c.success){if(t==="auto"){const{colormap:u}=this.raster.rasterInfo,f=this.renderer;if(u!=null&&f.type==="raster-colormap"){const m=Ye(this.raster.rasterInfo);JSON.stringify(m)!==JSON.stringify(f)&&this._configDefaultRenderer("override")}else if(f.type==="raster-stretch"){const m=this.bandIds?.length,h=f.statistics?.length;!f.dynamicRangeAdjustment&&h&&m&&h!==m&&this._configDefaultRenderer("override")}}}else rt.warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),t==="auto"&&this._configDefaultRenderer("override")}};function i(t){if(!t.raster||!t.rasterInfo)throw new C("imagery-tile","no raster")}return I([S({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),I([S({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),I([S({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),I([S({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),I([S({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),I([S()],e.prototype,"bandIds",void 0),I([S({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),I([S({json:{read:!1}})],e.prototype,"fullExtent",null),I([S()],e.prototype,"interpolation",void 0),I([S()],e.prototype,"ioConfig",void 0),I([S({type:[dt],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),I([S({type:jt,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),I([S()],e.prototype,"raster",void 0),I([S({type:Be,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),I([S()],e.prototype,"rasterInfo",void 0),I([S()],e.prototype,"sourceJSON",void 0),I([S({readOnly:!0,type:H,json:{read:!1}})],e.prototype,"spatialReference",void 0),I([S({type:ee})],e.prototype,"tileInfo",void 0),I([S(mt)],e.prototype,"url",null),I([S({types:qt,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const t=this.renderer?.type==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!t}}},origins:{"web-scene":{types:Gt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],e.prototype,"renderer",null),I([bt("renderer")],e.prototype,"readRenderer",null),I([S({clonable:!1})],e.prototype,"symbolizer",void 0),e=I([K("esri.layers.ImageryTileMixin")],e),e};function Ki(a){const e=a.fields,i=a.records,t=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",s=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),r=s.map(c=>c.name),n=[];let o=0,l=0;return i.forEach(c=>{const u={};for(u[t]=o++,l=1;l<r.length;l++)u[r[l]]=c[l-1];n.push({attributes:u})}),{displayFieldName:"",fields:s,features:n}}class yt{static get supportedVersions(){return[5]}static parse(e){const i=new DataView(e),t=3&i.getUint8(0);if(t!==3)return{header:{version:t},recordSet:null};const s=i.getUint32(4,!0),r=i.getUint16(8,!0),n=i.getUint16(10,!0),o={version:t,recordCount:s,headerByteCount:r,recordByteCount:n};let l=32;const c=[],u=[];let f;if(t===3){for(;i.getUint8(l)!==13;)f=String.fromCharCode(i.getUint8(l+11)).trim(),c.push({name:Ke(new Uint8Array(e,l,11)),type:f,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(f)],length:i.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;u.length<s&&e.byteLength-l>n;){const m=[];i.getUint8(l)===32?(l+=1,c.forEach(h=>{if(h.type==="C")m.push(Ke(new Uint8Array(e,l,h.length)).trim());else if(h.type==="N")m.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,h.length)).trim(),10));else if(h.type==="F")m.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,h.length)).trim()));else if(h.type==="D"){const p=String.fromCharCode.apply(null,new Uint8Array(e,l,h.length)).trim();m.push(new Date(parseInt(p.substring(0,4),10),parseInt(p.substring(4,6),10)-1,parseInt(p.substring(6,8),10)))}l+=h.length}),u.push(m)):l+=n}}return{header:o,fields:c,records:u,recordSet:Ki({fields:c,records:u})}}}const ae=new Map;ae.set("int16","esriFieldTypeSmallInteger"),ae.set("int32","esriFieldTypeInteger"),ae.set("int64","esriFieldTypeInteger"),ae.set("float32","esriFieldTypeSingle"),ae.set("float64","esriFieldTypeDouble"),ae.set("text","esriFieldTypeString");const nt=8;let me=class extends ce{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}async open(e){await this.init();const{data:i}=await this.request(this.url+"/conf.json",{signal:e?.signal});if(!this._validateHeader(i))throw new C("cloudraster:open","Invalid or unsupported conf.json.");this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:s}=this._parseHeader(i);if(s.dataType==="thematic"){const r=await this._fetchAuxiliaryInformation();s.attributeTable=r}this._set("storageInfo",t),this._set("rasterInfo",s),this.ioConfig.retryCount=this.ioConfig.retryCount||0}async fetchRawTile(e,i,t,s={}){const{transposeInfo:r}=this.rasterInfo.storageInfo,{transposedVariableName:n}=s,o=!(!r||!n),l=o?0:this.rasterInfo.storageInfo.maximumPyramidLevel-e;if(l<0)return null;const c=this._buildCacheFilePath(l,i,t,s.multidimensionalDefinition,n),u=this._getIndexRecordFromBundle(i,t,o),f=await this.request(c,{range:{from:0,to:this.storageInfo.headerSize-1},responseType:"array-buffer",signal:s.signal});if(!f)return null;const m=new Uint8Array(f.data),h=this._getTileEndAndContentType(m,u);if(h.recordSize===0)return null;const p=await this.request(c,{range:{from:h.position,to:h.position+h.recordSize},responseType:"array-buffer",signal:s.signal});if(!p)return null;const[y,d]=this._getTileSize(o);return this.decodePixelBlock(p.data,{width:y,height:d,planes:null,pixelType:null,returnInterleaved:o})}_validateHeader(e){const i=["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"];return e&&e.type==="RasterInfo"&&!i.some(t=>!e[t])}_parseHeader(e){const i=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][e.pixelType],{bandCount:t,colormap:s,blockWidth:r,blockHeight:n,firstPyramidLevel:o,maximumPyramidLevel:l}=e,c=e.statistics?.map(z=>({min:z.min,max:z.max,avg:z.mean,stddev:z.standardDeviation,median:z.median,mode:z.mode})),u=e.histograms?.[0]?.counts?.length?e.histograms:null,f=e.extent.spatialReference,m=e.geodataXform?.spatialReference,h=new H(f?.wkid||f?.wkt||f?.wkt2?f:m);let p=new N({xmin:e.extent.xmin,ymin:e.extent.ymin,xmax:e.extent.xmax,ymax:e.extent.ymax,spatialReference:h});const y=new E({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),d=Math.round((p.xmax-p.xmin)/y.x),x=Math.round((p.ymax-p.ymin)/y.y),g=this._parseTransform(e.geodataXform),w=g?p:null;g&&(p=g.forwardTransform(p),y.x=(p.xmax-p.xmin)/d,y.y=(p.ymax-p.ymin)/x);const b=e.properties??{},_=e.format.toLowerCase().replace("cache/",""),R=new E(e.origin.x,e.origin.y,h);let T,v,F,k;if(s?.colors)for(T=[],v=0;v<s.colors.length;v++)F=s.colors[v],k=s.values?s.values[v]:v,T.push([k,255&F,F<<16>>>24,F<<8>>>24,F>>>24]);const M=e.LODInfos,P=[];for(v=0;v<M.levels.length;v++)P.push(new ct({level:M.levels[v],resolution:M.resolutions[v],scale:96/.0254*M.resolutions[v]}));const D=new ee({dpi:96,lods:P,format:_,origin:R,size:[r,n],spatialReference:h}),J={recordSize:nt,packetSize:e.packetSize,headerSize:e.packetSize*e.packetSize*nt+64},$=[{maxCol:Math.ceil(d/r)-1,maxRow:Math.ceil(x/n)-1,minCol:0,minRow:0}];let O=2;if(l>0)for(v=0;v<l;v++)$.push({maxCol:Math.ceil(d/O/r)-1,maxRow:Math.ceil(x/O/n)-1,minCol:0,minRow:0}),O*=2;const B=e.mdInfo;let j=null;if(B&&b._yxs){const z=b._yxs;j={packetSize:z.PacketSize,tileSize:[z.TileXSize,z.TileYSize]}}return{storageInfo:J,rasterInfo:new xe({width:d,height:x,pixelType:i,bandCount:t,extent:p,nativeExtent:w,transform:g,spatialReference:h,pixelSize:y,keyProperties:b,statistics:c,histograms:u,multidimensionalInfo:B,colormap:T,storageInfo:new ge({blockWidth:r,blockHeight:n,pyramidBlockWidth:r,pyramidBlockHeight:n,origin:R,tileInfo:D,transposeInfo:j,firstPyramidLevel:o,maximumPyramidLevel:l,blockBoundary:$})})}}_parseTransform(e){if(!Ci(e))throw new C("cloudraster:open","the data contains unsupported geodata transform types");const i=Pi(e);if(i.type==="identity")return null;if(i.type!=="polynomial"||!i.forwardCoefficients?.length||!i.inverseCoefficients?.length)throw new C("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return i}async _fetchAuxiliaryInformation(e){const i=this.request(this.url+"/conf.vat.json",{signal:e}).then(n=>n.data).catch(()=>null),t=this.request(this.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:e}).then(n=>n.data).catch(()=>null),s=await Promise.all([i,t]);let r;if(s[0]){let n=s[0].fields;const o=s[0].values;if(n&&o){n=n.map(c=>({type:c.name==="OID"?"esriFieldTypeOID":ae.get(c.type),name:c.name,alias:c.alias||c.name}));const l=o.map(c=>({attributes:c}));n&&o&&(r={fields:n,features:l})}}return!r&&s[1]&&(r=yt.parse(s[1]).recordSet),He.fromJSON(r)}_buildCacheFilePath(e,i,t,s,r){const n=this._getPackageSize(!!r),o=Math.floor(i/n)*n,l=Math.floor(t/n)*n,c="R"+this._toHexString4(o)+"C"+this._toHexString4(l);let u="L";u+=e>=10?e.toString():"0"+e.toString();const{multidimensionalInfo:f}=this.rasterInfo,m=s?.[0];if(f==null||!m)return`${this.url}/_alllayers/${u}/${c}.bundle`;let h="_yxs";if(!r){h=f.variables.find(d=>d.name===m.variableName).dimensions[0].values.indexOf(m.values[0]).toString(16);const y=4-h.length;for(let d=0;d<y;d++)h="0"+h;h="S"+h}const p=this._getVariableFolderName(r||m.variableName);return`${this.url}/_alllayers/${p}/${h}/${u}/${c}.bundle`}_getPackageSize(e=!1){const{transposeInfo:i}=this.rasterInfo.storageInfo;return e&&i!=null?i.packetSize??0:this.storageInfo.packetSize}_getTileSize(e=!1){const{storageInfo:i}=this.rasterInfo,{transposeInfo:t}=i;return e&&t!=null?t.tileSize:i.tileInfo.size}_getVariableFolderName(e){return(e=e.trim())===""?"_v":e.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(e,i,t=!1){const s=this._getPackageSize(t),r=s*(e%s)+i%s;if(r<0)throw new Error("Invalid level / row / col");return 20+r*this.storageInfo.recordSize+44}_getTileEndAndContentType(e,i){const t=e.subarray(i,i+8);let s,r=0;for(s=0;s<5;s++)r|=(255&t[s])<<8*s;const n=0xffffffffff&r;for(r=0,s=5;s<8;s++)r|=(255&t[s])<<8*(s-5);return{position:n,recordSize:0xffffffffff&r}}_toHexString4(e){let i=e.toString(16);if(i.length!==4){let t=4-i.length;for(;t-- >0;)i="0"+i}return i}};I([S({readOnly:!0})],me.prototype,"storageInfo",void 0),I([S({type:String,json:{write:!0}})],me.prototype,"datasetFormat",void 0),me=I([K("esri.layers.support.rasterDatasets.CloudRaster")],me);const Zi=me;let pe=class extends ce{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}async open(e){await this.init();const i=this.data,{pixelBlock:t,statistics:s,histograms:r,name:n,keyProperties:o,nativeExtent:l,transform:c}=this.data,{width:u,height:f,pixelType:m}=t,h=i.extent??new N({xmin:-.5,ymin:.5,xmax:u-.5,ymax:f-.5,spatialReference:new H({wkid:3857})}),p=i.isPseudoSpatialReference??!i.extent,y={x:h.width/u,y:h.height/f},d=new xe({width:u,height:f,pixelType:m,extent:h,nativeExtent:l,transform:c,pixelSize:y,spatialReference:h.spatialReference,bandCount:t.pixels.length,keyProperties:o||{},statistics:s,isPseudoSpatialReference:p,histograms:r});this.createRemoteDatasetStorageInfo(d,512,512),this._set("rasterInfo",d),this.updateTileInfo(),await this._buildInMemoryRaster(t,{width:512,height:512},e),this.datasetName=n,this.url="/InMemory/"+n}fetchRawTile(e,i,t,s={}){const r=this._pixelBlockTiles.get(`${e}/${i}/${t}`);return Promise.resolve(r)}async _buildInMemoryRaster(e,i,t){const s=this.rasterInfo.storageInfo.maximumPyramidLevel,r=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:e,tileSize:i,maximumPyramidLevel:s},t):Promise.resolve(di(e,i,s)),n=this.rasterInfo.statistics!=null,o=this.rasterInfo.histograms!=null,l=n?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:e},t):Promise.resolve(mi(e)),c=await ht([r,l]);if(!c[0].value&&c[1].value)throw new C("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=c[0].value,n||(this.rasterInfo.statistics=c[1].value?.statistics),o||(this.rasterInfo.histograms=c[1].value?.histograms)}};I([S({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),I([S()],pe.prototype,"data",void 0),pe=I([K("esri.layers.support.rasterDatasets.InMemoryRaster")],pe);const Qi=pe;function fe(a,e){if(!a||!e)return[];let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const r=fe(a,i);for(let n=0;n<r.length;n++)fe(r[n],e).forEach(o=>t.push(o));return t}const s=a.getElementsByTagNameNS("*",i);if(!s||s.length===0)return[];for(let r=0;r<s.length;r++)t.push(s[r]||s.item(r));return t}function U(a,e){if(!a||!e)return null;let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=fe(a,i);return t.length>0?e?U(t[0],e):t[0]:null}function Y(a,e=null){const i=e?U(a,e):a;let t;return i?(t=i.textContent||i.nodeValue,t?t.trim():null):null}function es(a,e){const i=fe(a,e),t=[];let s;for(let r=0;r<i.length;r++)s=i[r].textContent||i[r].nodeValue,s&&(s=s.trim(),s!==""&&t.push(s));return t}function Se(a,e){return es(a,e).map(i=>Number(i))}function le(a,e){const i=Y(a,e);return Number(i)}function Pe(a,e){const i=a?.nodeName?.toLowerCase(),t=e.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===t}function at(a,e){if(!a||!e)return null;const i=[];for(let t=0;t<a.length;t++)i.push(a[t]),i.push(e[t]);return i}function ts(a){const e=U(a,"GeodataXform"),i=Fe(le(e,"SpatialReference/WKID")||Y(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:i,transform:null};const t=le(e,"PolynomialOrder")??1,s=Se(e,"CoeffX/Double"),r=Se(e,"CoeffY/Double"),n=Se(e,"InverseCoeffX/Double"),o=Se(e,"InverseCoeffY/Double"),l=at(s,r),c=at(n,o);return{spatialReference:i,transform:l&&c&&l.length&&c.length?new Le({spatialReference:i,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}function is(a){const e=le(a,"NoDataValue"),i=U(a,"Histograms/HistItem"),t=le(i,"HistMin"),s=le(i,"HistMax"),r=le(i,"BucketCount"),n=Y(i,"HistCounts")?.split("|").map(m=>Number(m));let o,l,c,u;fe(a,"Metadata/MDI").forEach(m=>{const h=Number(m.textContent??m.nodeValue);switch(m.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=h;break;case"STATISTICS_MAXIMUM":l=h;break;case"STATISTICS_MEAN":c=h;break;case"STATISTICS_STDDEV":u=h}});const f=le(a,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:n?.length&&t!=null&&s!=null?{min:t,max:s,size:r||n.length,counts:n}:null,sourceBandIndex:f,statistics:o!=null&&l!=null?{min:o,max:l,avg:c,stddev:u}:null}}function Fe(a){if(!a)return null;let e=Number(a);if(!isNaN(e)&&e!==0)return new H({wkid:e});if(a=String(a).trim(),Rt(a))return new H({wkt2:a});const i=a.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const t=i.indexOf("VERTCS"),s=i.indexOf("PROJCS"),r=s>-1?s:i.indexOf("GEOGCS");if(r===-1)return null;const n=a.slice(r,a.lastIndexOf("]",t)+1).trim(),o=a.slice(t,a.lastIndexOf("]")).trim();e=Oe(n);const l=new H(e?{wkid:e}:{wkt:n}),c=Oe(o);return c&&(l.vcsWkid=c),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(e=Oe(a),new H(e!==0?{wkid:e}:{wkt:a})):null}function Oe(a){const e=a.replaceAll("]","[").replaceAll('"',"").split("[").map(s=>s.trim()).filter(s=>s!==""),i=e[e.length-1].split(","),t=i[0]?.toLowerCase();if((t==="epsg"||t==="esri")&&a.endsWith('"]]')){const s=Number(i[1]);if(!isNaN(s)&&s!==0)return s}return 0}function We(a){if(a?.documentElement.tagName?.toLowerCase()!=="pamdataset")return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};a.documentElement.childNodes.forEach(t=>{if(t.nodeType===1){if(Pe(t,"SRS")){if(!e.spatialReference){const s=Y(t);e.spatialReference=Fe(s)}}else if(Pe(t,"Metadata"))if(t.getAttribute("domain")==="xml:ESRI"){const{spatialReference:s,transform:r}=ts(t);e.transform=r,e.spatialReference||(e.spatialReference=s)}else fe(t,"MDI").forEach(s=>e.metadata[s.getAttribute("key")]=Y(s));else if(Pe(t,"PAMRasterBand")){const s=is(t);s.sourceBandIndex!=null&&e.rasterBands[s.sourceBandIndex]==null?e.rasterBands[s.sourceBandIndex]=s:e.rasterBands.push(s)}}});const i=e.rasterBands;if(i.length){const t=!!i[0].statistics;e.statistics=t?i.map(r=>r.statistics).filter(De):null;const s=!!i[0].histogram;e.histograms=s?i.map(r=>r.histogram).filter(De):null}return e}let Te=class extends ce{async open(a){await this.init();const e=await this._fetchData(a);let{spatialReference:i,statistics:t,histograms:s,transform:r}=await this._fetchAuxiliaryData(a);const n=!i;n&&(i=new H({wkid:3857})),s?.length&&t==null&&(t=Ne(s));const{width:o,height:l}=e;let c=new N({xmin:-.5,ymin:.5-l,xmax:o-.5,ymax:.5,spatialReference:i});const u=r?r.forwardTransform(c):c;let f=!0;if(r){const h=r.forwardCoefficients;f=h&&h[1]===0&&h[2]===0,f&&(r=null,c=u)}const m=new Qi({data:{extent:u,nativeExtent:c,transform:r,pixelBlock:e,statistics:t,histograms:s,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:n}});await m.open(),m.data=null,this._set("rasterInfo",m.rasterInfo),this._inMemoryRaster=m}fetchRawTile(a,e,i,t={}){return this._inMemoryRaster.fetchRawTile(a,e,i,t)}async _fetchData(a){const{data:e}=await this.request(this.url,{responseType:"array-buffer",signal:a?.signal}),i=pi(e).toUpperCase();if(i!=="JPG"&&i!=="PNG"&&i!=="GIF"&&i!=="BMP")throw new C("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",i);const t=i.toLowerCase(),s=t==="gif"||t==="bmp"||!vt("ios"),r=await this.decodePixelBlock(e,{format:t,useCanvas:s,hasNoZlibMask:!0});if(r==null)throw new C("image-aux-raster:open","the data cannot be decoded");return r}async _fetchAuxiliaryData(a){const e=a?.signal,i=this.ioConfig.skipExtensions??[],t=i.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),s=this.datasetFormat,r=s==="JPG"?"jgw":s==="PNG"?"pgw":s==="BMP"?"bpw":null,n=r&&i.includes(r)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+r,{responseType:"text",signal:e}),o=await ht([t,n]);if(e?.aborted)throw Tt();const l=We(o[0].value?.data);if(!l.transform){const c=o[1].value?o[1].value.data.split(`
`).slice(0,6).map(u=>Number(u)):null;l.transform=c?.length===6?new Le({forwardCoefficients:[c[4],c[5],c[0],-c[1],c[2],-c[3]]}):null}return l}};I([S({type:String,json:{write:!0}})],Te.prototype,"datasetFormat",void 0),Te=I([K("esri.layers.support.rasterDatasets.ImageAuxRaster")],Te);const Re=Te;let ye=class extends ce{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}async open(a){await this.init();const e=a?.signal,i=this.sourceJSON?{data:this.sourceJSON}:await this.request(this.url,{query:{f:"json"},signal:e});i.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));const t=i.data;if(this.sourceJSON=t,!t)throw new C("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!t.tileInfo)throw new C("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();const s=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=t.cacheType,this.tileType==null&&(s.includes(t.tileInfo.format.toLowerCase())?this.tileType="Map":t.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=t.name?.slice(t.name.indexOf("/")+1)??"";const r=await this._fetchRasterInfo({signal:e});if(r==null)throw new C("image-server-raster:open","cannot initialize image service");ei(r,t);const n=this.tileType==="Map"?ss(t.tileInfo,t):ee.fromJSON(t.tileInfo);_t(n);const[o,l]=this._computeMinMaxLOD(r,n),{extent:c,pixelSize:u}=r,f=.5/r.width*u.x,m=Math.max(u.x,u.y),{lods:h}=n;(this.tileType!=="Map"&&t.maxScale!==0||Math.abs(u.x-u.y)>f||!h.some(T=>Math.abs(T.resolution-m)<f))&&(u.x=u.y=o.resolution,r.width=Math.ceil((c.xmax-c.xmin)/u.x-.1),r.height=Math.ceil((c.ymax-c.ymin)/u.y-.1));const p=o.level-l.level,[y,d]=n.size,x=[],g=[];h.forEach((T,v)=>{T.level>=l.level&&T.level<=o.level&&x.push({x:T.resolution,y:T.resolution}),v<h.length-1&&g.push(Math.round(10*T.resolution/h[v+1].resolution)/10)}),x.sort((T,v)=>T.x-v.x);const w=this.computeBlockBoundary(c,y,d,n.origin,x,p),b=x.length>1?x.slice(1):null;let _;t.transposeInfo&&(_={tileSize:[t.transposeInfo.rows,t.transposeInfo.cols],packetSize:r.keyProperties?._yxs.PacketSize??0});const R=g.length<=1||g.length>=3&&g.slice(0,-1).every(T=>T===g[0])?g[0]??2:Math.round(10/(l.resolution/o.resolution)**(-1/p))/10;if(r.storageInfo=new ge({blockWidth:n.size[0],blockHeight:n.size[1],pyramidBlockWidth:n.size[0],pyramidBlockHeight:n.size[1],pyramidResolutions:b,pyramidScalingFactor:R,compression:n.format,origin:n.origin,firstPyramidLevel:1,maximumPyramidLevel:p,tileInfo:n,transposeInfo:_,blockBoundary:w}),this._fixGCSShift(r),this._set("rasterInfo",r),t.capabilities.toLowerCase().includes("tilemap")){const T={tileInfo:r.storageInfo.tileInfo,parsedUrl:kt(this.url),url:this.url,tileServers:[]};this._tilemapCache=new Ai({layer:T})}}async fetchRawTile(a,e,i,t={}){const{storageInfo:s,extent:r}=this.rasterInfo,{transposeInfo:n}=s,o=n!=null&&!!t.transposedVariableName;if(this._slices&&!o&&t.sliceId==null)return null;const l=o?0:s.maximumPyramidLevel-a+this._levelOffset,c=`${this.url}/tile/${l}/${e}/${i}`,u=this._slices?o?{variable:t.transposedVariableName}:{sliceId:t.sliceId||0}:null,{data:f}=await this.request(c,{query:u,responseType:"array-buffer",signal:t.signal});if(!f)return null;const m=o?n.tileSize:s.tileInfo.size,h=await this.decodePixelBlock(f,{width:m[0],height:m[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:o,noDataValue:this.rasterInfo.noDataValue});if(h==null)return null;const p=s.blockBoundary[a];if(s.compression!=="jpg"||i>p.minCol&&i<p.maxCol&&e>p.minRow&&e<p.maxRow)return h;const{origin:y,blockWidth:d,blockHeight:x}=s,{x:g,y:w}=this.getPyramidPixelSize(a),b=Math.round((r.xmin-y.x)/g)%d,_=Math.round((r.xmax-y.x)/g)%d||d,R=Math.round((y.y-r.ymax)/w)%x,T=Math.round((y.y-r.ymin)/w)%x||x,v=i===p.minCol?b:0,F=e===p.minRow?R:0,k=i===p.maxCol?_:d,M=e===p.maxRow?T:x;return yi(h,{x:v,y:F},{width:k-v,height:M-F}),h}getSliceIndex(a){if(!this._slices||a==null||a.length===0)return null;const e=a;for(let i=0;i<this._slices.length;i++){const t=this._slices[i].multidimensionalDefinition;if(t.length===e.length&&!t.some(s=>{const r=e.find(n=>s.variableName===n.variableName&&n.dimensionName===s.dimensionName);return r?(Array.isArray(s.values[0])?`${s.values[0][0]}-${s.values[0][1]}`:s.values[0])!==(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0]):!0}))return i}return null}async fetchVariableStatisticsHistograms(a,e){const i=this.request(this.url+"/statistics",{query:{variable:a,f:"json"},signal:e}).then(r=>r.data?.statistics),t=this.request(this.url+"/histograms",{query:{variable:a,f:"json"},signal:e}).then(r=>r.data?.histograms),s=await Promise.all([i,t]);return s[0]&&s[0].forEach(r=>{r.avg=r.mean,r.stddev=r.standardDeviation}),s[1]?.[0]?.counts?.length||(s[1]=null),{statistics:s[0]||null,histograms:s[1]||null}}async computeBestPyramidLevelForLocation(a,e={}){if(!this._tilemapCache)return 0;let i=this.identifyPixelLocation(a,0,e.datumTransformation);if(i===null)return null;let t=0;const{maximumPyramidLevel:s}=this.rasterInfo.storageInfo;let r=s-t+this._levelOffset;const n=i.srcLocation;for(;r>=0;){try{if(await this._tilemapCache.fetchAvailability(r,i.row,i.col,e)==="available")break}catch{}if(r--,t++,i=this.identifyPixelLocation(n,t,e.datumTransformation),i===null)return null}return r===-1||i==null?null:t}async _fetchRasterInfo(a){const e=this.sourceJSON;if(this.tileType==="Map"){const n=e.fullExtent||e.extent,o=Math.ceil((n.xmax-n.xmin)/e.pixelSizeX-.1),l=Math.ceil((n.ymax-n.ymin)/e.pixelSizeY-.1),c=H.fromJSON(e.spatialReference||n.spatialReference),u=new E({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new xe({width:o,height:l,bandCount:3,extent:N.fromJSON(n),spatialReference:c,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:i}=a,t=ti(this.url,this.sourceJSON,{signal:i,query:this.ioConfig.customFetchParameters}),s=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:i}).then(n=>n.data?.slices).catch(()=>null):null,r=await Promise.all([t,s]);return this._slices=r[1],r[0]}_fixScaleInServiceInfo(){const{sourceJSON:a}=this;a.minScale&&a.minScale<0&&(a.minScale=0),a.maxScale&&a.maxScale<0&&(a.maxScale=0)}_fixGCSShift(a){const{extent:e,spatialReference:i}=a;e.xmin>-1&&e.xmax>181&&i?.wkid&&i.isGeographic&&(a.nativeExtent=a.extent,a.transform=new Oi,a.extent=a.transform.forwardTransform(e))}_computeMinMaxLOD(a,e){const{pixelSize:i}=a,t=.5/a.width*i.x,{lods:s}=e,r=e.lodAt(Math.max.apply(null,s.map(m=>m.level))),n=e.lodAt(Math.min.apply(null,s.map(m=>m.level))),{tileType:o}=this;if(o==="Map")return this._levelOffset=s[0].level,[r,n];if(o==="Raster")return[s.find(m=>m.resolution===i.x)??r,n];const{minScale:l,maxScale:c}=this.sourceJSON;let u=r;c>0&&(u=s.find(m=>Math.abs(m.scale-c)<t),u||(u=s.filter(m=>m.scale>c).sort((m,h)=>m.scale>h.scale?1:-1)[0]??r));let f=n;return l>0&&(f=s.find(m=>Math.abs(m.scale-l)<t)??n,this._levelOffset=f.level-n.level),[u,f]}};function ss(a,e){if(!a)return null;const{minScale:i,maxScale:t,minLOD:s,maxLOD:r}=e;if(s!=null&&r!=null)return ee.fromJSON({...a,lods:a.lods.filter(({level:n})=>n!=null&&n>=s&&n<=r)});if(i!==0&&t!==0){const n=c=>Math.round(1e4*c)/1e4,o=i?n(i):1/0,l=t?n(t):-1/0;return ee.fromJSON({...a,lods:a.lods.filter(c=>{const u=n(c.scale);return u<=o&&u>=l})})}return ee.fromJSON(a)}I([S({type:String,json:{write:!0}})],ye.prototype,"datasetFormat",void 0),I([S()],ye.prototype,"tileType",void 0),ye=I([K("esri.layers.support.rasterDatasets.ImageServerRaster")],ye);const rs=ye,X=new Map;X.set("Int8","s8"),X.set("UInt8","u8"),X.set("Int16","s16"),X.set("UInt16","u16"),X.set("Int32","s32"),X.set("UInt32","u32"),X.set("Float32","f32"),X.set("Float64","f32"),X.set("Double64","f32");const ie=new Map;ie.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ie.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ie.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ie.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ue=class extends ce{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}async open(a){await this.init(),this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);const e=a?a.signal:null,i=await this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:t,files:s}=this._parseHeader(i.data);if(this.ioConfig.skipExtensions?.indexOf("aux.xml")===-1){const y=await this._fetchAuxiliaryData(a);y!=null&&(t.statistics=y.statistics??t.statistics,t.histograms=y.histograms,y.histograms&&t.statistics==null&&(t.statistics=Ne(y.histograms)))}this._set("rasterInfo",t),this._files=s;const r=await this.request(s.index,{responseType:"array-buffer",signal:e});this._storageIndex=this._parseIndex(r.data);const{blockWidth:n,blockHeight:o}=this.rasterInfo.storageInfo,l=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:c,height:u}=this.rasterInfo,f=[],m=this._getBandSegmentCount();let h=0,p=-1;for(;h<this._storageIndex.length;){p++;const y=Math.ceil(c/n/l**p)-1,d=Math.ceil(u/o/l**p)-1;h+=(y+1)*(d+1)*m*4,f.push({maxRow:d,maxCol:y,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=f,p>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=p),this.updateTileInfo()}async fetchRawTile(a,e,i,t={}){const{blockWidth:s,blockHeight:r,blockBoundary:n}=this.rasterInfo.storageInfo,o=n[a];if(!o||o.maxRow<e||o.maxCol<i||o.minRow>e||o.minCol>i)return null;const{bandCount:l,pixelType:c}=this.rasterInfo,{ranges:u,actualTileWidth:f,actualTileHeight:m}=this._getTileLocation(a,e,i);if(!u||u.length===0)return null;if(u[0].from===0&&u[0].to===0){const k=new Uint8Array(s*r);return new te({width:s,height:r,pixels:null,mask:k,validPixelCount:0})}const{bandIds:h}=this.ioConfig,p=this._getBandSegmentCount(),y=[];let d=0;for(d=0;d<p;d++)h&&!h.includes(d)||y.push(this.request(this._files.data,{range:{from:u[d].from,to:u[d].to},responseType:"array-buffer",signal:t.signal}));const x=await Promise.all(y),g=x.map(k=>k.data.byteLength).reduce((k,M)=>k+M),w=new Uint8Array(g);let b=0;for(d=0;d<p;d++)w.set(new Uint8Array(x[d].data),b),b+=x[d].data.byteLength;const _=ie.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=await this.decodePixelBlock(w.buffer,{width:s,height:r,format:_,planes:h?.length||l,pixelType:c});if(R==null)return null;let{noDataValue:T}=this.rasterInfo;if(T!=null&&_!=="lerc"&&!R.mask&&(T=T[0],T!=null)){const k=R.width*R.height,M=new Uint8Array(k);if(Math.abs(T)>1e24)for(d=0;d<k;d++)Math.abs((R.pixels[0][d]-T)/T)>1e-6&&(M[d]=1);else for(d=0;d<k;d++)R.pixels[0][d]!==T&&(M[d]=1);R.mask=M}let v=0,F=0;if(f!==s||m!==r){let k=R.mask;if(k)for(d=0;d<r;d++)if(F=d*s,d<m)for(v=f;v<s;v++)k[F+v]=0;else for(v=0;v<s;v++)k[F+v]=0;else for(k=new Uint8Array(s*r),R.mask=k,d=0;d<m;d++)for(F=d*s,v=0;v<f;v++)k[F+v]=1}return R}_parseIndex(a){if(a.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,i,t,s,r,n;if(gi){for(i=new Uint8Array(a),s=new ArrayBuffer(a.byteLength),t=new Uint8Array(s),r=0;r<a.byteLength/4;r++)for(n=0;n<4;n++)t[4*r+n]=i[4*r+3-n];e=new Uint32Array(s)}else e=new Uint32Array(a);return e}_getBandSegmentCount(){return ie.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(a,e,i){const{blockWidth:t,blockHeight:s,pyramidScalingFactor:r}=this.rasterInfo.storageInfo,{width:n,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,f,m=0,h=0;for(f=0;f<a;f++)h=r**f,c=Math.ceil(n/t/h),u=Math.ceil(o/s/h),m+=c*u;h=r**a,c=Math.ceil(n/t/h),u=Math.ceil(o/s/h),m+=e*c+i,m*=4*l;const p=this._storageIndex.subarray(m,m+4*l);let y=0,d=0;const x=[];for(let g=0;g<l;g++)y=p[4*g]*2**32+p[4*g+1],d=y+p[4*g+2]*2**32+p[4*g+3],x.push({from:y,to:d});return{ranges:x,actualTileWidth:i<c-1?t:Math.ceil(n/h)-t*(c-1),actualTileHeight:e<u-1?s:Math.ceil(o/h)-s*(u-1)}}_parseHeader(a){const e=U(a,"MRF_META/Raster");if(!e)throw new C("mrf:open","not a valid MRF format");const i=U(e,"Size"),t=parseInt(i.getAttribute("x"),10),s=parseInt(i.getAttribute("y"),10),r=parseInt(i.getAttribute("c"),10),n=(Y(e,"Compression")||"none").toLowerCase();if(!ie.has(n))throw new C("mrf:open","currently does not support compression "+n);const o=Y(e,"DataType")||"UInt8",l=X.get(o);if(l==null)throw new C("mrf:open","currently does not support pixel type "+o);const c=U(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),f=parseInt(c.getAttribute("y"),10),m=U(e,"DataValues");let h,p;if(m&&(p=m.getAttribute("NoData"),p!=null&&(h=p.trim().split(" ").map(M=>parseFloat(M)))),U(a,"MRF_META/CachedSource"))throw new C("mrf:open","currently does not support MRF referencing other data files");const y=U(a,"MRF_META/GeoTags"),d=U(y,"BoundingBox");let x,g=!1;if(d!=null){const M=parseFloat(d.getAttribute("minx")),P=parseFloat(d.getAttribute("miny")),D=parseFloat(d.getAttribute("maxx")),J=parseFloat(d.getAttribute("maxy")),$=Y(y,"Projection")||"";let O=H.WGS84;if($!=="LOCAL_CS[]")if($.toLowerCase().startsWith("epsg:")){const B=Number($.slice(5));isNaN(B)||B===0||(O=new H({wkid:B}))}else O=Fe($)??H.WGS84;else g=!0,O=new H({wkid:3857});x=new N(M,P,D,J),x.spatialReference=O}else g=!0,x=new N({xmin:-.5,ymin:.5-s,xmax:t-.5,ymax:.5,spatialReference:new H({wkid:3857})});const w=U(a,"MRF_META/Rsets"),b=parseInt(w?.getAttribute("scale")||"2",10),_=x.spatialReference,R=new ge({origin:new E({x:x.xmin,y:x.ymax,spatialReference:_}),blockWidth:u,blockHeight:f,pyramidBlockWidth:u,pyramidBlockHeight:f,compression:n,pyramidScalingFactor:b}),T=new E({x:x.width/t,y:x.height/s,spatialReference:_}),v=new xe({width:t,height:s,extent:x,isPseudoSpatialReference:g,spatialReference:_,bandCount:r,pixelType:l,pixelSize:T,noDataValue:h,storageInfo:R}),F=Y(a,"datafile"),k=Y(a,"IndexFile");return{rasterInfo:v,files:{mrf:this.url,index:k||this.url.replace(".mrf",".idx"),data:F||this.url.replace(".mrf",ie.get(n).blobExtension)}}}async _fetchAuxiliaryData(a){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:a?.signal});return We(e)}catch{return null}}};I([S()],ue.prototype,"_files",void 0),I([S()],ue.prototype,"_storageIndex",void 0),I([S({type:String,json:{write:!0}})],ue.prototype,"datasetFormat",void 0),ue=I([K("esri.layers.support.rasterIO.MRFRaster")],ue);const ns=ue,$e=(a,e)=>a.get(e)?.values,de=(a,e)=>a.get(e)?.values?.[0];let oe=class extends ce{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}async open(a){await this.init();const e=a?a.signal:null,{data:i}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!i)throw new C("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:t,firstIFDPos:s,isBigTiff:r}=xi(i),n=[];await this._readIFDs(n,i,t,s,0,r?8:4,e);const{imageInfo:o,rasterInfo:l}=this._parseIFDs(n),c=wi(n),u=Ii(n);if(this._headerInfo={littleEndian:t,isBigTiff:r,ifds:n,pyramidIFDs:c,maskIFDs:u,...o},this._set("rasterInfo",l),!o.isSupported)throw new C("tiffraster:open","this tiff is not supported: "+o.message);if(!o.tileWidth)throw new C("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");l.isPseudoSpatialReference&&_e.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const f=n[0].get("PREDICTOR")?.values?.[0];if(n[0].get("SAMPLEFORMAT")?.values?.[0]===3&&f===2)throw new C("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floatting point data");const{skipExtensions:h=[]}=this.ioConfig;if(!h.includes("aux.xml")){const p=await this._fetchAuxiliaryMetaData(a);p!=null&&this._processPAMInfo(p,l)}h.includes("vat.dbf")||l.bandCount!==1||l.pixelType!=="u8"||(l.attributeTable=await this._fetchAuxiliaryTable(a),l.attributeTable!=null&&(l.keyProperties.DataType="thematic")),this.updateTileInfo()}async fetchRawTile(a,e,i,t={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(a,e,i))return null;const s=await this._fetchRawTiffTile(a,e,i,!1,t);if(s!=null&&this._headerInfo.hasMaskBand){const r=await this._fetchRawTiffTile(a,e,i,!0,t);r!=null&&r.pixels[0]instanceof Uint8Array&&(s.mask=r.pixels[0])}return s}_parseIFDs(a){const e=bi(a),{width:i,height:t,tileWidth:s,tileHeight:r,planes:n,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:f,pyramidBlockHeight:m,tileBoundary:h,affine:p,metadata:y}=e,d=e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid;let x=Fe(d),g=!!e.isPseudoGeographic;x==null&&(g=!0,x=new H({wkid:3857}));const w=new N({...e.extent,spatialReference:x}),b=new E(w?{x:w.xmin,y:w.ymax,spatialReference:x}:{x:0,y:0}),_=new ge({blockWidth:s,blockHeight:r,pyramidBlockWidth:f,pyramidBlockHeight:m,compression:l,origin:b,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:h}),R=new E({x:(w.xmax-w.xmin)/i,y:(w.ymax-w.ymin)/t,spatialReference:x}),T=y?{BandProperties:y.bandProperties,DataType:y.dataType}:{};let v=null;const F=de(a[0],"PHOTOMETRICINTERPRETATION"),k=$e(a[0],"COLORMAP");if(F<=3&&k?.length>3&&k.length%3==0){v=[];const P=k.length/3;for(let D=0;D<P;D++)v.push([D,k[D]>>>8,k[D+P]>>>8,k[D+2*P]>>>8])}const M=new xe({width:i,height:t,bandCount:n,pixelType:o,pixelSize:R,storageInfo:_,spatialReference:x,isPseudoSpatialReference:g,keyProperties:T,extent:w,colormap:v,statistics:y?y.statistics:null});return p?.length&&(M.nativeExtent=new N({xmin:-.5,ymin:.5-t,xmax:i-.5,ymax:.5,spatialReference:x}),M.transform=new Le({polynomialOrder:1,forwardCoefficients:[p[2]+p[0]/2,p[5]-p[3]/2,p[0],p[3],-p[1],-p[4]]}),M.extent=M.transform.forwardTransform(M.nativeExtent),M.pixelSize=new E({x:(w.xmax-w.xmin)/i,y:(w.ymax-w.ymin)/t,spatialReference:x}),_.origin.x=-.5,_.origin.y=.5),{imageInfo:e,rasterInfo:M}}_processPAMInfo(a,e){if(e.statistics=a.statistics??e.statistics,e.histograms=a.histograms,a.histograms&&e.statistics==null&&(e.statistics=Ne(a.histograms)),a.transform&&e.transform==null){e.transform=a.transform,e.nativeExtent=e.extent;const i=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new E({x:(i.xmax-i.xmin)/e.width,y:(i.ymax-i.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=i}e.isPseudoSpatialReference&&a.spatialReference&&(e.spatialReference=a.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}async _readIFDs(a,e,i,t,s,r=4,n){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(await this.request(this.url,{range:{from:t+s,to:t+s+this._bufferSize},responseType:"array-buffer",signal:n})).data,s=t+s,t=0);const o=await this._readIFD(e,i,t,s,Ie.tiffTags,r,n);if(a.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(a,e,i,o.nextIFD-s,s,r,n)}async _readIFD(a,e,i,t,s=Ie.tiffTags,r=4,n){if(!a)return null;const o=Si(a,e,i,t,s,r);if(o.success){const l=[];if(o.ifd?.forEach(c=>{c.values||l.push(c)}),l.length>0){const c=l.map(f=>f.offlineOffsetSize).filter(De),u=Math.min.apply(null,c.map(f=>f[0]));if(Math.min.apply(null,c.map(f=>f[0]+f[1]))-u<=this._bufferSize){const{data:f}=await this.request(this.url,{range:{from:u,to:u+this._bufferSize},responseType:"array-buffer",signal:n});a=f,t=u,l.forEach(m=>Ri(a,e,m,t))}}if(o.ifd?.has("GEOKEYDIRECTORY")){const c=o.ifd.get("GEOKEYDIRECTORY"),u=c?.values;if(u&&u.length>4){const f=u[0]+"."+u[1]+"."+u[2],m=await this._readIFD(a,e,c.valueOffset+6-t,t,Ie.geoKeys,2,n);c.data=m.ifd,c.data&&c.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[f]})}}return o}if(o.requiredBufferSize&&o.requiredBufferSize!==a.byteLength)return(a=(await this.request(this.url,{range:{from:t,to:t+o.requiredBufferSize+4},responseType:"array-buffer",signal:n})).data).byteLength<o.requiredBufferSize?null:this._readIFD(a,e,0,t,Ie.tiffTags,4,n)}async _fetchRawTiffTile(a,e,i,t,s={}){const r=this._getTileLocation(a,e,i,t);if(!r)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:l,ifd:c}=r,u=n.map(R=>this.request(this.url,{range:R,responseType:"array-buffer",signal:s.signal})),f=await Promise.all(u),m=f.map(R=>R.data.byteLength).reduce((R,T)=>R+T),h=f.length===1?f[0].data:new ArrayBuffer(m),p=[0],y=[0];if(f.length>1){const R=new Uint8Array(h);for(let T=0,v=0;T<f.length;T++){const F=f[T].data;R.set(new Uint8Array(F),v),p[T]=v,v+=F.byteLength,y[T]=F.byteLength}}const{blockWidth:d,blockHeight:x}=this.getBlockWidthHeight(a),g=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:c,offsets:p,sizes:y},width:d,height:x,planes:null,pixelType:null});if(g==null)return null;let w,b,_;if(o!==d||l!==x){let R=g.mask;if(R)for(w=0;w<x;w++)if(_=w*d,w<l)for(b=o;b<d;b++)R[_+b]=0;else for(b=0;b<d;b++)R[_+b]=0;else for(R=new Uint8Array(d*x),g.mask=R,w=0;w<l;w++)for(_=w*d,b=0;b<o;b++)R[_+b]=1}return g}_getTileLocation(a,e,i,t=!1){const{firstPyramidLevel:s,blockBoundary:r}=this.rasterInfo.storageInfo,n=a===0?0:a-(s-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[n]:n===0?o?.ifds[0]:o?.pyramidIFDs[n-1];if(!l)return null;const c=vi(l,o),u=$e(l,"TILEOFFSETS");if(u===void 0)return null;const f=$e(l,"TILEBYTECOUNTS"),{minRow:m,minCol:h,maxRow:p,maxCol:y}=r[n];if(e>p||i>y||e<m||i<h)return null;const d=de(l,"IMAGEWIDTH"),x=de(l,"IMAGELENGTH"),g=de(l,"TILEWIDTH"),w=de(l,"TILELENGTH"),b=[];if(c){const{bandCount:_}=this.rasterInfo;for(let R=0;R<_;R++){const T=R*(p+1)*(y+1)+e*(y+1)+i;b[R]={from:u[T],to:u[T]+f[T]-1}}}else{const _=e*(y+1)+i;b.push({from:u[_],to:u[_]+f[_]-1})}for(let _=0;_<b.length;_++)if(b[_].from==null||!b[_].to||b[_].to<0)return null;return{ranges:b,ifd:l,actualTileWidth:i===y&&d%g||g,actualTileHeight:e===p&&x%w||w}}async _fetchAuxiliaryMetaData(a){try{const{data:e}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:a?.signal});return We(e)}catch{return null}}async _fetchAuxiliaryTable(a){try{const{data:e}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:a?.signal}),i=yt.parse(e);return i?.recordSet?He.fromJSON(i.recordSet):null}catch{return null}}};I([S()],oe.prototype,"_files",void 0),I([S()],oe.prototype,"_headerInfo",void 0),I([S()],oe.prototype,"_bufferSize",void 0),I([S({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),oe=I([K("esri.layers.support.rasterDatasets.TIFFRaster")],oe);const as=oe,W=new Map;W.set("CRF",{desc:"Cloud Raster Format",constructor:Zi}),W.set("MRF",{desc:"Meta Raster Format",constructor:ns}),W.set("TIFF",{desc:"GeoTIFF",constructor:as}),W.set("RasterTileServer",{desc:"Raster Tile Server",constructor:rs}),W.set("JPG",{desc:"JPG Raster Format",constructor:Re}),W.set("PNG",{desc:"PNG Raster Format",constructor:Re}),W.set("GIF",{desc:"GIF Raster Format",constructor:Re}),W.set("BMP",{desc:"BMP Raster Format",constructor:Re});class os{static get supportedFormats(){const e=new Set;return W.forEach((i,t)=>e.add(t)),e}static async open(e){const{url:i,ioConfig:t,sourceJSON:s}=e;let r=e.datasetFormat;r==null&&i.lastIndexOf(".")&&(r=i.slice(i.lastIndexOf(".")+1).toUpperCase()),r==="OVR"||r==="TIF"?r="TIFF":r!=="JPG"&&r!=="JPEG"&&r!=="JFIF"||(r="JPG"),i.toLowerCase().includes("/imageserver")&&!i.toLowerCase().includes("/wcsserver")&&(r="RasterTileServer");const n={url:i,sourceJSON:s,datasetFormat:r,ioConfig:t??{bandIds:null,sampling:null}};let o,l;if(r&&this.supportedFormats.has(r)){if(r==="CRF"&&!t?.enableCRF)throw new C("rasterfactory:open",`cannot open raster: ${i}`);return o=W.get(r).constructor,l=new o(n),await l.open({signal:e.signal}),l}if(r)throw new C("rasterfactory:open","not a supported format "+r);const c=Array.from(W.keys());let u=0;const f=()=>(r=c[u++],r&&(r!=="CRF"||t?.enableCRF)?(o=W.get(r).constructor,l=new o(n),l.open({signal:e.signal}).then(()=>l).catch(()=>f())):null);return f()}static register(e,i,t){W.has(e.toUpperCase())||W.set(e.toUpperCase(),{desc:i,constructor:t})}}let A=class extends Et(zi(Di(Bi(Nt(Yi(Ji(At(Ft(Mt(Ct(Jt))))))))))){constructor(...a){super(...a),this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this._debouncedSaveOperations=Pt(async(e,i,t)=>{const{save:s,saveAs:r}=await ut(()=>import("./imageryUtils-5a04c887.js"),["./imageryUtils-5a04c887.js","./utils-118e07d9.js","./index-8b5e7d9b.js","./index-5447a158.css","./jsonContext-7dfdc657.js"],import.meta.url);switch(e){case we.SAVE:return s(this,i);case we.SAVE_AS:return r(this,t,i)}})}normalizeCtorArgs(a,e){return typeof a=="string"?{url:a,...e}:a}load(a){const e=a!=null?a.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},a).catch(Ot).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const a=[new he({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new he({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{rasterInfo:e}=this,i=e?.attributeTable,t=i!=null?i.fields:null,s="Raster.";if(t){const o=t.filter(l=>l.type!=="oid"&&l.name.toLowerCase()!=="value").map(l=>{const c=l.clone();return c.name=s+l.name,c});a.push(...o)}const r=e?.dataType,n=e?.multidimensionalInfo;if((r==="vector-magdir"||r==="vector-uv")&&n!=null){const o=n.variables[0].unit?.trim(),l="Magnitude"+(o?` (${o})`:"");a.push(new he({name:"Raster.Magnitude",alias:l,domain:null,editable:!1,type:"double"})),a.push(new he({name:"Raster.Direction",alias:"Direction (°)",domain:null,editable:!1,type:"double"}))}return a}createPopupTemplate(a){const{rasterFields:e}=this,i=new Set(e.map(({name:t})=>t).filter(t=>t.toLowerCase()!=="raster.servicepixelvalue.raw"));return Ei({fields:e,title:this.title},{...a,visibleFieldNames:i})}async generateRasterInfo(a,e){if(!(a=Ee(Be,a)))return this.rasterInfo;try{const i={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(r=>i[r.url]=r);const t=Je(a.functionDefinition?.toJSON()??a.toJSON(),i),s=new Ae({rasterFunction:t});return await s.open(e),s.rasterInfo}catch(i){throw i instanceof C?i:new C("imagery-tile-layer","the given raster function is not supported")}}async save(a){return this._debouncedSaveOperations(we.SAVE,a)}async saveAs(a,e){return this._debouncedSaveOperations(we.SAVE_AS,e,a)}write(a,e){const i=this._primaryRasters[0]??this.raster;if(this.loaded?i.datasetFormat==="RasterTileServer"&&(i.tileType==="Raster"||i.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(a,e);if(e?.messages){const t=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new C("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${t}'`,{layer:this}))}return null}async _openRaster(a){let e=!1;if(this.raster)this.raster.rasterInfo||await this.raster.open(),this.raster.datasetFormat==="Function"?(e=!0,this._primaryRasters=this.raster.primaryRasters.rasters):this._primaryRasters=[this.raster],this.url=this.raster.url;else{const{rasterFunction:t}=this,s=[this.url];t&&$i(t.toJSON(),s);const r=await Promise.all(s.map(o=>os.open({url:o,sourceJSON:this.sourceJSON,ioConfig:{sampling:"closest",...this.ioConfig,customFetchParameters:this.customParameters},signal:a}))),n=r.findIndex(o=>o==null);if(n>-1)throw new C("imagery-tile-layer:open",`cannot open raster: ${s[n]}`);if(this._primaryRasters=r,t){const o={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(u=>o[u.url]=u);const l=Je(t.functionDefinition?.toJSON()??t.toJSON(),o),c=new Ae({rasterFunction:l});try{await c.open(),this.raster=c}catch(u){const f=_e.getLogger(this);u instanceof C&&f.error("imagery-tile-layer:open",u.message),f.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=r[0]}}else this.raster=r[0]}const i=this.raster.rasterInfo;if(!i)throw new C("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("rasterInfo",e?i:this._primaryRasters[0].rasterInfo),this._set("spatialReference",i.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){const t=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:{...this.sourceJSON,minScale:0,maxScale:0};this.read(t,{origin:"service"})}else this.read({tileInfo:this.rasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles($t(()=>this.customParameters,t=>{this.raster&&(this.raster.ioConfig.customFetchParameters=t)}))}};I([S({clonable:!1})],A.prototype,"_primaryRasters",void 0),I([S({type:[Dt],json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.bandIds?.join(",")!=="0,1,2"}}}}})],A.prototype,"bandIds",void 0),I([S({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Bt(ii)],A.prototype,"interpolation",void 0),I([S(si)],A.prototype,"legendEnabled",void 0),I([S({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],A.prototype,"isReference",void 0),I([S({type:["show","hide"]})],A.prototype,"listMode",void 0),I([S({json:{read:!0,write:!0}})],A.prototype,"blendMode",void 0),I([S()],A.prototype,"sourceJSON",void 0),I([S({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],A.prototype,"version",void 0),I([S({readOnly:!0,json:{read:!1}})],A.prototype,"type",void 0),I([S({type:["ArcGISTiledImageServiceLayer"]})],A.prototype,"operationalLayerType",void 0),I([S({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(a,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(a,e,i){e[i]=!a}}}})],A.prototype,"popupEnabled",void 0),I([S({type:zt,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],A.prototype,"popupTemplate",void 0),I([S({readOnly:!0})],A.prototype,"defaultPopupTemplate",null),I([S({readOnly:!0,type:[he]})],A.prototype,"fields",void 0),I([S({readOnly:!0,type:[he]})],A.prototype,"rasterFields",null),A=I([K("esri.layers.ImageryTileLayer")],A);const zs=A;export{zs as default};
