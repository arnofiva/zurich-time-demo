import{aO as a,ag as e,aP as s,ah as r,ai as o,aQ as p,ak as m}from"./index-35e234f2.js";import{E as n}from"./I3SMeshView3D-eff2bd61.js";import{n as l}from"./LayerView3D-991490fa.js";import{u as d}from"./LayerView-67e9b405.js";import"./I3SOverrides-2df828b7.js";import"./I3SNode-1e883138.js";import"./I3SUtil-62855860.js";import"./I3SBinaryReader-b2b909f3.js";import"./ReactiveSet-f2d35dd4.js";import"./meshFeatureSet-0a9fe405.js";import"./External-faf16527.js";import"./FeatureSet-890fea54.js";import"./FeatureLayerView3D-cd537a07.js";import"./FeatureLayerViewBase3D-891d9bad.js";import"./FeatureLikeLayerView3D-e901853d.js";import"./dehydratedFeatureComparison-cd759490.js";import"./queryForSymbologySnapping-b19757ea.js";import"./elevationInfoUtils-90633ec5.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-0d31628a.js";import"./rendererConversion-d2c40a92.js";import"./optimizedFeatureQueryEngineAdapter-f30d1b42.js";import"./PooledRBush-79fb96bc.js";import"./quickselect-1f3831f7.js";import"./popupUtils-024db583.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-ffb0d164.js";import"./WhereClause-ad516fc1.js";import"./TimeOnly-0aaf2515.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-d72db9aa.js";import"./utils-117069f5.js";import"./generateRendererUtils-023c7e78.js";import"./FeatureStore-3a774eae.js";import"./BoundsStore-60c472e1.js";import"./projectExtentUtils-35f5d5f0.js";import"./query-7fb34953.js";import"./pbfQueryUtils-06ca1a31.js";import"./pbf-20893484.js";import"./queryZScale-4260d97b.js";import"./EventedSet-893764bd.js";import"./RefreshableLayerView-a7b6ab14.js";import"./SceneModification-dab2fc86.js";import"./persistable-ec035db7.js";import"./resourceExtension-f8a8d36e.js";import"./SceneLayerWorker-64f7d4a6.js";const c=.2;let t=class extends n(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?c:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),e),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),e),"modifications")}};r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"i3slayer",null),r([o(p)],t.prototype,"updatingProgress",void 0),r([o()],t.prototype,"updatingProgressValue",null),r([o()],t.prototype,"lodFactor",null),r([o({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([m("esri.views.3d.layers.SceneLayerView3D")],t);const st=t;export{st as default};
