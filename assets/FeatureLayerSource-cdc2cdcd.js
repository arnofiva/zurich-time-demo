import{ky as U,jT as j,kz as P,gn as D,f3 as Q,e6 as V,kA as T,kB as G,bi as x,as as A,aL as W,cO as z,cL as C,ah as F,ai as v,ak as H,hM as B,aS as X,cJ as M,au as m,dO as $,cr as Y,ch as Z,d9 as K,cW as ee,dC as N,ax as te,kC as ae,d6 as se,at as re,ge as ie,bd as ne,kD as oe}from"./index-8b5e7d9b.js";import{v as ue}from"./External-45f5ccd1.js";import{isFeatureIdentifierArrayWithGlobalId as le,isFeatureIdentifierArrayWithObjectId as ce}from"./editingSupport-f6574de9.js";import{o as de}from"./clientSideDefaults-7259c628.js";import{x as pe}from"./QueryTask-39d65650.js";import{Q as O}from"./featureLayerUtils-d891b150.js";import{s as he}from"./executeQueryJSON-d0cd1585.js";import{i as ye}from"./editsZScale-03b9f186.js";import{b as me}from"./Query-630c5d65.js";import{s as fe,a as ge,r as be}from"./EditBusLayer-3babd061.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./defaultsJSON-59981e75.js";import"./executeForIds-a0fa7e82.js";import"./query-ae6e69b4.js";import"./pbfQueryUtils-0854066b.js";import"./pbf-97a34880.js";import"./queryZScale-9dee68ff.js";import"./executeQueryPBF-6bc02793.js";import"./FeatureSet-05a1ff98.js";import"./featureQueryAll-778379dd.js";import"./jsonUtils-3d6448c4.js";import"./UniqueValueRenderer-176db886.js";import"./ColorStop-ac9a118d.js";import"./diffUtils-3ed1f592.js";import"./colorRamps-cf6fa9ce.js";import"./DictionaryLoader-1a1ab2cc.js";import"./FieldsIndex-85e142d0.js";import"./heatmapUtils-3c0e0ece.js";import"./AttachmentQuery-ac66f9a7.js";import"./RelationshipQuery-249800df.js";function we(e){const{vertexSpace:t}=e;if(t.isRelative)return e.clone();const{anchor:a}=e,s=a.clone(),r=U(Re,[-s.x,-s.y,-s.z]),i=new j({origin:[s.x,s.y,s.z]}),n=e.cloneWithVertexSpace(i),{position:o}=n.vertexAttributes;return n.vertexAttributes.position=P(new Float64Array(o.length),o,r),n.vertexAttributesChanged(),n}const Re=D();async function k(e,t,a){const{geometry:s}=t,r={...t.attributes};if(a!=null&&s?.type==="mesh"){const{transformFieldRoles:i}=a,{origin:n,spatialReference:o,transform:u}=s,l=e.spatialReference;await Q(o,l);const d=V(n,l);if(r[i.originX]=d.x,r[i.originY]=d.y,r[i.originZ]=d.z??0,u!=null){const{translation:y,scale:p,rotation:f}=u,{vertexSpace:w}=s,c=w.isGeoreferenced?1:T(o)/T(l);r[i.translationX]=y[0]*c,r[i.translationY]=y[2]*c,r[i.translationZ]=-y[1]*c,r[i.scaleX]=p[0],r[i.scaleY]=p[2],r[i.scaleZ]=p[1],r[i.rotationX]=f[0],r[i.rotationY]=f[2],r[i.rotationZ]=-f[1],r[i.rotationDeg]=f[3]}return{attributes:r}}return s==null?{attributes:r}:s.type==="mesh"||s.type==="extent"?null:{geometry:s.toJSON(),attributes:r}}async function Se(e,t){const a=await Promise.all((t.addAttachments??[]).map(i=>J(e,i))),s=await Promise.all((t.updateAttachments??[]).map(i=>J(e,i))),r=t.deleteAttachments??[];return a.length||s.length||r.length?{adds:a,updates:s,deletes:[...r]}:null}async function J(e,t){const{feature:a,attachment:s}=t,{globalId:r,name:i,contentType:n,data:o,uploadId:u}=s,l={globalId:r};if(a&&("attributes"in a?l.parentGlobalId=a.attributes?.[e.globalIdField]:a.globalId&&(l.parentGlobalId=a.globalId)),u)l.uploadId=u;else if(o){const d=await G(o);d&&(l.contentType=d.mediaType,l.data=d.data),o instanceof File&&(l.name=o.name)}return i&&(l.name=i),n&&(l.contentType=n),l}function qe(e,t,a){if(!t||t.length===0)return[];if(a&&le(t))return t.map(r=>r.globalId);if(ce(t))return t.map(r=>r.objectId);const s=a?e.globalIdField:e.objectIdField;return s?t.map(r=>r.getAttribute(s)):[]}function Ae(e){const t=e?.assetMaps;if(t){for(const r of t.addResults)r.success||x.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${r.globalId}.`);for(const r of t.updateResults)r.success||x.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${r.globalId}.`)}const a=e?.attachments,s={addFeatureResults:e?.addResults?.map(b)??[],updateFeatureResults:e?.updateResults?.map(b)??[],deleteFeatureResults:e?.deleteResults?.map(b)??[],addAttachmentResults:a?.addResults?a.addResults.map(b):[],updateAttachmentResults:a?.updateResults?a.updateResults.map(b):[],deleteAttachmentResults:a?.deleteResults?a.deleteResults.map(b):[]};return e?.editMoment&&(s.editMoment=e.editMoment),s}function b(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new A("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}function E(e,t){return new W({attributes:e.attributes,geometry:z({...e.geometry,spatialReference:t})})}function Ie(e,t){return{adds:e?.adds?.map(a=>E(a,t))||[],updates:e?.updates?.map(a=>({original:E(a[0],t),current:E(a[1],t)}))||[],deletes:e?.deletes?.map(a=>E(a,t))||[],spatialReference:t}}function Fe(e){const t=e.details.raw,a=+t.code,s=+t.extendedCode;return a===500&&(s===-2147217144||s===-2147467261)}const Oe=new C({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),Ee=new Set(["Feature Layer","Oriented Imagery Layer","Table"]),xe=new C({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let S=class extends B{constructor(){super(...arguments),this.type="feature-layer",this.refresh=X(async()=>{await this.load();const e=this.sourceJSON.editingInfo?.lastEditDate;if(e==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const t=e!==this.sourceJSON.editingInfo?.lastEditDate;return{dataChanged:t,updates:t?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(e){const t=this.layer.sourceJSON,a=this._fetchService(t,{...e}).then(()=>this.layer.setUserPrivileges(this.sourceJSON.serviceItemId,e)).then(()=>this._ensureLatestMetadata(e));return this.addResolvingPromise(a),Promise.resolve(this)}get queryTask(){const{capabilities:e,parsedUrl:t,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:i,fieldsIndex:n}=this.layer,o=M("featurelayer-pbf")&&e?.query.supportsFormatPBF&&s==null,u=e?.operations?.supportsQueryAttachments??!1;return new pe({url:t.path,pbfSupported:o,fieldsIndex:n,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:i,queryAttachmentsSupported:u})}async addAttachment(e,t){await this.load();const{layer:a}=this;await O(a,"editing");const s=e.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/addAttachment",i=this._getLayerRequestOptions(),n=this._getFormDataForAttachment(t,i.query);try{const o=await m(r,{body:n});return b(o.data.addAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(s,o)}}async updateAttachment(e,t,a){await this.load();const{layer:s}=this;await O(s,"editing");const r=e.attributes[s.objectIdField],i=s.parsedUrl.path+"/"+r+"/updateAttachment",n=this._getLayerRequestOptions({query:{attachmentId:t}}),o=this._getFormDataForAttachment(a,n.query);try{const u=await m(i,{body:o});return b(u.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(r,u)}}async applyEdits(e,t){await this.load();const{layer:a}=this;await O(a,"editing");const s=a.infoFor3D,r=s!=null,i=r||(t?.globalIdUsed??!1),n=r?await this._uploadMeshesAndGetAssetMapEditsJSON(e):null,o=e.addFeatures?.map(h=>k(this.layer,h,s))??[],u=(await Promise.all(o)).filter($),l=e.updateFeatures?.map(h=>k(this.layer,h,s))??[],d=(await Promise.all(l)).filter($),y=qe(this.layer,e.deleteFeatures,i);ye(u,d,a.spatialReference);const p=await Se(this.layer,e),f=a.capabilities.editing.supportsAsyncApplyEdits&&r,w=t?.gdbVersion||a.gdbVersion,c={gdbVersion:w,rollbackOnFailure:t?.rollbackOnFailureEnabled,useGlobalIds:i,returnEditMoment:t?.returnEditMoment,usePreviousEditMoment:t?.usePreviousEditMoment,async:f};await fe(this.layer.url,w,!0);const I=ge(this.layer.url,w||null);t?.returnServiceEditsOption?(c.edits=JSON.stringify([{id:a.layerId,adds:u,updates:d,deletes:y,attachments:p,assetMaps:n}]),c.returnServiceEditsOption=Oe.toJSON(t?.returnServiceEditsOption),c.returnServiceEditsInSourceSR=t?.returnServiceEditsInSourceSR):(c.adds=u.length?JSON.stringify(u):null,c.updates=d.length?JSON.stringify(d):null,c.deletes=y.length?i?JSON.stringify(y):y.join(","):null,c.attachments=p&&JSON.stringify(p),c.assetMaps=n!=null?JSON.stringify(n):void 0);const g=this._getLayerRequestOptions({method:"post",query:c});I&&(g.authMode="immediate",g.query.returnEditMoment=!0,g.query.sessionId=be);const R=t?.returnServiceEditsOption?a.url:a.parsedUrl.path;let q;try{q=f?await this._asyncApplyEdits(R+"/applyEdits",g):await m(R+"/applyEdits",g)}catch(h){if(!Fe(h))throw h;g.authMode="immediate",q=f?await this._asyncApplyEdits(R+"/applyEdits",g):await m(R+"/applyEdits",g)}return!a.capabilities.operations?.supportsEditing&&a.effectiveCapabilities?.operations?.supportsEditing&&await Y?.findCredential(a.url)?.refreshToken(),this._createEditsResult(q)}async deleteAttachments(e,t){await this.load();const{layer:a}=this;await O(a,"editing");const s=e.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await m(r,this._getLayerRequestOptions({query:{attachmentIds:t.join(",")},method:"post"}))).data.deleteAttachmentResults.map(b)}catch(i){throw this._createAttachmentErrorResult(s,i)}}fetchRecomputedExtents(e={}){const t=e.signal;return this.load({signal:t}).then(async()=>{const a=this._getLayerRequestOptions({...e,query:{returnUpdates:!0}}),{layerId:s,url:r}=this.layer,{data:i}=await m(`${r}/${s}`,a),{id:n,extent:o,fullExtent:u,timeExtent:l}=i,d=o||u;return{id:n,fullExtent:d&&Z.fromJSON(d),timeExtent:l&&K.fromJSON({start:l[0],end:l[1]})}})}async queryAttachments(e,t={}){await this.load();const a=this._getLayerRequestOptions(t);return this.queryTask.executeAttachmentQuery(e,a)}async queryFeatures(e,t){await this.load();const a=await this.queryTask.execute(e,{...t,query:this._createRequestQueryOptions(t)});return e.outStatistics?.length&&a.features.length&&a.features.forEach(s=>{const r=s.attributes;e.outStatistics?.forEach(({outStatisticFieldName:i})=>{if(i){const n=i.toLowerCase();n&&n in r&&i!==n&&(r[i]=r[n],delete r[n])}})}),a}async queryFeaturesJSON(e,t){return await this.load(),this.queryTask.executeJSON(e,{...t,query:this._createRequestQueryOptions(t)})}async queryObjectIds(e,t){return await this.load(),this.queryTask.executeForIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryFeatureCount(e,t){return await this.load(),this.queryTask.executeForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryExtent(e,t){return await this.load(),this.queryTask.executeForExtent(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeatures(e,t){return await this.load(),this.queryTask.executeRelationshipQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeaturesCount(e,t){return await this.load(),this.queryTask.executeRelationshipQueryForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopFeatures(e,t){return await this.load(),this.queryTask.executeTopFeaturesQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopObjectIds(e,t){return await this.load(),this.queryTask.executeForTopIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopExtents(e,t){return await this.load(),this.queryTask.executeForTopExtents(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopCount(e,t){return await this.load(),this.queryTask.executeForTopCount(e,{...t,query:this._createRequestQueryOptions(t)})}async fetchPublishingStatus(){if(!ee(this.layer.url))return"unavailable";const e=N(this.layer.url,"status"),t=await m(e,{query:{f:"json"}});return xe.fromJSON(t.data.status)}async uploadAssets(e,t){const{uploadAssets:a}=await te(()=>import("./uploadAssets-96542654.js"),["./uploadAssets-96542654.js","./index-8b5e7d9b.js","./index-5447a158.css","./External-45f5ccd1.js"],import.meta.url);return a(e,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},t)}async _asyncApplyEdits(e,t){const a=(await m(e,t)).data.statusUrl;for(;;){const s=(await m(a,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return m(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new A("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new A("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await ae(_e)}}_createRequestQueryOptions(e){const t={...this.layer.customParameters,token:this.layer.apiKey,...e?.query};return this.layer.datesInUnknownTimezone&&(t.timeReferenceUnknownClient=!0),t}async _fetchService(e,t){if(!e){const s={};M("featurelayer-advanced-symbols")&&(s.returnAdvancedSymbols=!0),t?.cacheBust&&(s._ts=Date.now());const{data:r}=await m(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:s,signal:t?.signal}));e=r}this.sourceJSON=await this._patchServiceJSON(e,t?.signal);const a=e.type;if(!Ee.has(a))throw new A("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(e,t){if(e.type!=="Table"&&e.geometryType&&!e?.drawingInfo?.renderer&&!e.defaultSymbol){const a=de(e.geometryType).renderer;se("drawingInfo.renderer",a,e)}if(e.geometryType==="esriGeometryMultiPatch"&&e.infoFor3D&&(e.geometryType="mesh"),e.extent==null)try{const{data:a}=await m(this.layer.url,this._getLayerRequestOptions({signal:t}));a.spatialReference&&(e.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:a.spatialReference})}catch(a){re(a)}return e}async _ensureLatestMetadata(e){if(this.layer.userHasUpdateItemPrivileges&&this.sourceJSON.cacheMaxAge>0)return this._fetchService(null,{...e,cacheBust:!0})}async _uploadMeshesAndGetAssetMapEditsJSON(e){const{addAssetFeatures:t}=e;if(!t?.length)return null;const a=await this._filterRedundantAssetMaps(t);if(!t?.length)return null;const s=new Array,r=new Map;for(const i of a){const{geometry:n}=i,{vertexSpace:o}=n;if(o.isRelative)s.push(n);else{const u=we(n);r.set(u,n),i.geometry=u,s.push(u)}}await this.uploadAssets(s);for(const[i,n]of r)n.addExternalSources(i.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}}_getAssetMapEditsJSON(e){const t=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of e){const i=r.geometry,{metadata:n}=i,o=n.getExternalSourcesOnService(s),u=r.getAttribute(a);if(o.length===0){x.getLogger(this).error(`Skipping feature ${u}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:l}=o.find(ue)??o[0],{vertexSpace:d}=i,y=d.isGeoreferenced?["PROJECT_VERTICES"]:[];for(const p of l)p.parts.length===1?t.push({globalId:ie(),parentGlobalId:u,assetName:p.assetName,assetHash:p.parts[0].partHash,flags:y}):x.getLogger(this).error(`Skipping asset ${p.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return t}_createEditsResult(e){const t=e.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(t))for(const n of t)s.push({id:n.id,editedFeatures:n.editedFeatures}),n.id===a&&(r={addResults:n.addResults??[],updateResults:n.updateResults??[],deleteResults:n.deleteResults??[],attachments:n.attachments,editMoment:n.editMoment});else r=t;const i=Ae(r);if(s.length>0){i.editedFeatureResults=[];for(const n of s){const{editedFeatures:o}=n,u=o?.spatialReference?new ne(o.spatialReference):null;i.editedFeatureResults.push({layerId:n.id,editedFeatures:Ie(o,u)})}}return i}_createAttachmentErrorResult(e,t){const a=t.details.messages?.[0]||t.message,s=t.details.httpStatus||t.details.messageCode;return{objectId:e,globalId:null,error:new A("feature-layer-source:attachment-failure",a,{code:s})}}_getFormDataForAttachment(e,t){const a=e instanceof FormData?e:e&&e.elements?new FormData(e):null;if(a)for(const s in t){const r=t[s];r!=null&&(a.set?a.set(s,r):a.append(s,r))}return a}_getLayerRequestOptions(e={}){const{parsedUrl:t,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...e,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...t.query,f:"json",...this._createRequestQueryOptions(e)},responseType:"json"}}async _filterRedundantAssetMaps(e){const{layer:t}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=t;if(s==null||a==null)return e;const i=oe(s);if(i==null)return e;const n=N(r.path,`../${i.id}`),o=new Array,u=new Array;for(const c of e)c.geometry.metadata.getExternalSourcesOnService(r).length>0?u.push(c):o.push(c);const l=u.map(c=>c.getAttribute(a)).filter($);if(l.length===0)return e;const{assetMapFieldRoles:{parentGlobalId:d,assetHash:y}}=s,p=new me;p.where=`${d} IN (${l.map(c=>`'${c}'`)})`,p.outFields=[y,d],p.returnGeometry=!1;const f=await he(n,p),{features:w}=f;return w.length===0?e:[...o,...u.filter(c=>{const I=c.getAttribute(a);if(!I)return!0;const{metadata:g}=c.geometry,R=w.filter(h=>h.getAttribute(d)===I);if(R.length===0)return!0;const q=R.map(h=>h.getAttribute(y));return g.getExternalSourcesOnService(r).flatMap(({source:h})=>h.flatMap(_=>_.parts.map(L=>L.partHash))).some(h=>q.every(_=>h!==_))})]}};F([v()],S.prototype,"type",void 0),F([v({constructOnly:!0})],S.prototype,"layer",void 0),F([v({readOnly:!0})],S.prototype,"queryTask",null),S=F([H("esri.layers.graphics.sources.FeatureLayerSource")],S);const _e=1e3,nt=S;export{nt as default};
