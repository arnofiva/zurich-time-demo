import{ah as o,ai as d,ak as w,as as h,ce as c,aS as R,aD as E}from"./index-8b5e7d9b.js";import{N as _}from"./DynamicLayerView3D-69073afb.js";import{j as b}from"./commonProperties-60f31277.js";import{b as H}from"./Query-630c5d65.js";import{p as I}from"./popupUtils-049df13a.js";import"./LayerView3D-239175ff.js";import"./projectExtentUtils-4faf6b68.js";import"./ImageMaterial-0b6c45d0.js";import"./LayerView-840504cd.js";import"./RefreshableLayerView-c5fc5cdc.js";import"./ElevationInfo-36952bdf.js";const P=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}async fetchPopupFeatures(a,s){const{layer:n}=this;if(!a)throw new h("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:n});const{popupEnabled:i}=n,r=I(n,s);if(!i||r==null)throw new h("imagerylayerview:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:i,popupTemplate:r});const y=await r.getRequiredFields(),l=new H;l.timeExtent=this.timeExtent,l.geometry=a,l.outFields=y,l.outSpatialReference=a.spatialReference;const{resolution:p,spatialReference:u}=this.view,g=this.view.type==="2d"?new c(p,p,u):new c(.5*p,.5*p,u),{returnTopmostRaster:x,showNoDataRecords:f}=r.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},v={returnDomainValues:!0,returnTopmostRaster:x,pixelSize:g,showNoDataRecords:f,signal:s!=null?s.signal:null};return n.queryVisibleRasters(l,v).then(D=>D)}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return o([d()],e.prototype,"layer",void 0),o([d()],e.prototype,"suspended",void 0),o([d(b)],e.prototype,"timeExtent",void 0),o([d()],e.prototype,"view",void 0),e=o([w("esri.views.layers.ImageryLayerView")],e),e};let m=class extends P(_){constructor(){super(...arguments),this.type="imagery-3d",this.redrawDebounced=R(async t=>{this.redraw((e,a)=>this._redrawImage(e,a),t)},2e3)}initialize(){this.addHandles([E(()=>this.view.basemapTerrain.ready,()=>this._initializeMaximumDataResolution(),{once:!0,initial:!0}),this.layer.on("redraw",()=>this._updatingHandles.addPromise(this.redrawDebounced()))]),this._updatingHandles.add(()=>this.layer?.exportImageServiceParameters?.version,()=>{this._updatingHandles.addPromise(this.refreshDebounced())}),this._updatingHandles.add(()=>this.layer?.renderer,()=>{this._updatingHandles.addPromise(this.refreshDebounced())}),this._updatingHandles.add(()=>this.timeExtent,()=>this._updatingHandles.addPromise(this.refreshDebounced()))}_initializeMaximumDataResolution(){this.maximumDataResolution=this.layer.loaded?this.layer.serviceRasterInfo.pixelSize:null}getFetchOptions(){return{timeExtent:this.timeExtent}}async processResult(t,e,a){e.imageOrCanvasElement?t.image=e.imageOrCanvasElement:(t.image=document.createElement("canvas"),t.pixelData=e.pixelData,await this._redrawImage(t,a))}async _redrawImage(t,e){if(!(t.image instanceof HTMLCanvasElement)||t.pixelData==null)throw new Error;const a=t.image,s=a.getContext("2d"),n=await this.layer.applyRenderer(t.pixelData,{signal:e}),i=this.layer.applyFilter(n).pixelBlock;if(i==null)throw new Error;a.width=i.width,a.height=i.height;const r=s.createImageData(i.width,i.height);r.data.set(i.getAsRGBA()),s.putImageData(r,0,0)}};m=o([w("esri.views.3d.layers.ImageryLayerView3D")],m);const q=m;export{q as default};
