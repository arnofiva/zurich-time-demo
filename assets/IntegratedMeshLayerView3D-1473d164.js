import{aO as a,ag as e,aP as s,ah as r,ai as o,aQ as p,ak as m}from"./index-5b8adf8e.js";import{E as n}from"./I3SMeshView3D-f6c35a91.js";import{n as l}from"./LayerView3D-64079dc6.js";import{u as d}from"./LayerView-a3d4a66c.js";import"./I3SOverrides-729604af.js";import"./I3SNode-ed2cc3f0.js";import"./I3SUtil-d618388d.js";import"./I3SBinaryReader-5797a2b6.js";import"./ReactiveSet-9b6e5f41.js";import"./meshFeatureSet-a87ceacc.js";import"./External-1018945d.js";import"./FeatureSet-04b2b8c3.js";import"./FeatureLayerView3D-97e8feac.js";import"./FeatureLayerViewBase3D-7d210055.js";import"./FeatureLikeLayerView3D-3f615e87.js";import"./dehydratedFeatureComparison-50b8e38c.js";import"./queryForSymbologySnapping-be291cc2.js";import"./elevationInfoUtils-cc8c21bf.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-06eb3199.js";import"./rendererConversion-4a9f1e66.js";import"./optimizedFeatureQueryEngineAdapter-fab01f44.js";import"./PooledRBush-a0d2032b.js";import"./quickselect-875de149.js";import"./popupUtils-60af7d20.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-c0c55c1f.js";import"./WhereClause-11a7e4df.js";import"./TimeOnly-99395aba.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-2f164960.js";import"./utils-40d3b03c.js";import"./generateRendererUtils-31a90f14.js";import"./FeatureStore-3bd3d828.js";import"./BoundsStore-6b3fb195.js";import"./projectExtentUtils-185c4bbd.js";import"./query-beb65f31.js";import"./pbfQueryUtils-5298f41b.js";import"./pbf-16e0ae52.js";import"./queryZScale-c917a291.js";import"./EventedSet-b9ca7498.js";import"./RefreshableLayerView-c7f84398.js";import"./SceneModification-483e1176.js";import"./persistable-cec6d2e4.js";import"./resourceExtension-5b2d5f5b.js";import"./SceneLayerWorker-caccfdb7.js";const c=.2;let t=class extends n(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?c:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),e),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),e),"modifications")}};r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"i3slayer",null),r([o(p)],t.prototype,"updatingProgress",void 0),r([o()],t.prototype,"updatingProgressValue",null),r([o()],t.prototype,"lodFactor",null),r([o({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([m("esri.views.3d.layers.SceneLayerView3D")],t);const st=t;export{st as default};
