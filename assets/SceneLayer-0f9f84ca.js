import{ah as i,ai as a,ak as b,cG as q,fa as B,aG as _,aj as I,aC as Z,bB as j,dn as X,az as c,aU as Y,aI as ee,gC as te,au as N,cH as re,ap as ie,cU as se,iK as E,bs as O,bi as u,at as ae,as as p,by as oe,aL as ne,dC as le,ax as pe,cW as $,bL as A,di as L,bl as de,db as ye,gL as ue,cX as ce,aB as he}from"./index-8b5e7d9b.js";import"./UniqueValueRenderer-176db886.js";import{u as fe}from"./jsonUtils-3d6448c4.js";import{i as me}from"./APIKeyMixin-9d7343aa.js";import{l as ge}from"./ArcGISService-1771a240.js";import{F as ve}from"./EditBusLayer-3babd061.js";import{u as be}from"./OperationalLayer-5c10068f.js";import{j as we}from"./PortalLayer-c3739096.js";import{t as Ie}from"./ScaleRangeLayer-5b526f5a.js";import{E as Le,P as x}from"./SceneService-954b3621.js";import{l as Fe,a as Se}from"./associatedFeatureServiceUtils-44938726.js";import{s as _e}from"./capabilities-c607cf72.js";import{f as je,m as Ee,c as Oe,y as $e,p as Ae}from"./commonProperties-60f31277.js";import{T as xe,V as Te}from"./featureLayerUtils-d891b150.js";import{t as Pe,p as Re}from"./FeatureReductionSelection-4ea33fb1.js";import{s as De}from"./fieldProperties-49b9eb67.js";import{c as qe}from"./FieldsIndex-85e142d0.js";import{s as U,l as Ne,u as Ue,m as Ce}from"./I3SLayerDefinitions-a9c572ad.js";import{C as Ge}from"./LabelClass-06cdad9c.js";import{i as T}from"./labelingInfo-4784a348.js";import{p as Qe}from"./LayerFloorInfo-5c97dc41.js";import{j as Ve}from"./persistable-961aa677.js";import{t as ke}from"./styleUtils-f17e2eb8.js";import{b as Je}from"./Query-630c5d65.js";import{x as P,b as He,E as Ke}from"./elevationInfoUtils-25b84599.js";import{p as Me}from"./popupUtils-6f3d55df.js";import{i as We}from"./I3SUtil-c67fd91a.js";import{n as ze,p as Be}from"./popupUtils-049df13a.js";import"./ColorStop-ac9a118d.js";import"./diffUtils-3ed1f592.js";import"./colorRamps-cf6fa9ce.js";import"./DictionaryLoader-1a1ab2cc.js";import"./heatmapUtils-3c0e0ece.js";import"./I3SIndexInfo-79029bcd.js";import"./ElevationInfo-36952bdf.js";import"./featureQueryAll-778379dd.js";import"./AttachmentQuery-ac66f9a7.js";import"./RelationshipQuery-249800df.js";import"./defaults-4b2d7493.js";import"./defaultsJSON-59981e75.js";import"./MD5-715f37cd.js";import"./resourceExtension-6429cea6.js";import"./I3SBinaryReader-024c287a.js";let y=class extends q{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([a({type:String,json:{read:!0,write:!0}})],y.prototype,"name",void 0),i([a({type:String,json:{read:!0,write:!0}})],y.prototype,"field",void 0),i([a({type:[Number],json:{read:!0,write:!0}})],y.prototype,"currentRangeExtent",void 0),i([a({type:[Number],json:{read:!0,write:!0}})],y.prototype,"fullRangeExtent",void 0),i([a({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],y.prototype,"type",void 0),y=i([b("esri.layers.support.RangeInfo")],y);var g;let F=g=class extends B(_.ofType(I)){constructor(e){super(e)}clone(){return new g(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){const t=e?.layer?.spatialReference;return t?this.toArray().map(r=>{if(!t.equals(r.spatialReference)){if(!Z(r.spatialReference,t))return e?.messages&&e.messages.push(new j("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const n=new I;X(r,n,t),r=n}const o=r.toJSON(e);return delete o.spatialReference,o}).filter(r=>r!=null):(e?.messages&&e.messages.push(new j("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(r=>r.toJSON(e)))}static fromJSON(e,t){const r=new g;return e.forEach(o=>r.add(I.fromJSON(o,t))),r}};F=g=i([b("esri.layers.support.PolygonCollection")],F);const v=F;var S;let h=S=class extends q{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new v,this._geometriesSource=null}initialize(){this.addHandles(Y(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,ee))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=v.fromJSON(e,r):this._geometriesSource={url:te(e,r),context:r}}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:o}=this._geometriesSource,n=await N(r,{responseType:"json",signal:t?.signal}),l=e.toJSON(),d=n.data.map(f=>({...f,spatialReference:l}));this.geometries=v.fromJSON(d,o),this._geometriesSource=null}clone(){const e=new S({geometries:re(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};i([a({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],h.prototype,"spatialRelationship",void 0),i([a({type:v,nonNullable:!0,json:{write:!0}}),Ve({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],h.prototype,"geometries",void 0),i([c(["web-scene","portal-item"],"geometries")],h.prototype,"readGeometries",null),h=S=i([b("esri.layers.support.SceneFilter")],h);const Ze=h,Xe=new Set(["3DObject","Point"]),R=De();let s=class extends ve(Le(ge(be(we(Ie(ie(me(se(he))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new _,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getFeatureType(t?.feature)?.domains?.[e];return r&&r.type!=="inherited"?r:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get fieldsIndex(){return new qe(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:U.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&xe(this.associatedLayer)}get geometryType(){return Ye[this.profile]||"mesh"}set renderer(e){E(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=e??_e;const{query:t,queryRelated:r,editing:{supportsGlobalId:o,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:d,supportsReturnServiceEditsInSourceSpatialReference:f},data:{supportsZ:C,supportsM:G,isVersioned:Q,supportsAttachment:V},operations:{supportsEditing:k,supportsAdd:J,supportsUpdate:H,supportsDelete:K,supportsQuery:M,supportsQueryAttachments:W,supportsAsyncConvert3D:z}}=e,m=e.operations.supportsChangeTracking,w=!!this.associatedLayer?.infoFor3D&&O();return{query:t,queryRelated:r,editing:{supportsGlobalId:o,supportsReturnServiceEditsInSourceSpatialReference:f,supportsRollbackOnFailure:n,supportsGeometryUpdate:w&&d,supportsUploadWithItemId:l},data:{supportsAttachment:V,supportsZ:C,supportsM:G,isVersioned:Q},operations:{supportsQuery:M,supportsQueryAttachments:W,supportsEditing:k&&m,supportsAdd:w&&J&&m,supportsDelete:w&&K&&m,supportsUpdate:H&&m,supportsAsyncConvert3D:z}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return r!=null&&D[r]?D[r]:(u.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(ae),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await ke(this,{origin:"service"},t),E(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){u.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new Je;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r?.features)for(const o of r.features)o.layer=this,o.sourceLayer=this;return r})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=oe(this.fieldsIndex,await ze(this,Be(this)));return We(this.parsedUrl.path,this.attributeStorageInfo??[],e,t,r)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new p("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const o=new ne;return o.attributes=r[0],o.layer=this,o.sourceLayer=this,o}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(u.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Me(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new p("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new p("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new p("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const o of this.statisticsInfo)if(o.name===r.name){const n=le(this.parsedUrl.path,o.href);return N(n,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(l=>l.data)}throw new p("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(x.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(x.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await pe(()=>import("./editingSupport-f6574de9.js"),["./editingSupport-f6574de9.js","./index-8b5e7d9b.js","./index-5447a158.css","./EditBusLayer-3babd061.js"],import.meta.url);let o=t;await this.load();const n=this.associatedLayer;if(!n)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,d=!!n.infoFor3D,f=o?.globalIdUsed??!0;if(d&&l==null)throw new p(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(d&&!f)throw new p(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return $(n.url)&&d&&e.deleteFeatures!=null&&l!=null&&(o={...o,globalIdToObjectId:await Te(n,e.deleteFeatures,l)}),r(this,n.source,e,o)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&!Xe.has(e.layerType))throw new p("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new p("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,o){let n=!1,l=!1;if(r==null)n=!0,l=!0;else{const d=o&&o.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,l=d;break;case"vertex-reference-frame":n=!0,l=!d;break;default:n=!1}}if(!n)throw new p("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new p("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new p("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(n=>n.name===e.name)),r=!!this.associatedLayer?.fields?.some(n=>n&&e.name===n.name),o={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=o}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=A(this);for(let r=0;r<e.length;r++){const o=e[r],n=this.originIdOf(o),l=this.associatedLayer.originIdOf(o);n<l&&(l===L.SERVICE||l===L.PORTAL_ITEM)&&t.setAtOrigin(o,this.associatedLayer[o],l)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.editingInfo?.lastEditDate,t=this.associatedLayer?.serverGens,r=this.associatedLayer?.getAtOrigin("fullExtent","service");!O()||this.associatedLayer?.infoFor3D==null||!r||!$(this.associatedLayer?.url)||!e||this.serviceUpdateTimeStamp?.lastUpdate===e.getTime()||!this.serviceUpdateTimeStamp&&t?.minServerGen===t?.serverGen||A(this).setAtOrigin("fullExtent",r.clone(),L.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:o}=await Fe(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,apiKey:this.apiKey,signal:e}),n=await Se.FeatureLayer();this.associatedLayer=new n({url:t,layerId:r,portalItem:o}),await this.associatedLayer.load()}catch(t){de(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await ye(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?u.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):u.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&P(u.getLogger(this),He("Mesh scene layers","relative-to-scene",e)),P(u.getLogger(this),Ke("Scene layers",e))}};i([a({types:{key:"type",base:Pe,typeMap:{selection:Re}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],s.prototype,"featureReduction",void 0),i([a({type:[y],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],s.prototype,"rangeInfos",void 0),i([a({json:{read:!1}})],s.prototype,"associatedLayer",void 0),i([a({type:["show","hide"]})],s.prototype,"listMode",void 0),i([a({type:["ArcGISSceneServiceLayer"]})],s.prototype,"operationalLayerType",void 0),i([a({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),i([a({...R.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"fields",void 0),i([a()],s.prototype,"types",null),i([a()],s.prototype,"typeIdField",null),i([a()],s.prototype,"templates",null),i([a()],s.prototype,"formTemplate",null),i([a({readOnly:!0,clonable:!1})],s.prototype,"fieldsIndex",null),i([a({type:Qe,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],s.prototype,"floorInfo",void 0),i([a(R.outFields)],s.prototype,"outFields",void 0),i([a({type:U,readOnly:!0,json:{read:!1}})],s.prototype,"nodePages",void 0),i([c("service","nodePages",["nodePages","pointNodePages"])],s.prototype,"readNodePages",null),i([a({type:[Ne],readOnly:!0})],s.prototype,"materialDefinitions",void 0),i([a({type:[Ue],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),i([a({type:[Ce],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),i([a({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),i([a({readOnly:!0})],s.prototype,"attributeStorageInfo",void 0),i([a({readOnly:!0})],s.prototype,"statisticsInfo",void 0),i([a({type:_.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],s.prototype,"excludeObjectIds",void 0),i([a({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],s.prototype,"definitionExpression",void 0),i([a({type:Ze,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],s.prototype,"filter",void 0),i([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),i([a(je)],s.prototype,"elevationInfo",null),i([a({readOnly:!0,json:{read:!1}})],s.prototype,"effectiveCapabilities",null),i([a({readOnly:!0})],s.prototype,"effectiveEditingEnabled",null),i([a({type:String})],s.prototype,"geometryType",null),i([a(Ee)],s.prototype,"labelsVisible",void 0),i([a({type:[Ge],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:T},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:T},write:!0}})],s.prototype,"labelingInfo",void 0),i([a(Oe)],s.prototype,"legendEnabled",void 0),i([a({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if(typeof e=="number"&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return r!==void 0?ue(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],s.prototype,"opacity",void 0),i([a({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"priority",void 0),i([a({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"semantic",void 0),i([a({types:fe,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],s.prototype,"renderer",null),i([a({json:{read:!1}})],s.prototype,"cachedDrawingInfo",void 0),i([c("service","cachedDrawingInfo")],s.prototype,"readCachedDrawingInfo",null),i([a({readOnly:!0,json:{read:!1}})],s.prototype,"capabilities",null),i([a({type:Boolean,json:{read:!1}})],s.prototype,"editingEnabled",null),i([a({readOnly:!0,json:{write:!1,read:!1}})],s.prototype,"infoFor3D",null),i([a({readOnly:!0,json:{write:!1,read:!1}})],s.prototype,"relationships",null),i([a($e)],s.prototype,"popupEnabled",void 0),i([a({type:ce,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0),i([a({readOnly:!0,json:{read:!1}})],s.prototype,"defaultPopupTemplate",null),i([a({type:String,json:{read:!1}})],s.prototype,"objectIdField",void 0),i([c("service","objectIdField",["objectIdField","fields"])],s.prototype,"readObjectIdField",null),i([a({type:String,json:{read:!1}})],s.prototype,"globalIdField",void 0),i([c("service","globalIdField",["globalIdField","fields"])],s.prototype,"readGlobalIdField",null),i([a({readOnly:!0,type:String,json:{read:!1}})],s.prototype,"displayField",null),i([a({type:String,json:{read:!1}})],s.prototype,"profile",void 0),i([c("service","profile",["store.profile"])],s.prototype,"readProfile",null),i([a({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],s.prototype,"normalReferenceFrame",void 0),i([a(Ae)],s.prototype,"screenSizePerspectiveEnabled",void 0),i([a({json:{read:!1,origins:{service:{read:!0}}}})],s.prototype,"serviceItemId",void 0),s=i([b("esri.layers.SceneLayer")],s);const D={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Ye={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},kt=s;export{kt as default};
