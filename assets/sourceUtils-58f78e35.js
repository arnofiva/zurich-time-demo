import{eK as d,eL as m,c3 as h,eM as p,c2 as y,eN as g,eO as a,ax as w}from"./index-8b5e7d9b.js";import{n as I}from"./date-430969b3.js";class _{constructor(){this.code=null,this.description=null}}class b{constructor(t){this.error=new _,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function c(n){return new b(n)}class q{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function x(n){return new q(n)}const u=new Set;function A(n,t,r,f=!1){u.clear();for(const i in r){const e=n.get(i);if(!e)continue;const o=P(e,r[i]);if(u.add(e.name),e&&(f||e.editable)){const l=d(e,o);if(l)return c(m(l,e,o));t[e.name]=o}}for(const i of n?.requiredFields??[])if(!u.has(i.name))return c(`missing required field "${i.name}"`);return null}function P(n,t){let r=t;return h(n)&&typeof t=="string"?r=parseFloat(t):p(n)&&t!=null&&typeof t!="string"?r=String(t):y(n)&&typeof t=="string"&&(r=I(t)),g(r)}let s;function F(n,t){if(!n||!a(t))return n;if("rings"in n||"paths"in n){if(s==null)throw new TypeError("geometry engine not loaded");return s.simplify(t,n)}return n}async function j(){return s==null&&(s=await w(()=>import("./geometryEngineJSON-24073ea5.js"),["./geometryEngineJSON-24073ea5.js","./geometryEngineBase-2020e3dc.js","./index-8b5e7d9b.js","./index-5447a158.css","./geometryEngineJSON-3c45c350.js","./json-48e3ea08.js"],import.meta.url)),s}async function G(n,t){!a(n)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await j()}export{G as I,x as d,c as f,A as p,F as w};
