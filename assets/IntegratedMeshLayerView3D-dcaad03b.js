import{aO as a,ag as e,aP as s,ah as r,ai as o,aQ as p,ak as m}from"./index-bbf8a9f0.js";import{E as n}from"./I3SMeshView3D-27c5f289.js";import{n as l}from"./LayerView3D-2d85611c.js";import{u as d}from"./LayerView-8ce6e606.js";import"./I3SOverrides-c78efdc7.js";import"./I3SNode-3d3130e9.js";import"./I3SUtil-2edfd1c0.js";import"./I3SBinaryReader-de922cf7.js";import"./ReactiveSet-402e717c.js";import"./meshFeatureSet-ea40a317.js";import"./External-48efc6b5.js";import"./FeatureSet-360fc98b.js";import"./FeatureLayerView3D-0b4ec538.js";import"./FeatureLayerViewBase3D-91c764b1.js";import"./FeatureLikeLayerView3D-9aecd334.js";import"./dehydratedFeatureComparison-1b9c4c1c.js";import"./queryForSymbologySnapping-42cd8994.js";import"./elevationInfoUtils-47341dd3.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-796ca421.js";import"./rendererConversion-6facada5.js";import"./optimizedFeatureQueryEngineAdapter-05dc7562.js";import"./PooledRBush-6aa8242b.js";import"./quickselect-c60d89a3.js";import"./popupUtils-192c1389.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-f0498edf.js";import"./WhereClause-201f4663.js";import"./TimeOnly-58cd9599.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-22c50f5f.js";import"./utils-a6d73f0b.js";import"./generateRendererUtils-c6e4de1b.js";import"./FeatureStore-4933e4f2.js";import"./BoundsStore-adbd6b3d.js";import"./projectExtentUtils-7b4cae07.js";import"./query-65baef3e.js";import"./pbfQueryUtils-97d4b760.js";import"./pbf-c2795c5e.js";import"./queryZScale-d1347eb8.js";import"./EventedSet-ea1202c0.js";import"./RefreshableLayerView-509a18e7.js";import"./SceneModification-c1454174.js";import"./persistable-a6e8e1c0.js";import"./resourceExtension-718cef0d.js";import"./SceneLayerWorker-803e09af.js";const c=.2;let t=class extends n(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?c:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),e),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),e),"modifications")}};r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"i3slayer",null),r([o(p)],t.prototype,"updatingProgress",void 0),r([o()],t.prototype,"updatingProgressValue",null),r([o()],t.prototype,"lodFactor",null),r([o({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([m("esri.views.3d.layers.SceneLayerView3D")],t);const st=t;export{st as default};
