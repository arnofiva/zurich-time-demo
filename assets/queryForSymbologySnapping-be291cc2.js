import{hB as G,bh as x,hC as O,hD as P,aB as z,hE as q,hF as B,hG as $,hH as H,hy as A}from"./index-5b8adf8e.js";import{u as J}from"./elevationInfoUtils-cc8c21bf.js";async function k(a,d,l,b,s){const{elevationProvider:f,renderCoordsHelper:i}=a,{elevationInfo:u}=d,{pointsInFeatures:w,spatialReference:h}=b,g=x.fromJSON(h),y=O(u,!0),m=await P(y,g,s);z(s);const c=[],e=new Set,t=new Set;p.spatialReference=g;const o=a.elevationProvider.spatialReference??a.spatialReference;for(const{objectId:n,points:r}of w){const I=l(n);if(I==null){for(const R of r)c.push(R.z??0);e.add(n);continue}I.isDraped&&t.add(n);const C=I.graphic.geometry;S.setFromElevationInfo(J(C,u)),S.updateFeatureExpressionInfoContext(m,I.graphic,d);for(const{x:R,y:F,z:E}of r)p.x=R,p.y=F,p.z=E??0,await q(p,D,o,0,{signal:s}),B(D,f,S,i,v),c.push(v.z)}return{elevations:c,drapedObjectIds:t,failedObjectIds:e}}const S=new $,p=G(0,0,0,x.WGS84),v=new H,D=[0,0,0];async function K(a,d,l){if(a==null||d.candidates.length===0)return j;const b=a.graphics3DGraphicsByObjectID??a.graphics3DGraphics,s=[],f=[],{renderer:i}=a,u=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?A():null,w=async(e,{graphic:t,graphics3DSymbol:o})=>{const n=await u,r=await a.getRenderingInfoAsync(t,i,n,{signal:l});return r==null?[]:o.queryForSnapping(e,g,r,l)},{candidates:h,spatialReference:g}=d;for(let e=0;e<h.length;++e){const t=h[e],{objectId:o}=t,n=typeof o=="number"?b?.get(o):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(s.push(w(t,n)),f.push(e))}if(s.length===0)return j;const y=await Promise.all(s);z(l);const m=[],c=[];for(let e=0;e<y.length;++e){const t=y[e],o=f[e];for(const n of t)m.push(n),c.push(o)}return{candidates:m,sourceCandidateIndices:c}}const j={candidates:[],sourceCandidateIndices:[]};export{k as c,K as r};
