import{ax as m,fq as j,js as l,cd as f}from"./index-9f45a803.js";import{t as p}from"./query-06688d95.js";import{d as R}from"./FeatureSet-2173b2b2.js";import"./pbfQueryUtils-99cd93da.js";import"./pbf-20eb0c5c.js";import"./queryZScale-14796f3a.js";function F(r,t){const e=r.toJSON();return e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.orderByFields&&(e.orderByFields=e.orderByFields.join(",")),e.outFields&&!t?.returnCountOnly?e.outFields.includes("*")?e.outFields="*":e.outFields=e.outFields.join(","):delete e.outFields,e.outSR&&(e.outSR=j(e.outSR)),e.dynamicDataSource&&(e.layer=JSON.stringify({source:e.dynamicDataSource}),delete e.dynamicDataSource),e}async function b(r,t,e){const a=await y(r,t,e),o=a.data,s=o.geometryType,n=o.spatialReference,c={};for(const d of o.relatedRecordGroups){const u={fields:void 0,objectIdFieldName:void 0,geometryType:s,spatialReference:n,hasZ:!!o.hasZ,hasM:!!o.hasM,features:d.relatedRecords};if(d.objectId!=null)c[d.objectId]=u;else for(const i of Object.keys(d))i!=="relatedRecords"&&(c[d[i]]=u)}return{...a,data:c}}async function h(r,t,e){const a=await y(r,t,e,{returnCountOnly:!0}),o=a.data,s={};for(const n of o.relatedRecordGroups)n.objectId!=null&&(s[n.objectId]=n.count);return{...a,data:s}}async function y(r,t,e={},a){const o=p({...r.query,f:"json",...a,...F(t,a)});return m(r.path+"/queryRelatedRecords",{...e,query:{...e.query,...o}})}async function g(r,t,e){t=l.from(t);const a=f(r);return b(a,t,e).then(o=>{const s=o.data,n={};return Object.keys(s).forEach(c=>n[c]=R.fromJSON(s[c])),n})}async function B(r,t,e){t=l.from(t);const a=f(r);return h(a,t,{...e}).then(o=>o.data)}export{g as executeRelationshipQuery,B as executeRelationshipQueryForCount};
