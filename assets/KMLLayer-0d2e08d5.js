import{cH as v,cr as z,kn as K,cn as J,au as H,dN as O,ko as x,kp as g,kq as S,kr as W,bd as G,dg as A,fa as V,aU as M,aI as c,aH as $,db as j,ch as I,cF as q,aG as L,ah as i,ai as l,ks as B,az as P,ak as _,hM as D,fb as U,ap as Q,bk as X,el as Y,at as Z,cm as ee,aB as te}from"./index-8b5e7d9b.js";import{a as re}from"./BlendLayer-dce91235.js";import{u as se}from"./OperationalLayer-5c10068f.js";import{j as ie}from"./PortalLayer-c3739096.js";import{t as oe}from"./ScaleRangeLayer-5b526f5a.js";import{d as le}from"./commonProperties-60f31277.js";import"./jsonUtils-3d6448c4.js";import"./FeatureSet-05a1ff98.js";import"./jsonUtils-16d33138.js";import"./ElevationInfo-36952bdf.js";import"./UniqueValueRenderer-176db886.js";import"./ColorStop-ac9a118d.js";import"./diffUtils-3ed1f592.js";import"./colorRamps-cf6fa9ce.js";import"./DictionaryLoader-1a1ab2cc.js";import"./FieldsIndex-85e142d0.js";import"./heatmapUtils-3c0e0ece.js";const ae={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function C(e){const t=e.folders||[],r=t.slice(),s=new Map,a=new Map,p=new Map,m=new Map,b=new Map,f={esriGeometryPoint:a,esriGeometryPolyline:p,esriGeometryPolygon:m};(e.featureCollection?.layers||[]).forEach(o=>{const d=v(o);d.featureSet.features=[];const y=o.featureSet.geometryType;s.set(y,d);const k=o.layerDefinition.objectIdField;y==="esriGeometryPoint"?E(a,k,o.featureSet.features):y==="esriGeometryPolyline"?E(p,k,o.featureSet.features):y==="esriGeometryPolygon"&&E(m,k,o.featureSet.features)}),e.groundOverlays&&e.groundOverlays.forEach(o=>{b.set(o.id,o)}),t.forEach(o=>{o.networkLinkIds.forEach(d=>{const y=ue(d,o.id,e.networkLinks);y&&r.push(y)})}),r.forEach(o=>{if(o.featureInfos){o.points=v(s.get("esriGeometryPoint")),o.polylines=v(s.get("esriGeometryPolyline")),o.polygons=v(s.get("esriGeometryPolygon")),o.mapImages=[];for(const d of o.featureInfos)switch(d.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const y=f[d.type].get(d.id);y&&o[ae[d.type]]?.featureSet.features.push(y);break}case"GroundOverlay":{const y=b.get(d.id);y&&o.mapImages.push(y);break}}o.fullExtent=F([o])}});const h=F(r);return{folders:t,sublayers:r,extent:h}}function N(e,t,r,s){const a=z?.findCredential(e);e=K(e,{token:a?.token});const p=J.kmlServiceUrl;return H(p,{query:{url:e,model:"simple",folders:"",refresh:r!==0||void 0,outSR:JSON.stringify(t)},responseType:"json",signal:s})}function R(e,t,r=null,s=[]){const a=[],p={},m=t.sublayers,b=new Set(t.folders.map(f=>f.id));return m.forEach(f=>{const h=new e;if(r?h.read(f,r):h.read(f),s.length&&b.has(h.id)&&(h.visible=s.includes(h.id)),p[f.id]=h,f.parentFolderId!=null&&f.parentFolderId!==-1){const o=p[f.parentFolderId];o.sublayers||(o.sublayers=[]),o.sublayers?.unshift(h)}else a.unshift(h)}),a}function E(e,t,r){r.forEach(s=>{e.set(s.attributes[t],s)})}function ne(e,t){let r;return t.some(s=>s.id===e&&(r=s,!0)),r}function ue(e,t,r){const s=ne(e,r);return s&&(s.parentFolderId=t,s.networkLink=s),s}function F(e){const t=O(x),r=O(x);for(const s of e){if(s.polygons?.featureSet?.features)for(const a of s.polygons.featureSet.features)g(t,a.geometry),S(r,t);if(s.polylines?.featureSet?.features)for(const a of s.polylines.featureSet.features)g(t,a.geometry),S(r,t);if(s.points?.featureSet?.features)for(const a of s.points.featureSet.features)g(t,a.geometry),S(r,t);if(s.mapImages)for(const a of s.mapImages)g(t,a.extent),S(r,t)}return W(r,x)?void 0:{xmin:r[0],ymin:r[1],zmin:r[2],xmax:r[3],ymax:r[4],zmax:r[5],spatialReference:G.WGS84}}var w;let u=w=class extends A.EventedMixin(V(D)){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.id=null,this.networkLink=null,this.parent=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.layer=null,this.addHandles([M(()=>this.sublayers,"after-add",({item:t})=>{t.parent=this,t.layer=this.layer},c),M(()=>this.sublayers,"after-remove",({item:t})=>{t.layer=t.parent=null},c),$(()=>this.sublayers,(t,r)=>{if(r)for(const s of r)s.layer=s.parent=null;if(t)for(const s of t)s.parent=this,s.layer=this.layer},c),$(()=>this.layer,t=>{if(this.sublayers)for(const r of this.sublayers)r.layer=t},c)])}initialize(){j(()=>this.networkLink).then(()=>j(()=>this.visible===!0)).then(()=>this.load())}load(e){if(!this.networkLink||this.networkLink.viewFormat)return;const t=e!=null?e.signal:null,r=this._fetchService(this._get("networkLink")?.href??"",t).then(s=>{const a=F(s.sublayers);this.fullExtent=I.fromJSON(a),this.sourceJSON=s;const p=q(L.ofType(w),R(w,s));this.sublayers?this.sublayers.addMany(p):this.sublayers=p,this.layer?.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(r),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}_fetchService(e,t){return N(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then(r=>C(r.data))}};i([l()],u.prototype,"description",void 0),i([l({type:I})],u.prototype,"fullExtent",void 0),i([l()],u.prototype,"id",void 0),i([l({readOnly:!0,value:null})],u.prototype,"networkLink",void 0),i([l({json:{write:{allowNull:!0}}})],u.prototype,"parent",void 0),i([l({type:L.ofType(u),json:{write:{allowNull:!0}}})],u.prototype,"sublayers",void 0),i([l({value:null,json:{read:{source:"name",reader:e=>B(e)}}})],u.prototype,"title",void 0),i([l({value:!0})],u.prototype,"visible",null),i([P("visible",["visibility"])],u.prototype,"readVisible",null),i([l()],u.prototype,"sourceJSON",void 0),i([l()],u.prototype,"layer",void 0),u=w=i([_("esri.layers.support.KMLSublayer")],u);const T=u,ye=["kml","xml"];let n=class extends re(U(oe(se(ie(Q(te)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new X({getCollections:()=>[this.sublayers],getChildrenFunction:t=>t.sublayers}),this.outSpatialReference=G.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([$(()=>this.sublayers,(e,t)=>{t&&t.forEach(r=>{r.parent=null,r.layer=null}),e&&e.forEach(r=>{r.parent=this,r.layer=this})},c),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readSublayersFromItemOrWebMap(e,t){this._visibleFolders=t.visibleFolders}readSublayers(e,t,r){return R(T,t,r,this._visibleFolders)}writeSublayers(e,t){const r=[],s=e.toArray();for(;s.length;){const a=s[0];a.networkLink||(a.visible&&r.push(a.id),a.sublayers&&s.push(...a.sublayers.toArray())),s.shift()}t.visibleFolders=r}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?Y(this.url,ye)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,t=[],r=s=>{s.visible&&(t.push(s),s.sublayers&&s.sublayers.forEach(r))};return e&&e.forEach(r),t}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(Z).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const t=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:N(this.url??"",this.outSpatialReference,this.refreshInterval,e)),r=C(t.data);r&&this.read(r,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent!=null&&(e=this.extent.clone());const t=r=>{if(r.sublayers)for(const s of r.sublayers.items)t(s),s.visible&&s.fullExtent&&(e!=null?e.union(s.fullExtent):e=s.fullExtent.clone())};return t(this),e}};i([l({readOnly:!0})],n.prototype,"allSublayers",void 0),i([l({type:G})],n.prototype,"outSpatialReference",void 0),i([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0),i([l({readOnly:!0,json:{read:!1,write:!1}})],n.prototype,"legendEnabled",void 0),i([l({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),i([l({type:["KML"]})],n.prototype,"operationalLayerType",void 0),i([l({})],n.prototype,"resourceInfo",void 0),i([l({type:L.ofType(T),json:{write:{ignoreOrigin:!0}}})],n.prototype,"sublayers",void 0),i([P(["web-map","portal-item"],"sublayers",["visibleFolders"])],n.prototype,"readSublayersFromItemOrWebMap",null),i([P("service","sublayers",["sublayers"])],n.prototype,"readSublayers",null),i([ee("sublayers")],n.prototype,"writeSublayers",null),i([l({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),i([l({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],n.prototype,"title",null),i([l(le)],n.prototype,"url",void 0),i([l({readOnly:!0})],n.prototype,"visibleSublayers",null),i([l({type:I})],n.prototype,"extent",void 0),i([l()],n.prototype,"fullExtent",null),n=i([_("esri.layers.KMLLayer")],n);const Ge=n;export{Ge as default};
