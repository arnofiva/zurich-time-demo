import{ah as t,ai as r,ak as S,hM as R,aS as q,ch as I,as as $,f4 as c,iW as P,gt as C,cJ as N,c7 as E,fb as U,ap as J,bd as x,iK as F,iL as _,cM as T,d6 as k,em as W,fo as X,cm as Y,fp as b,cX as D,aB as L}from"./index-8b5e7d9b.js";import"./UniqueValueRenderer-176db886.js";import{m as Q,u as V}from"./jsonUtils-3d6448c4.js";import{l as M,o as G}from"./clientSideDefaults-7259c628.js";import{v as Z,W as B,q as z,V as A,S as K}from"./wfsUtils-38d961b8.js";import{d as H}from"./FeatureSet-05a1ff98.js";import{a as ee}from"./BlendLayer-dce91235.js";import{o as te}from"./CustomParametersMixin-45f14a7d.js";import{p as ie}from"./FeatureEffectLayer-50d5188d.js";import{c as re}from"./FeatureReductionLayer-826e078c.js";import{u as oe}from"./OperationalLayer-5c10068f.js";import{c as se}from"./OrderedLayer-b68b3bb4.js";import{j as ae}from"./PortalLayer-c3739096.js";import{t as ne}from"./ScaleRangeLayer-5b526f5a.js";import{a as pe}from"./TemporalLayer-683091de.js";import{f as le,m as de,c as ue,b as me,y as ye,p as ce,d as fe}from"./commonProperties-60f31277.js";import{s as he}from"./fieldProperties-49b9eb67.js";import{C as ge}from"./LabelClass-06cdad9c.js";import{i as we}from"./labelingInfo-4784a348.js";import{b as m}from"./Query-630c5d65.js";import{p as ve}from"./popupUtils-6f3d55df.js";import"./ColorStop-ac9a118d.js";import"./diffUtils-3ed1f592.js";import"./colorRamps-cf6fa9ce.js";import"./DictionaryLoader-1a1ab2cc.js";import"./FieldsIndex-85e142d0.js";import"./heatmapUtils-3c0e0ece.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./defaultsJSON-59981e75.js";import"./geojson-ede2d4c1.js";import"./date-430969b3.js";import"./xmlUtils-444cb4c0.js";import"./jsonUtils-16d33138.js";import"./FeatureEffect-40ff6b77.js";import"./FeatureFilter-5ab88729.js";import"./FeatureReductionSelection-4ea33fb1.js";import"./featureLayerUtils-d891b150.js";import"./featureQueryAll-778379dd.js";import"./AttachmentQuery-ac66f9a7.js";import"./RelationshipQuery-249800df.js";import"./MD5-715f37cd.js";import"./ElevationInfo-36952bdf.js";import"./defaults-4b2d7493.js";let d=class extends R{constructor(){super(...arguments),this._connection=null,this.capabilities=M(!1,!1),this.type="wfs",this.refresh=q(async e=>{await this.load();const{extent:i}=await this._connection.invoke("refresh",e);return i&&(this.sourceJSON.extent=i),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(e){const i=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:i})),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,i={}){await this.load(i);const s=await this._connection.invoke("queryFeatures",e?e.toJSON():null,i);return H.fromJSON(s)}async queryFeaturesJSON(e,i={}){return await this.load(i),this._connection.invoke("queryFeatures",e?e.toJSON():null,i)}async queryFeatureCount(e,i={}){return await this.load(i),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,i)}async queryObjectIds(e,i={}){return await this.load(i),this._connection.invoke("queryObjectIds",e?e.toJSON():null,i)}async queryExtent(e,i={}){await this.load(i);const s=await this._connection.invoke("queryExtent",e?e.toJSON():null,i);return{count:s.count,extent:I.fromJSON(s.extent)}}async querySnapping(e,i={}){return await this.load(i),this._connection.invoke("querySnapping",e,i)}async _createLoadOptions(e){const{url:i,customParameters:s,name:n,namespaceUri:p,fields:a,geometryType:u,swapXY:f}=this.layer,y=this.layer.originOf("spatialReference")==="defaults"?void 0:this.layer.spatialReference;if(!i)throw new $("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await Z(i,{customParameters:s,...e}));const h=["fields","geometryType","name","namespaceUri","swapXY"].some(w=>this.layer[w]==null),l=h?await B(this.wfsCapabilities,n,p,{spatialReference:y,customParameters:s,signal:e?.signal}):{...z(a??[]),geometryType:u,name:n,namespaceUri:p,spatialReference:y,swapXY:f},g=A(this.wfsCapabilities.readFeatureTypes(),l.name,l.namespaceUri),j=c.toJSON(l.geometryType);return{customParameters:s,featureType:g,fields:l.fields?.map(w=>w.toJSON())??[],geometryField:l.geometryField,geometryType:j,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:l.objectIdField,spatialReference:l.spatialReference?.toJSON(),swapXY:!!l.swapXY}}async _startWorker(e){const[i,s]=await P([this._createLoadOptions(e),C("WFSSourceWorker",{...e,strategy:N("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),n=i.error||s.error||null,p=s.value||null;if(n)throw p&&p.close(),n;const a=i.value;this._connection=s.value;const u=(await this._connection.invoke("load",a,e)).extent;this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:E},extent:u,fields:a.fields,geometryType:a.geometryType,objectIdField:a.objectIdField,geometryField:a.geometryField,drawingInfo:G(a.geometryType),name:a.featureType.title,wfsInfo:{name:a.featureType.name,featureUrl:a.getFeatureUrl,maxFeatures:3e3,swapXY:a.swapXY,supportedSpatialReferences:a.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:a.featureType.namespaceUri}}}};t([r()],d.prototype,"capabilities",void 0),t([r({constructOnly:!0})],d.prototype,"layer",void 0),t([r()],d.prototype,"sourceJSON",void 0),t([r()],d.prototype,"type",void 0),t([r()],d.prototype,"wfsCapabilities",void 0),d=t([S("esri.layers.graphics.sources.WFSSource")],d);var v;const O=he();let o=v=class extends se(te(re(ie(ee(pe(U(ne(oe(ae(J(L))))))))))){static fromWFSLayerInfo(e){const{customParameters:i,fields:s,geometryField:n,geometryType:p,name:a,namespaceUri:u,objectIdField:f,spatialReference:y,swapXY:h,url:l,wfsCapabilities:g}=e;return new v({customParameters:i,fields:s,geometryField:n,geometryType:p,name:a,namespaceUri:u,objectIdField:f,spatialReference:y,swapXY:h,url:l,wfsCapabilities:g})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxFeatures=3e3,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=x.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),F(this.renderer,this.fieldsIndex),_(this.timeInfo,this.fieldsIndex)})),Promise.resolve(this)}get capabilities(){return this.source?.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,i,s){const n=e.filter(p=>p.name!==K);this.geometryField&&n.unshift(new T({name:this.geometryField,alias:this.geometryField,type:"geometry"})),k(s,n.map(p=>p.toJSON()),i)}get parsedUrl(){return W(this.url)}set renderer(e){F(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){return this.source?.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return ve(this,e)}createQuery(){const e=new m;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:i,timeExtent:s}=this;return e.timeExtent=i!=null&&s!=null?s.offset(-i.value,i.unit):s||null,e}getFieldDomain(e,i){return this.getField(e)?.domain}getField(e){return this.fieldsIndex?.get(e)}queryFeatures(e,i){return this.load().then(()=>this.source.queryFeatures(m.from(e)||this.createQuery(),i)).then(s=>{if(s?.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}queryObjectIds(e,i){return this.load().then(()=>this.source.queryObjectIds(m.from(e)||this.createQuery(),i))}queryFeatureCount(e,i){return this.load().then(()=>this.source.queryFeatureCount(m.from(e)||this.createQuery(),i))}queryExtent(e,i){return this.load().then(()=>this.source.queryExtent(m.from(e)||this.createQuery(),i))}async hasDataChanged(){try{const{dataChanged:e,updates:i}=await this.source.refresh(this.customParameters);return i!=null&&this.read(i,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};t([r({readOnly:!0})],o.prototype,"capabilities",null),t([r({type:String})],o.prototype,"copyright",void 0),t([r({readOnly:!0})],o.prototype,"createQueryVersion",null),t([r({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],o.prototype,"customParameters",void 0),t([r(X("dateFieldsTimeReference"))],o.prototype,"dateFieldsTimeZone",void 0),t([r({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),t([r({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),t([r({type:String})],o.prototype,"displayField",void 0),t([r(le)],o.prototype,"elevationInfo",void 0),t([r({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"featureUrl",void 0),t([r({type:[T],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],o.prototype,"fields",void 0),t([Y("fields")],o.prototype,"writeFields",null),t([r(O.fieldsIndex)],o.prototype,"fieldsIndex",void 0),t([r({type:I,json:{name:"extent"}})],o.prototype,"fullExtent",void 0),t([r()],o.prototype,"geometryField",void 0),t([r({type:String,json:{read:{source:"layerDefinition.geometryType",reader:c.read},write:{target:"layerDefinition.geometryType",writer:c.write,ignoreOrigin:!0},origins:{service:{read:c.read}}}})],o.prototype,"geometryType",void 0),t([r({type:String})],o.prototype,"id",void 0),t([r(de)],o.prototype,"labelsVisible",void 0),t([r({type:[ge],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:we},write:!0}})],o.prototype,"labelingInfo",void 0),t([r(ue)],o.prototype,"legendEnabled",void 0),t([r({type:["show","hide"]})],o.prototype,"listMode",void 0),t([r({type:String})],o.prototype,"objectIdField",void 0),t([r({type:["WFS"]})],o.prototype,"operationalLayerType",void 0),t([r({type:b,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"maxFeatures",void 0),t([r({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],o.prototype,"mode",void 0),t([r({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"name",void 0),t([r({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"namespaceUri",void 0),t([r(me)],o.prototype,"opacity",void 0),t([r(O.outFields)],o.prototype,"outFields",void 0),t([r({readOnly:!0})],o.prototype,"parsedUrl",null),t([r(ye)],o.prototype,"popupEnabled",void 0),t([r({type:D,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),t([r({types:Q,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:V,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],o.prototype,"renderer",null),t([r(ce)],o.prototype,"screenSizePerspectiveEnabled",void 0),t([r({readOnly:!0})],o.prototype,"source",void 0),t([r({type:x,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],o.prototype,"spatialReference",void 0),t([r({readOnly:!0,type:[b],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"spatialReferences",void 0),t([r({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"swapXY",void 0),t([r({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],o.prototype,"title",void 0),t([r({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),t([r(fe)],o.prototype,"url",void 0),t([r({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"version",void 0),t([r()],o.prototype,"wfsCapabilities",null),o=v=t([S("esri.layers.WFSLayer")],o);const lt=o;export{lt as default};
