import{f3 as w,aK as T,dY as _,ax as I,ah as o,ai as s,ak as u,ap as O,aq as x,ar as L,f6 as $,as as M,aY as b,aM as N,gs as j,aw as A,av as d,bm as h,aC as E,iB as V,aF as D}from"./index-bbf8a9f0.js";import{j as J}from"./persistable-a6e8e1c0.js";import{i as K}from"./APIKeyMixin-c4e9f1d1.js";import{E as P,P as m}from"./SceneService-d7fc8660.js";import{s as U,l as C,u as R,m as z}from"./I3SLayerDefinitions-0ca10459.js";import{f as l}from"./SceneModification-c1454174.js";import{x as f,p as F,E as Y}from"./elevationInfoUtils-47341dd3.js";import"./resourceExtension-718cef0d.js";import"./I3SIndexInfo-32fe1774.js";var a;let n=a=class extends w(T.ofType(l)){constructor(e){super(e),this.url=null}clone(){return new a({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const r=new a;for(const p of e)r.add(l.fromJSON(p,t));return r}static async fromUrl(e,t,r){const p={url:_(e),origin:"service"},g=await I(e,{responseType:"json",signal:r?.signal}),S=t.toJSON(),y=[];for(const c of g.data)y.push(l.fromJSON({...c,geometry:{...c.geometry,spatialReference:S}},p));return new a({url:e,items:y})}};o([s({type:String})],n.prototype,"url",void 0),n=a=o([u("esri.layers.support.SceneModifications")],n);const v=n;let i=class extends P(O(x(L($(M(K(D))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null}initialize(){this.addHandles(b(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,N))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,r){this._modificationsSource={url:j(e,r),context:r}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){A(r)}if(await this._fetchService(t),this._modificationsSource!=null){const r=await v.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(m.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(m.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new d("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";f(h.getLogger(this),F(t,"absolute-height",e)),f(h.getLogger(this),Y(t,e))}};o([s({type:String,readOnly:!0})],i.prototype,"geometryType",void 0),o([s({type:["show","hide"]})],i.prototype,"listMode",void 0),o([s({type:["IntegratedMeshLayer"]})],i.prototype,"operationalLayerType",void 0),o([s({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),o([s({type:U,readOnly:!0})],i.prototype,"nodePages",void 0),o([s({type:[C],readOnly:!0})],i.prototype,"materialDefinitions",void 0),o([s({type:[R],readOnly:!0})],i.prototype,"textureSetDefinitions",void 0),o([s({type:[z],readOnly:!0})],i.prototype,"geometryDefinitions",void 0),o([s({readOnly:!0})],i.prototype,"serviceUpdateTimeStamp",void 0),o([s({type:v}),J({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],i.prototype,"modifications",void 0),o([E(["web-scene","portal-item"],"modifications")],i.prototype,"readModifications",null),o([s(V)],i.prototype,"elevationInfo",null),o([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),i=o([u("esri.layers.IntegratedMeshLayer")],i);const ee=i;export{ee as default};
