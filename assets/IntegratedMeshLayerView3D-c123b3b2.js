import{aO as a,ag as e,aP as s,ah as r,ai as o,aQ as p,ak as m}from"./index-23eb2934.js";import{E as n}from"./I3SMeshView3D-123852e1.js";import{n as l}from"./LayerView3D-929ba89a.js";import{u as d}from"./LayerView-a39e6744.js";import"./I3SOverrides-6963a4b4.js";import"./I3SNode-71f2422f.js";import"./I3SUtil-1c8b7211.js";import"./I3SBinaryReader-3a3e7bcb.js";import"./ReactiveSet-450c4bd5.js";import"./meshFeatureSet-ead5c906.js";import"./External-4dd0bf2f.js";import"./FeatureSet-f1314e24.js";import"./FeatureLayerView3D-a357cfe6.js";import"./FeatureLayerViewBase3D-65ab9a9b.js";import"./FeatureLikeLayerView3D-d427647e.js";import"./dehydratedFeatureComparison-4f6797b0.js";import"./queryForSymbologySnapping-0ac1d377.js";import"./elevationInfoUtils-4737e990.js";import"./hash-6f442295.js";import"./Graphics3DObjectStates-dbe937a9.js";import"./rendererConversion-df5abb48.js";import"./optimizedFeatureQueryEngineAdapter-4d2eebdd.js";import"./PooledRBush-e692eae8.js";import"./quickselect-c2336d0d.js";import"./popupUtils-00bfb769.js";import"./floorFilterUtils-73949d2d.js";import"./QueryEngine-4b08bd0a.js";import"./WhereClause-e5d88aed.js";import"./TimeOnly-825cc71c.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-064259aa.js";import"./utils-da4779cb.js";import"./generateRendererUtils-3eb8ee30.js";import"./FeatureStore-a1073f60.js";import"./BoundsStore-c119242a.js";import"./projectExtentUtils-da173d2e.js";import"./query-edfc9ae0.js";import"./pbfQueryUtils-2a79a9a2.js";import"./pbf-25f22ae3.js";import"./queryZScale-d82cfcd2.js";import"./EventedSet-5a75c962.js";import"./RefreshableLayerView-cb8cab99.js";import"./SceneModification-a92ba5f5.js";import"./persistable-1a713f0b.js";import"./resourceExtension-7953bc1b.js";import"./SceneLayerWorker-01e894aa.js";const c=.2;let t=class extends n(l(d)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?c:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),e),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const i=new s;return i.layer=this.layer,i.sourceLayer=this.layer,i}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const i=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>i,()=>this._modifications=i.toArray(),e),"modifications")}};r([o()],t.prototype,"layer",void 0),r([o()],t.prototype,"i3slayer",null),r([o(p)],t.prototype,"updatingProgress",void 0),r([o()],t.prototype,"updatingProgressValue",null),r([o()],t.prototype,"lodFactor",null),r([o({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([m("esri.views.3d.layers.SceneLayerView3D")],t);const st=t;export{st as default};
