import{av as l,aB as c,ef as g,cb as _,aS as d,bq as F,bm as w,bb as S,ej as E,ek as q}from"./index-9f45a803.js";import{m as x}from"./FeatureStore-a1c5375d.js";import{x as T,W as b,j as R}from"./QueryEngine-63de7343.js";import{E as I,N as j}from"./geojson-8abf57d7.js";import{p as C}from"./sourceUtils-5f8de9d6.js";import{a as $,B as k}from"./wfsUtils-5258de4d.js";import"./BoundsStore-06767837.js";import"./PooledRBush-111c20e9.js";import"./quickselect-bc894a5c.js";import"./optimizedFeatureQueryEngineAdapter-69c20470.js";import"./WhereClause-1b5e4358.js";import"./TimeOnly-13c0e1f2.js";import"./json-48e3ea08.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./utils-5080f89d.js";import"./utils-869b9ed8.js";import"./generateRendererUtils-e0419035.js";import"./date-430969b3.js";import"./xmlUtils-444cb4c0.js";class Y{constructor(){this._queryEngine=null,this._customParameters=null}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(t,e){const{getFeatureUrl:n,getFeatureOutputFormat:p,fields:o,geometryType:s,featureType:i,objectIdField:u,customParameters:r}=t,{spatialReference:a,getFeatureSpatialReference:h}=$(n,i,t.spatialReference);this._featureType=i,this._customParameters=r,this._getFeatureUrl=n,this._getFeatureOutputFormat=p,this._getFeatureSpatialReference=h;try{await T(h,a)}catch{throw new l("unsupported-projection","Projection not supported",{inSpatialReference:h,outSpatialReference:a})}c(e);const y=g.fromLayerJSON({fields:o,dateFieldsTimeReference:o.some(f=>f.type==="esriFieldTypeDate")?{timeZoneIANA:_}:null}),m=await this._snapshotFeatures({fieldsIndex:y,geometryType:s,objectIdField:u,spatialReference:a},e.signal);return this._queryEngine=new b({fieldsIndex:y,geometryType:s,hasM:!1,hasZ:!1,objectIdField:u,spatialReference:a,timeInfo:null,featureStore:new x({geometryType:s,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(m),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new l("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){return this._customParameters=t,this._snapshotTask?.abort(),this._snapshotTask=d(e=>this._snapshotFeatures(this._queryEngine,e)),this._snapshotTask.promise.then(e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)},e=>{this._queryEngine.featureStore.clear(),F(e)||w.getLogger("esri.layers.WFSLayer").error(new l("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:e}))}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures({objectIdField:t,geometryType:e,spatialReference:n,fieldsIndex:p},o){const s=await k(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:o});I(s,this._getFeatureSpatialReference.wkid),c(o);const i=j(s,{geometryType:e,hasZ:!1,objectIdField:t});if(!S(n,this._getFeatureSpatialReference))for(const r of i)r.geometry!=null&&(r.geometry=E(R(q(r.geometry,e,!1,!1),this._getFeatureSpatialReference,n)));let u=1;for(const r of i){const a={};C(p,a,r.attributes,!0),r.attributes=a,a[t]==null&&(r.objectId=a[t]=u++)}return i}}export{Y as default};
