const x=9999999e31,A=2e-7,E={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function L(e){return E[e]??[-34028234663852886e22,34028234663852886e22]}function S(e,r,p){if(e.depthCount&&e.depthCount>1)return;const{pixels:f,statistics:m,pixelType:a}=e,M=f[0].length,b=e.bandMasks??[],o=e.mask??new Uint8Array(M).fill(255),N=a==="f32"||a==="f64",d=L(a);let c=!1;for(let s=0;s<f.length;s++){const n=typeof r=="number"?r:r[s];if(n==null)continue;const k=m?.[s]?.minValue??d[0],g=m?.[s]?.maxValue??d[1];if(k>n+Number.EPSILON||g<n-Number.EPSILON)continue;const l=b[s]||o.slice(),i=f[s],h=p?.customFloatTolerance;if(N&&h!==0){let t=h;t||(t=Math.abs(n)>=x?A*Math.abs(n):a==="f32"?2**-23:Number.EPSILON);for(let u=0;u<i.length;u++)l[u]&&Math.abs(i[u]-n)<t&&(i[u]=0,l[u]=0,o[u]=0,c=!0)}else for(let t=0;t<i.length;t++)l[t]&&i[t]===n&&(i[t]=0,l[t]=0,o[t]=0,c=!0);b[s]=l}c&&(e.bandMasks=e.bandMasks||e.pixels.length>1?b:null,e.mask=o),c&&"updateStatistics"in e&&e.updateStatistics()}export{L as s,S as u};
