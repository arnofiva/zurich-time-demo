import{bi as j,ah as o,ai as p,bd as f,az as h,ch as v,aA as K,cm as U,ak as $,aS as L,iF as V,cj as P,iG as C,iH as M,iI as k,em as x,as as c,au as S,cl as z,ga as b,cs as _,gu as q,g2 as A,iJ as F}from"./index-8b5e7d9b.js";import{I as J,d as D}from"./commonProperties-60f31277.js";import{r as B}from"./I3SIndexInfo-79029bcd.js";let H=null;function Z(){return H}const N="esri.layers.mixins.SceneService",g=j.getLogger(N),X=d=>{let s=class extends d{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=L(async(r,e,i)=>{switch(r){case m.SAVE:return this._save(e);case m.SAVE_AS:return this._saveAs(i,e)}})}readSpatialReference(r,e){return this._readSpatialReference(e)}_readSpatialReference(r){if(r.spatialReference!=null)return f.fromJSON(r.spatialReference);{const e=r.store,i=e.indexCRS||e.geographicCRS,t=i&&parseInt(i.substring(i.lastIndexOf("/")+1,i.length),10);return t!=null?new f(t):null}}readFullExtent(r,e,i){if(r!=null&&typeof r=="object"){const n=r.spatialReference==null?{...r,spatialReference:this._readSpatialReference(e)}:r;return v.fromJSON(n,i)}const t=e.store,a=this._readSpatialReference(e);return a==null||t?.extent==null||!Array.isArray(t.extent)||t.extent.some(n=>n<w)?null:new v({xmin:t.extent[0],ymin:t.extent[1],xmax:t.extent[2],ymax:t.extent[3],spatialReference:a})}parseVersionString(r){const e={major:Number.NaN,minor:Number.NaN,versionString:r},i=r.split(".");return i.length>=2&&(e.major=parseInt(i[0],10),e.minor=parseInt(i[1],10)),e}readVersion(r,e){const i=e.store,t=i.version!=null?i.version.toString():"";return this.parseVersionString(t)}readTitlePortalItem(r){return this.sublayerTitleMode!=="item-title"?void 0:r}readTitleService(r,e){const i=this.portalItem?.title;if(this.sublayerTitleMode==="item-title")return V(this.url,e.name);let t=e.name;if(!t&&this.url){const a=P(this.url);a!=null&&(t=a.title)}return this.sublayerTitleMode==="item-title-and-service-name"&&i&&(t=i+" - "+t),C(t)}set url(r){const e=M({layer:this,url:r,nonStandardUrlAllowed:!1,logger:g});this._set("url",e.url),e.layerId!=null&&this._set("layerId",e.layerId)}writeUrl(r,e,i,t){k(this,r,"layers",e,t)}get parsedUrl(){const r=this._get("url"),e=x(r);return this.layerId!=null&&(e.path=`${e.path}/layers/${this.layerId}`),e}async _fetchIndexAndUpdateExtent(r,e){this.indexInfo=B(this.parsedUrl.path,this.rootNode,r,this.apiKey,g,e),this.fullExtent==null||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(r){if(r?.type==="page"){const e=r.rootIndex%r.pageSize,i=r.rootPage?.nodes?.[e];if(i?.obb?.center==null||i.obb.halfSize==null)throw new c("sceneservice:invalid-node-page","Invalid node page.");if(i.obb.center[0]<w||this.fullExtent==null||this.fullExtent.hasZ)return;const t=i.obb.halfSize,a=i.obb.center[2],n=Math.sqrt(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);this.fullExtent.zmin=a-n,this.fullExtent.zmax=a+n}else if(r?.type==="node"){const e=r.rootNode?.mbs;if(!Array.isArray(e)||e.length!==4||e[0]<w)return;const i=e[2],t=e[3],{fullExtent:a}=this;a&&(a.zmin=i-t,a.zmax=i+t)}}async _fetchService(r){if(this.url==null)throw new c("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(this.layerId==null&&/SceneServer\/*$/i.test(this.url)){const e=await this._fetchFirstLayerId(r);e!=null&&(this.layerId=e)}return this._fetchServiceLayer(r)}async _fetchFirstLayerId(r){const e=await S(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:r});if(e.data&&Array.isArray(e.data.layers)&&e.data.layers.length>0)return e.data.layers[0].id}async _fetchServiceLayer(r){const e=await S(this.parsedUrl?.path??"",{query:{f:"json",token:this.apiKey},responseType:"json",signal:r});e.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let i=!1;if(e.data.layerType&&e.data.layerType==="Voxel"&&(i=!0),i)return this._fetchVoxelServiceLayer();const t=e.data;this.read(t,this._getServiceContext()),this.validateLayer(t)}async _fetchVoxelServiceLayer(r){const e=(await S(this.parsedUrl?.path+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:r})).data;this.read(e,this._getServiceContext()),this.validateLayer(e)}_getServiceContext(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&typeof this.beforeSave=="function"&&await this.beforeSave()}validateLayer(r){}_updateTypeKeywords(r,e,i){r.typeKeywords||(r.typeKeywords=[]);const t=e.getTypeKeywords();for(const a of t)r.typeKeywords.push(a);r.typeKeywords&&(r.typeKeywords=r.typeKeywords.filter((a,n,u)=>u.indexOf(a)===n),i===y.newItem&&(r.typeKeywords=r.typeKeywords.filter(a=>a!=="Hosted Service")))}async _saveAs(r,e){const i={...R,...e};let t=z.from(r);if(!t)throw new c("sceneservice:portal-item-required","_saveAs() requires a portal item to save to");b(t),t.id&&(t=t.clone(),t.id=null);const a=t.portal||_.getDefault();await this._ensureLoadBeforeSave(),t.type=I,t.portal=a;const n={origin:"portal-item",url:null,messages:[],portal:a,portalItem:t,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},u={layers:[this.write({},n)]};return await Promise.all(n.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(u,n,i),t.url=this.url,t.title||(t.title=this.title),this._updateTypeKeywords(t,i,y.newItem),await a.signIn(),await a.user?.addItem({item:t,folder:i?.folder,data:u}),await q(this.resourceReferences,n,null),this.portalItem=t,A(n),n.portalItem=t,t}async _save(r){const e={...R,...r};if(!this.portalItem)throw new c("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(b(this.portalItem),this.portalItem.type!==I)throw new c("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${I}"`);await this._ensureLoadBeforeSave();const i={origin:"portal-item",url:this.portalItem.itemUrl&&x(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||_.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},t={layers:[this.write({},i)]};return await Promise.all(i.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(t,i,e),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,e,y.existingItem),await F(this.portalItem,t,this.resourceReferences,i,null),A(i),this.portalItem}async _validateAgainstJSONSchema(r,e,i){let t=e.messages?.filter(l=>l.type==="error").map(l=>new c(l.name,l.message,l.details))??[];i?.validationOptions?.ignoreUnsupported&&(t=t.filter(l=>l.name!=="layer:unsupported"&&l.name!=="symbol:unsupported"&&l.name!=="symbol-layer:unsupported"&&l.name!=="property:unsupported"&&l.name!=="url:unsupported"&&l.name!=="scenemodification:unsupported"));const a=i?.validationOptions,n=a?.enabled,u=Z();if(n&&u){const l=(await u()).validate(r,i.portalItemLayerType);if(l.length>0){const E=`Layer item did not validate:
${l.join(`
`)}`;if(g.error(`_validateAgainstJSONSchema(): ${E}`),a.failPolicy==="throw"){const T=l.map(O=>new c("sceneservice:schema-validation",O)).concat(t);throw new c("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:T})}}}if(t.length>0)throw new c("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:t})}};return o([p(J)],s.prototype,"id",void 0),o([p({type:f})],s.prototype,"spatialReference",void 0),o([h("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readSpatialReference",null),o([p({type:v})],s.prototype,"fullExtent",void 0),o([h("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readFullExtent",null),o([p({readOnly:!0,type:K})],s.prototype,"heightModelInfo",void 0),o([p({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],s.prototype,"minScale",void 0),o([p({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],s.prototype,"maxScale",void 0),o([p({readOnly:!0})],s.prototype,"version",void 0),o([h("version",["store.version"])],s.prototype,"readVersion",null),o([p({type:String,json:{read:{source:"copyrightText"}}})],s.prototype,"copyright",void 0),o([p({type:String,json:{read:!1}})],s.prototype,"sublayerTitleMode",void 0),o([p({type:String})],s.prototype,"title",void 0),o([h("portal-item","title")],s.prototype,"readTitlePortalItem",null),o([h("service","title",["name"])],s.prototype,"readTitleService",null),o([p({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],s.prototype,"layerId",void 0),o([p(D)],s.prototype,"url",null),o([U("url")],s.prototype,"writeUrl",null),o([p()],s.prototype,"parsedUrl",null),o([p({readOnly:!0})],s.prototype,"store",void 0),o([p({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],s.prototype,"rootNode",void 0),s=o([$(N)],s),s},w=-1e38;var y;(function(d){d[d.existingItem=0]="existingItem",d[d.newItem=1]="newItem"})(y||(y={}));const I="Scene Service",R={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var m;(function(d){d[d.SAVE=0]="SAVE",d[d.SAVE_AS=1]="SAVE_AS"})(m||(m={}));export{X as E,m as P};
