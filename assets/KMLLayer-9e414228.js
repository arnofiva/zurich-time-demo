import{cm as v,gx as N,kR as z,f7 as J,ax as W,d5 as O,kS as x,kT as g,kU as S,kV as V,bh as I,cz as A,f3 as q,aY as M,aM as c,aL as P,cu as _,c0 as L,gI as D,aK as G,ah as i,ai as l,kW as H,aC as $,ak as j,hn as U,f4 as B,f5 as Y,f6 as Q,aq as X,ar as Z,as as ee,bo as te,d$ as se,aw as re,ci as ie,aE as oe,aF as le}from"./index-35e234f2.js";import"./FeatureSet-890fea54.js";const ae={esriGeometryPoint:"points",esriGeometryPolyline:"polylines",esriGeometryPolygon:"polygons"};function C(e){const t=e.folders||[],s=t.slice(),r=new Map,a=new Map,p=new Map,b=new Map,m=new Map,f={esriGeometryPoint:a,esriGeometryPolyline:p,esriGeometryPolygon:b};(e.featureCollection?.layers||[]).forEach(o=>{const d=v(o);d.featureSet.features=[];const y=o.featureSet.geometryType;r.set(y,d);const k=o.layerDefinition.objectIdField;y==="esriGeometryPoint"?E(a,k,o.featureSet.features):y==="esriGeometryPolyline"?E(p,k,o.featureSet.features):y==="esriGeometryPolygon"&&E(b,k,o.featureSet.features)}),e.groundOverlays&&e.groundOverlays.forEach(o=>{m.set(o.id,o)}),t.forEach(o=>{o.networkLinkIds.forEach(d=>{const y=ue(d,o.id,e.networkLinks);y&&s.push(y)})}),s.forEach(o=>{if(o.featureInfos){o.points=v(r.get("esriGeometryPoint")),o.polylines=v(r.get("esriGeometryPolyline")),o.polygons=v(r.get("esriGeometryPolygon")),o.mapImages=[];for(const d of o.featureInfos)switch(d.type){case"esriGeometryPoint":case"esriGeometryPolyline":case"esriGeometryPolygon":{const y=f[d.type].get(d.id);y&&o[ae[d.type]]?.featureSet.features.push(y);break}case"GroundOverlay":{const y=m.get(d.id);y&&o.mapImages.push(y);break}}o.fullExtent=F([o])}});const h=F(s);return{folders:t,sublayers:s,extent:h}}function R(e,t,s,r){const a=N?.findCredential(e);e=z(e,{token:a?.token});const p=J.kmlServiceUrl;return W(p,{query:{url:e,model:"simple",folders:"",refresh:s!==0||void 0,outSR:JSON.stringify(t)},responseType:"json",signal:r})}function T(e,t,s=null,r=[]){const a=[],p={},b=t.sublayers,m=new Set(t.folders.map(f=>f.id));return b.forEach(f=>{const h=new e;if(s?h.read(f,s):h.read(f),r.length&&m.has(h.id)&&(h.visible=r.includes(h.id)),p[f.id]=h,f.parentFolderId!=null&&f.parentFolderId!==-1){const o=p[f.parentFolderId];o.sublayers||(o.sublayers=[]),o.sublayers?.unshift(h)}else a.unshift(h)}),a}function E(e,t,s){s.forEach(r=>{e.set(r.attributes[t],r)})}function ne(e,t){let s;return t.some(r=>r.id===e&&(s=r,!0)),s}function ue(e,t,s){const r=ne(e,s);return r&&(r.parentFolderId=t,r.networkLink=r),r}function F(e){const t=O(x),s=O(x);for(const r of e){if(r.polygons?.featureSet?.features)for(const a of r.polygons.featureSet.features)g(t,a.geometry),S(s,t);if(r.polylines?.featureSet?.features)for(const a of r.polylines.featureSet.features)g(t,a.geometry),S(s,t);if(r.points?.featureSet?.features)for(const a of r.points.featureSet.features)g(t,a.geometry),S(s,t);if(r.mapImages)for(const a of r.mapImages)g(t,a.extent),S(s,t)}return V(s,x)?void 0:{xmin:s[0],ymin:s[1],zmin:s[2],xmax:s[3],ymax:s[4],zmax:s[5],spatialReference:I.WGS84}}var w;let u=w=class extends A.EventedMixin(q(U)){constructor(...e){super(...e),this.description=null,this.fullExtent=null,this.id=null,this.networkLink=null,this.parent=null,this.sublayers=null,this.title=null,this.sourceJSON=null,this.layer=null,this.addHandles([M(()=>this.sublayers,"after-add",({item:t})=>{t.parent=this,t.layer=this.layer},c),M(()=>this.sublayers,"after-remove",({item:t})=>{t.layer=t.parent=null},c),P(()=>this.sublayers,(t,s)=>{if(s)for(const r of s)r.layer=r.parent=null;if(t)for(const r of t)r.parent=this,r.layer=this.layer},c),P(()=>this.layer,t=>{if(this.sublayers)for(const s of this.sublayers)s.layer=t},c)])}initialize(){_(()=>this.networkLink).then(()=>_(()=>this.visible===!0)).then(()=>this.load())}load(e){if(!this.networkLink||this.networkLink.viewFormat)return;const t=e!=null?e.signal:null,s=this._fetchService(this._get("networkLink")?.href??"",t).then(r=>{const a=F(r.sublayers);this.fullExtent=L.fromJSON(a),this.sourceJSON=r;const p=D(G.ofType(w),T(w,r));this.sublayers?this.sublayers.addMany(p):this.sublayers=p,this.layer?.emit("sublayer-update"),this.layer&&this.layer.notifyChange("visibleSublayers")});return this.addResolvingPromise(s),Promise.resolve(this)}get visible(){return this._get("visible")}set visible(e){this._get("visible")!==e&&(this._set("visible",e),this.layer&&this.layer.notifyChange("visibleSublayers"))}readVisible(e,t){return!!t.visibility}_fetchService(e,t){return R(e,this.layer.outSpatialReference,this.layer.refreshInterval,t).then(s=>C(s.data))}};i([l()],u.prototype,"description",void 0),i([l({type:L})],u.prototype,"fullExtent",void 0),i([l()],u.prototype,"id",void 0),i([l({readOnly:!0,value:null})],u.prototype,"networkLink",void 0),i([l({json:{write:{allowNull:!0}}})],u.prototype,"parent",void 0),i([l({type:G.ofType(u),json:{write:{allowNull:!0}}})],u.prototype,"sublayers",void 0),i([l({value:null,json:{read:{source:"name",reader:e=>H(e)}}})],u.prototype,"title",void 0),i([l({value:!0})],u.prototype,"visible",null),i([$("visible",["visibility"])],u.prototype,"readVisible",null),i([l()],u.prototype,"sourceJSON",void 0),i([l()],u.prototype,"layer",void 0),u=w=i([j("esri.layers.support.KMLSublayer")],u);const K=u,ye=["kml","xml"];let n=class extends B(Y(Q(X(Z(ee(le)))))){constructor(...e){super(...e),this._visibleFolders=[],this.allSublayers=new te({getCollections:()=>[this.sublayers],getChildrenFunction:t=>t.sublayers}),this.outSpatialReference=I.WGS84,this.path=null,this.legendEnabled=!1,this.operationalLayerType="KML",this.sublayers=null,this.type="kml",this.url=null}initialize(){this.addHandles([P(()=>this.sublayers,(e,t)=>{t&&t.forEach(s=>{s.parent=null,s.layer=null}),e&&e.forEach(s=>{s.parent=this,s.layer=this})},c),this.on("sublayer-update",()=>this.notifyChange("fullExtent"))])}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readSublayersFromItemOrWebMap(e,t){this._visibleFolders=t.visibleFolders}readSublayers(e,t,s){return T(K,t,s,this._visibleFolders)}writeSublayers(e,t){const s=[],r=e.toArray();for(;r.length;){const a=r[0];a.networkLink||(a.visible&&s.push(a.id),a.sublayers&&r.push(...a.sublayers.toArray())),r.shift()}t.visibleFolders=s}get title(){const e=this._get("title");return e&&this.originOf("title")!=="defaults"?e:this.url?se(this.url,ye)||"KML":e||""}set title(e){this._set("title",e)}get visibleSublayers(){const e=this.sublayers,t=[],s=r=>{r.visible&&(t.push(r),r.sublayers&&r.sublayers.forEach(s))};return e&&e.forEach(s),t}get fullExtent(){return this._recomputeFullExtent()}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["KML"],supportsData:!1},e).catch(re).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){super.destroy(),this.allSublayers.destroy()}async _fetchService(e){const t=await Promise.resolve().then(()=>this.resourceInfo?{ssl:!1,data:this.resourceInfo}:R(this.url??"",this.outSpatialReference,this.refreshInterval,e)),s=C(t.data);s&&this.read(s,{origin:"service"})}_recomputeFullExtent(){let e=null;this.extent!=null&&(e=this.extent.clone());const t=s=>{if(s.sublayers)for(const r of s.sublayers.items)t(r),r.visible&&r.fullExtent&&(e!=null?e.union(r.fullExtent):e=r.fullExtent.clone())};return t(this),e}};i([l({readOnly:!0})],n.prototype,"allSublayers",void 0),i([l({type:I})],n.prototype,"outSpatialReference",void 0),i([l({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0),i([l({readOnly:!0,json:{read:!1,write:!1}})],n.prototype,"legendEnabled",void 0),i([l({type:["show","hide","hide-children"]})],n.prototype,"listMode",void 0),i([l({type:["KML"]})],n.prototype,"operationalLayerType",void 0),i([l({})],n.prototype,"resourceInfo",void 0),i([l({type:G.ofType(K),json:{write:{ignoreOrigin:!0}}})],n.prototype,"sublayers",void 0),i([$(["web-map","portal-item"],"sublayers",["visibleFolders"])],n.prototype,"readSublayersFromItemOrWebMap",null),i([$("service","sublayers",["sublayers"])],n.prototype,"readSublayers",null),i([ie("sublayers")],n.prototype,"writeSublayers",null),i([l({readOnly:!0,json:{read:!1}})],n.prototype,"type",void 0),i([l({json:{origins:{"web-map":{read:{source:"title"}}},write:{ignoreOrigin:!0}}})],n.prototype,"title",null),i([l(oe)],n.prototype,"url",void 0),i([l({readOnly:!0})],n.prototype,"visibleSublayers",null),i([l({type:L})],n.prototype,"extent",void 0),i([l()],n.prototype,"fullExtent",null),n=i([j("esri.layers.KMLLayer")],n);const he=n;export{he as default};
